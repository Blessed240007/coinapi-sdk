/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnChainDappsRestApi);
  }
}(this, function(expect, OnChainDappsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnChainDappsRestApi.CURVEFINANCEETHEREUMApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CURVEFINANCEETHEREUMApi', function() {
    describe('cURVEFINANCEETHEREUMAccountsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMAccountsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMAccountsCurrent
        //instance.cURVEFINANCEETHEREUMAccountsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMActiveAccountsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMActiveAccountsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMActiveAccountsCurrent
        //instance.cURVEFINANCEETHEREUMActiveAccountsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMDepositsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMDepositsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMDepositsCurrent
        //instance.cURVEFINANCEETHEREUMDepositsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMDexAmmProtocolsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMDexAmmProtocolsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMDexAmmProtocolsCurrent
        //instance.cURVEFINANCEETHEREUMDexAmmProtocolsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent
        //instance.cURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMLiquidityGaugesCurrent', function() {
      it('should call cURVEFINANCEETHEREUMLiquidityGaugesCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMLiquidityGaugesCurrent
        //instance.cURVEFINANCEETHEREUMLiquidityGaugesCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent
        //instance.cURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMLiquidityPoolFeesCurrent', function() {
      it('should call cURVEFINANCEETHEREUMLiquidityPoolFeesCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMLiquidityPoolFeesCurrent
        //instance.cURVEFINANCEETHEREUMLiquidityPoolFeesCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent
        //instance.cURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMLiquidityPoolsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMLiquidityPoolsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMLiquidityPoolsCurrent
        //instance.cURVEFINANCEETHEREUMLiquidityPoolsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMLpTokensCurrent', function() {
      it('should call cURVEFINANCEETHEREUMLpTokensCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMLpTokensCurrent
        //instance.cURVEFINANCEETHEREUMLpTokensCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMRewardTokensCurrent', function() {
      it('should call cURVEFINANCEETHEREUMRewardTokensCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMRewardTokensCurrent
        //instance.cURVEFINANCEETHEREUMRewardTokensCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMSwapsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMSwapsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMSwapsCurrent
        //instance.cURVEFINANCEETHEREUMSwapsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMTokensCurrent', function() {
      it('should call cURVEFINANCEETHEREUMTokensCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMTokensCurrent
        //instance.cURVEFINANCEETHEREUMTokensCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent
        //instance.cURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent
        //instance.cURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cURVEFINANCEETHEREUMWithdrawsCurrent', function() {
      it('should call cURVEFINANCEETHEREUMWithdrawsCurrent successfully', function(done) {
        //uncomment below and update the code to test cURVEFINANCEETHEREUMWithdrawsCurrent
        //instance.cURVEFINANCEETHEREUMWithdrawsCurrent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
