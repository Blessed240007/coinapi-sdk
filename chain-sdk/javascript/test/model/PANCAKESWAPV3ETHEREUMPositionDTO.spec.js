/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OnChainDappsRestApi);
  }
}(this, function(expect, OnChainDappsRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PANCAKESWAPV3ETHEREUMPositionDTO', function() {
    it('should create an instance of PANCAKESWAPV3ETHEREUMPositionDTO', function() {
      // uncomment below and update the code to test PANCAKESWAPV3ETHEREUMPositionDTO
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be.a(OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO);
    });

    it('should have the property entryTime (base name: "entry_time")', function() {
      // uncomment below and update the code to test the property entryTime
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property recvTime (base name: "recv_time")', function() {
      // uncomment below and update the code to test the property recvTime
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property blockNumber (base name: "block_number")', function() {
      // uncomment below and update the code to test the property blockNumber
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property pool (base name: "pool")', function() {
      // uncomment below and update the code to test the property pool
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property hashOpened (base name: "hash_opened")', function() {
      // uncomment below and update the code to test the property hashOpened
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property hashClosed (base name: "hash_closed")', function() {
      // uncomment below and update the code to test the property hashClosed
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property blockNumberOpened (base name: "block_number_opened")', function() {
      // uncomment below and update the code to test the property blockNumberOpened
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property timestampOpened (base name: "timestamp_opened")', function() {
      // uncomment below and update the code to test the property timestampOpened
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property blockNumberClosed (base name: "block_number_closed")', function() {
      // uncomment below and update the code to test the property blockNumberClosed
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property timestampClosed (base name: "timestamp_closed")', function() {
      // uncomment below and update the code to test the property timestampClosed
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property tickLower (base name: "tick_lower")', function() {
      // uncomment below and update the code to test the property tickLower
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property tickUpper (base name: "tick_upper")', function() {
      // uncomment below and update the code to test the property tickUpper
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property liquidityToken (base name: "liquidity_token")', function() {
      // uncomment below and update the code to test the property liquidityToken
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property liquidityTokenType (base name: "liquidity_token_type")', function() {
      // uncomment below and update the code to test the property liquidityTokenType
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property liquidity (base name: "liquidity")', function() {
      // uncomment below and update the code to test the property liquidity
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property liquidityUsd (base name: "liquidity_usd")', function() {
      // uncomment below and update the code to test the property liquidityUsd
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property cumulativeDepositTokenAmounts (base name: "cumulative_deposit_token_amounts")', function() {
      // uncomment below and update the code to test the property cumulativeDepositTokenAmounts
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property cumulativeDepositUsd (base name: "cumulative_deposit_usd")', function() {
      // uncomment below and update the code to test the property cumulativeDepositUsd
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property cumulativeWithdrawTokenAmounts (base name: "cumulative_withdraw_token_amounts")', function() {
      // uncomment below and update the code to test the property cumulativeWithdrawTokenAmounts
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property cumulativeWithdrawUsd (base name: "cumulative_withdraw_usd")', function() {
      // uncomment below and update the code to test the property cumulativeWithdrawUsd
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property cumulativeRewardUsd (base name: "cumulative_reward_usd")', function() {
      // uncomment below and update the code to test the property cumulativeRewardUsd
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property depositCount (base name: "deposit_count")', function() {
      // uncomment below and update the code to test the property depositCount
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

    it('should have the property withdrawCount (base name: "withdraw_count")', function() {
      // uncomment below and update the code to test the property withdrawCount
      //var instance = new OnChainDappsRestApi.PANCAKESWAPV3ETHEREUMPositionDTO();
      //expect(instance).to.be();
    });

  });

}));
