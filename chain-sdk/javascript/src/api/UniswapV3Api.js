/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UniswapV3BundleDTO from '../model/UniswapV3BundleDTO';
import UniswapV3BurnDTO from '../model/UniswapV3BurnDTO';
import UniswapV3FactoryDTO from '../model/UniswapV3FactoryDTO';
import UniswapV3MintDTO from '../model/UniswapV3MintDTO';
import UniswapV3PoolDTO from '../model/UniswapV3PoolDTO';
import UniswapV3PoolDayDataDTO from '../model/UniswapV3PoolDayDataDTO';
import UniswapV3PoolHourDataDTO from '../model/UniswapV3PoolHourDataDTO';
import UniswapV3PositionDTO from '../model/UniswapV3PositionDTO';
import UniswapV3PositionSnapshotDTO from '../model/UniswapV3PositionSnapshotDTO';
import UniswapV3SwapDTO from '../model/UniswapV3SwapDTO';
import UniswapV3TickDTO from '../model/UniswapV3TickDTO';
import UniswapV3TickDayDataDTO from '../model/UniswapV3TickDayDataDTO';
import UniswapV3TokenDTO from '../model/UniswapV3TokenDTO';
import UniswapV3TokenHourDataDTO from '../model/UniswapV3TokenHourDataDTO';
import UniswapV3TokenV3DayDataDTO from '../model/UniswapV3TokenV3DayDataDTO';
import UniswapV3TransactionDTO from '../model/UniswapV3TransactionDTO';
import UniswapV3UniswapDayDataDTO from '../model/UniswapV3UniswapDayDataDTO';

/**
* UniswapV3 service.
* @module api/UniswapV3Api
* @version v1
*/
export default class UniswapV3Api {

    /**
    * Constructs a new UniswapV3Api. 
    * @alias module:api/UniswapV3Api
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the uniswapV3BundlesCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3BundlesCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3BundleDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bundles (current)
     * Gets bundles.
     * @param {module:api/UniswapV3Api~uniswapV3BundlesCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3BundleDTO>}
     */
    uniswapV3BundlesCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3BundleDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/bundles/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3BurnsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3BurnsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3BurnDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Burns (current)
     * Gets burns.
     * @param {module:api/UniswapV3Api~uniswapV3BurnsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3BurnDTO>}
     */
    uniswapV3BurnsCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3BurnDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/burns/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3FactoriesCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3FactoriesCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3FactoryDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Factories (current)
     * Gets factories.
     * @param {module:api/UniswapV3Api~uniswapV3FactoriesCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3FactoryDTO>}
     */
    uniswapV3FactoriesCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3FactoryDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/factories/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3MintsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3MintsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3MintDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Mints (current)
     * Gets mints.
     * @param {module:api/UniswapV3Api~uniswapV3MintsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3MintDTO>}
     */
    uniswapV3MintsCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3MintDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/mints/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3PoolDayDataCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3PoolDayDataCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3PoolDayDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PoolDayData (current)
     * Gets poolDayData.
     * @param {module:api/UniswapV3Api~uniswapV3PoolDayDataCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3PoolDayDataDTO>}
     */
    uniswapV3PoolDayDataCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3PoolDayDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/poolDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3PoolHourDataCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3PoolHourDataCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3PoolHourDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PoolHourData (current)
     * Gets poolHourData.
     * @param {module:api/UniswapV3Api~uniswapV3PoolHourDataCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3PoolHourDataDTO>}
     */
    uniswapV3PoolHourDataCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3PoolHourDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/poolHourData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3PoolsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3PoolsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3PoolDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Pools (current)
     * Gets pools.
     * @param {Object} opts Optional parameters
     * @param {String} [id] Pool address.
     * @param {module:api/UniswapV3Api~uniswapV3PoolsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3PoolDTO>}
     */
    uniswapV3PoolsCurrent(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3PoolDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/pools/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3PositionSnapshotsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3PositionSnapshotsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3PositionSnapshotDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * PositionSnapshots (current)
     * Gets positionSnapshots.
     * @param {module:api/UniswapV3Api~uniswapV3PositionSnapshotsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3PositionSnapshotDTO>}
     */
    uniswapV3PositionSnapshotsCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3PositionSnapshotDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/positionSnapshots/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3PositionsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3PositionsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3PositionDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Positions (current)
     * Gets positions.
     * @param {module:api/UniswapV3Api~uniswapV3PositionsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3PositionDTO>}
     */
    uniswapV3PositionsCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3PositionDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/positions/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3SwapsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3SwapsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3SwapDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Swaps (current)
     * Gets swaps.
     * @param {Object} opts Optional parameters
     * @param {String} [pool] Pool swap occured within.
     * @param {module:api/UniswapV3Api~uniswapV3SwapsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3SwapDTO>}
     */
    uniswapV3SwapsCurrent(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pool': opts['pool']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3SwapDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/swaps/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3TickDayDataCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3TickDayDataCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3TickDayDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * TickDayData (current)
     * Gets tickDayData.
     * @param {module:api/UniswapV3Api~uniswapV3TickDayDataCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3TickDayDataDTO>}
     */
    uniswapV3TickDayDataCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3TickDayDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tickDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3TicksCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3TicksCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3TickDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Ticks (current)
     * Gets ticks.
     * @param {module:api/UniswapV3Api~uniswapV3TicksCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3TickDTO>}
     */
    uniswapV3TicksCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3TickDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/ticks/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3TokenHourDataCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3TokenHourDataCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3TokenHourDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * TokenHourData (current)
     * Gets tokenHourData.
     * @param {module:api/UniswapV3Api~uniswapV3TokenHourDataCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3TokenHourDataDTO>}
     */
    uniswapV3TokenHourDataCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3TokenHourDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokenHourData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3TokenV3DayDataCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3TokenV3DayDataCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3TokenV3DayDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * TokenV3DayData (current)
     * Gets tokenV3DayData.
     * @param {module:api/UniswapV3Api~uniswapV3TokenV3DayDataCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3TokenV3DayDataDTO>}
     */
    uniswapV3TokenV3DayDataCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3TokenV3DayDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokenV3DayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3TokensCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3TokensCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3TokenDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Tokens (current)
     * Gets tokens.
     * @param {module:api/UniswapV3Api~uniswapV3TokensCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3TokenDTO>}
     */
    uniswapV3TokensCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3TokenDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/tokens/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3TransactionsCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3TransactionsCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3TransactionDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Transactions (current)
     * Gets transactions.
     * @param {module:api/UniswapV3Api~uniswapV3TransactionsCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3TransactionDTO>}
     */
    uniswapV3TransactionsCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3TransactionDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/transactions/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uniswapV3UniswapDayDataCurrent operation.
     * @callback module:api/UniswapV3Api~uniswapV3UniswapDayDataCurrentCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/UniswapV3UniswapDayDataDTO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * UniswapDayData (current)
     * Gets uniswapDayData.
     * @param {module:api/UniswapV3Api~uniswapV3UniswapDayDataCurrentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/UniswapV3UniswapDayDataDTO>}
     */
    uniswapV3UniswapDayDataCurrent(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain', 'application/json', 'text/json'];
      let returnType = [UniswapV3UniswapDayDataDTO];
      return this.apiClient.callApi(
        '/dapps/uniswapv3/uniswapDayData/current', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
