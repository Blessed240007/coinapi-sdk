/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CURVEFINANCEETHEREUMLiquidityPoolDTO model module.
 * @module model/CURVEFINANCEETHEREUMLiquidityPoolDTO
 * @version v1
 */
class CURVEFINANCEETHEREUMLiquidityPoolDTO {
    /**
     * Constructs a new <code>CURVEFINANCEETHEREUMLiquidityPoolDTO</code>.
     * 
     * @alias module:model/CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    constructor() { 
        
        CURVEFINANCEETHEREUMLiquidityPoolDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CURVEFINANCEETHEREUMLiquidityPoolDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CURVEFINANCEETHEREUMLiquidityPoolDTO} obj Optional instance to populate.
     * @return {module:model/CURVEFINANCEETHEREUMLiquidityPoolDTO} The populated <code>CURVEFINANCEETHEREUMLiquidityPoolDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CURVEFINANCEETHEREUMLiquidityPoolDTO();

            if (data.hasOwnProperty('entry_time')) {
                obj['entry_time'] = ApiClient.convertToType(data['entry_time'], 'Date');
            }
            if (data.hasOwnProperty('recv_time')) {
                obj['recv_time'] = ApiClient.convertToType(data['recv_time'], 'Date');
            }
            if (data.hasOwnProperty('block_number')) {
                obj['block_number'] = ApiClient.convertToType(data['block_number'], 'Number');
            }
            if (data.hasOwnProperty('vid')) {
                obj['vid'] = ApiClient.convertToType(data['vid'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('symbol')) {
                obj['symbol'] = ApiClient.convertToType(data['symbol'], 'String');
            }
            if (data.hasOwnProperty('input_tokens')) {
                obj['input_tokens'] = ApiClient.convertToType(data['input_tokens'], ['String']);
            }
            if (data.hasOwnProperty('input_tokens_ordered')) {
                obj['input_tokens_ordered'] = ApiClient.convertToType(data['input_tokens_ordered'], ['String']);
            }
            if (data.hasOwnProperty('output_token')) {
                obj['output_token'] = ApiClient.convertToType(data['output_token'], 'String');
            }
            if (data.hasOwnProperty('reward_tokens')) {
                obj['reward_tokens'] = ApiClient.convertToType(data['reward_tokens'], ['String']);
            }
            if (data.hasOwnProperty('fees')) {
                obj['fees'] = ApiClient.convertToType(data['fees'], ['String']);
            }
            if (data.hasOwnProperty('is_single_sided')) {
                obj['is_single_sided'] = ApiClient.convertToType(data['is_single_sided'], 'Boolean');
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'String');
            }
            if (data.hasOwnProperty('created_block_number')) {
                obj['created_block_number'] = ApiClient.convertToType(data['created_block_number'], 'String');
            }
            if (data.hasOwnProperty('total_value_locked_usd')) {
                obj['total_value_locked_usd'] = ApiClient.convertToType(data['total_value_locked_usd'], 'String');
            }
            if (data.hasOwnProperty('cumulative_supply_side_revenue_usd')) {
                obj['cumulative_supply_side_revenue_usd'] = ApiClient.convertToType(data['cumulative_supply_side_revenue_usd'], 'String');
            }
            if (data.hasOwnProperty('cumulative_protocol_side_revenue_usd')) {
                obj['cumulative_protocol_side_revenue_usd'] = ApiClient.convertToType(data['cumulative_protocol_side_revenue_usd'], 'String');
            }
            if (data.hasOwnProperty('cumulative_total_revenue_usd')) {
                obj['cumulative_total_revenue_usd'] = ApiClient.convertToType(data['cumulative_total_revenue_usd'], 'String');
            }
            if (data.hasOwnProperty('cumulative_volume_usd')) {
                obj['cumulative_volume_usd'] = ApiClient.convertToType(data['cumulative_volume_usd'], 'String');
            }
            if (data.hasOwnProperty('input_token_balances')) {
                obj['input_token_balances'] = ApiClient.convertToType(data['input_token_balances'], ['String']);
            }
            if (data.hasOwnProperty('input_token_weights')) {
                obj['input_token_weights'] = ApiClient.convertToType(data['input_token_weights'], ['String']);
            }
            if (data.hasOwnProperty('output_token_supply')) {
                obj['output_token_supply'] = ApiClient.convertToType(data['output_token_supply'], 'String');
            }
            if (data.hasOwnProperty('output_token_price_usd')) {
                obj['output_token_price_usd'] = ApiClient.convertToType(data['output_token_price_usd'], 'String');
            }
            if (data.hasOwnProperty('staked_output_token_amount')) {
                obj['staked_output_token_amount'] = ApiClient.convertToType(data['staked_output_token_amount'], 'String');
            }
            if (data.hasOwnProperty('reward_token_emissions_amount')) {
                obj['reward_token_emissions_amount'] = ApiClient.convertToType(data['reward_token_emissions_amount'], ['String']);
            }
            if (data.hasOwnProperty('reward_token_emissions_usd')) {
                obj['reward_token_emissions_usd'] = ApiClient.convertToType(data['reward_token_emissions_usd'], ['String']);
            }
            if (data.hasOwnProperty('registry_address')) {
                obj['registry_address'] = ApiClient.convertToType(data['registry_address'], 'String');
            }
            if (data.hasOwnProperty('gauge_address')) {
                obj['gauge_address'] = ApiClient.convertToType(data['gauge_address'], 'String');
            }
            if (data.hasOwnProperty('evaluated_ask')) {
                obj['evaluated_ask'] = ApiClient.convertToType(data['evaluated_ask'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CURVEFINANCEETHEREUMLiquidityPoolDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CURVEFINANCEETHEREUMLiquidityPoolDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['symbol'] && !(typeof data['symbol'] === 'string' || data['symbol'] instanceof String)) {
            throw new Error("Expected the field `symbol` to be a primitive type in the JSON string but got " + data['symbol']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['input_tokens'])) {
            throw new Error("Expected the field `input_tokens` to be an array in the JSON data but got " + data['input_tokens']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['input_tokens_ordered'])) {
            throw new Error("Expected the field `input_tokens_ordered` to be an array in the JSON data but got " + data['input_tokens_ordered']);
        }
        // ensure the json data is a string
        if (data['output_token'] && !(typeof data['output_token'] === 'string' || data['output_token'] instanceof String)) {
            throw new Error("Expected the field `output_token` to be a primitive type in the JSON string but got " + data['output_token']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reward_tokens'])) {
            throw new Error("Expected the field `reward_tokens` to be an array in the JSON data but got " + data['reward_tokens']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['fees'])) {
            throw new Error("Expected the field `fees` to be an array in the JSON data but got " + data['fees']);
        }
        // ensure the json data is a string
        if (data['created_timestamp'] && !(typeof data['created_timestamp'] === 'string' || data['created_timestamp'] instanceof String)) {
            throw new Error("Expected the field `created_timestamp` to be a primitive type in the JSON string but got " + data['created_timestamp']);
        }
        // ensure the json data is a string
        if (data['created_block_number'] && !(typeof data['created_block_number'] === 'string' || data['created_block_number'] instanceof String)) {
            throw new Error("Expected the field `created_block_number` to be a primitive type in the JSON string but got " + data['created_block_number']);
        }
        // ensure the json data is a string
        if (data['total_value_locked_usd'] && !(typeof data['total_value_locked_usd'] === 'string' || data['total_value_locked_usd'] instanceof String)) {
            throw new Error("Expected the field `total_value_locked_usd` to be a primitive type in the JSON string but got " + data['total_value_locked_usd']);
        }
        // ensure the json data is a string
        if (data['cumulative_supply_side_revenue_usd'] && !(typeof data['cumulative_supply_side_revenue_usd'] === 'string' || data['cumulative_supply_side_revenue_usd'] instanceof String)) {
            throw new Error("Expected the field `cumulative_supply_side_revenue_usd` to be a primitive type in the JSON string but got " + data['cumulative_supply_side_revenue_usd']);
        }
        // ensure the json data is a string
        if (data['cumulative_protocol_side_revenue_usd'] && !(typeof data['cumulative_protocol_side_revenue_usd'] === 'string' || data['cumulative_protocol_side_revenue_usd'] instanceof String)) {
            throw new Error("Expected the field `cumulative_protocol_side_revenue_usd` to be a primitive type in the JSON string but got " + data['cumulative_protocol_side_revenue_usd']);
        }
        // ensure the json data is a string
        if (data['cumulative_total_revenue_usd'] && !(typeof data['cumulative_total_revenue_usd'] === 'string' || data['cumulative_total_revenue_usd'] instanceof String)) {
            throw new Error("Expected the field `cumulative_total_revenue_usd` to be a primitive type in the JSON string but got " + data['cumulative_total_revenue_usd']);
        }
        // ensure the json data is a string
        if (data['cumulative_volume_usd'] && !(typeof data['cumulative_volume_usd'] === 'string' || data['cumulative_volume_usd'] instanceof String)) {
            throw new Error("Expected the field `cumulative_volume_usd` to be a primitive type in the JSON string but got " + data['cumulative_volume_usd']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['input_token_balances'])) {
            throw new Error("Expected the field `input_token_balances` to be an array in the JSON data but got " + data['input_token_balances']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['input_token_weights'])) {
            throw new Error("Expected the field `input_token_weights` to be an array in the JSON data but got " + data['input_token_weights']);
        }
        // ensure the json data is a string
        if (data['output_token_supply'] && !(typeof data['output_token_supply'] === 'string' || data['output_token_supply'] instanceof String)) {
            throw new Error("Expected the field `output_token_supply` to be a primitive type in the JSON string but got " + data['output_token_supply']);
        }
        // ensure the json data is a string
        if (data['output_token_price_usd'] && !(typeof data['output_token_price_usd'] === 'string' || data['output_token_price_usd'] instanceof String)) {
            throw new Error("Expected the field `output_token_price_usd` to be a primitive type in the JSON string but got " + data['output_token_price_usd']);
        }
        // ensure the json data is a string
        if (data['staked_output_token_amount'] && !(typeof data['staked_output_token_amount'] === 'string' || data['staked_output_token_amount'] instanceof String)) {
            throw new Error("Expected the field `staked_output_token_amount` to be a primitive type in the JSON string but got " + data['staked_output_token_amount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reward_token_emissions_amount'])) {
            throw new Error("Expected the field `reward_token_emissions_amount` to be an array in the JSON data but got " + data['reward_token_emissions_amount']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reward_token_emissions_usd'])) {
            throw new Error("Expected the field `reward_token_emissions_usd` to be an array in the JSON data but got " + data['reward_token_emissions_usd']);
        }
        // ensure the json data is a string
        if (data['registry_address'] && !(typeof data['registry_address'] === 'string' || data['registry_address'] instanceof String)) {
            throw new Error("Expected the field `registry_address` to be a primitive type in the JSON string but got " + data['registry_address']);
        }
        // ensure the json data is a string
        if (data['gauge_address'] && !(typeof data['gauge_address'] === 'string' || data['gauge_address'] instanceof String)) {
            throw new Error("Expected the field `gauge_address` to be a primitive type in the JSON string but got " + data['gauge_address']);
        }

        return true;
    }


}



/**
 * @member {Date} entry_time
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['entry_time'] = undefined;

/**
 * @member {Date} recv_time
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['recv_time'] = undefined;

/**
 * Number of block in which entity was recorded.
 * @member {Number} block_number
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['block_number'] = undefined;

/**
 * 
 * @member {Number} vid
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['vid'] = undefined;

/**
 * Smart contract address of the pool
 * @member {String} id
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['id'] = undefined;

/**
 * The protocol this pool belongs to
 * @member {String} protocol
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['protocol'] = undefined;

/**
 * Name of liquidity pool (e.g. Curve.fi DAI/USDC/USDT)
 * @member {String} name
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['name'] = undefined;

/**
 * Symbol of liquidity pool (e.g. 3CRV)
 * @member {String} symbol
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['symbol'] = undefined;

/**
 * Tokens that need to be deposited to take a position in protocol. e.g. WETH and USDC to deposit into the WETH-USDC pool. Array to account for multi-asset pools like Curve and Balancer
 * @member {Array.<String>} input_tokens
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['input_tokens'] = undefined;

/**
 * inputTokens in native (contract) order
 * @member {Array.<String>} input_tokens_ordered
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['input_tokens_ordered'] = undefined;

/**
 * Token that is minted to track ownership of position in protocol
 * @member {String} output_token
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['output_token'] = undefined;

/**
 * Aditional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon
 * @member {Array.<String>} reward_tokens
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['reward_tokens'] = undefined;

/**
 * Fees per trade incurred to the user. Should include all fees that apply to a pool (e.g. Curve has a trading fee AND an admin fee, which is a portion of the trading fee. Uniswap only has a trading fee and no protocol fee.)
 * @member {Array.<String>} fees
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['fees'] = undefined;

/**
 * Whether this pool is single-sided (e.g. Bancor, Platypus's Alternative Pool). The specifics of the implementation depends on the protocol.
 * @member {Boolean} is_single_sided
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['is_single_sided'] = undefined;

/**
 * Creation timestamp
 * @member {String} created_timestamp
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['created_timestamp'] = undefined;

/**
 * Creation block number
 * @member {String} created_block_number
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['created_block_number'] = undefined;

/**
 * Current TVL (Total Value Locked) of this pool in USD
 * @member {String} total_value_locked_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['total_value_locked_usd'] = undefined;

/**
 * All revenue generated by the liquidity pool, accrued to the supply side.
 * @member {String} cumulative_supply_side_revenue_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['cumulative_supply_side_revenue_usd'] = undefined;

/**
 * All revenue generated by the liquidity pool, accrued to the protocol.
 * @member {String} cumulative_protocol_side_revenue_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['cumulative_protocol_side_revenue_usd'] = undefined;

/**
 * All revenue generated by the liquidity pool.
 * @member {String} cumulative_total_revenue_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['cumulative_total_revenue_usd'] = undefined;

/**
 * All historical trade volume occurred in this pool, in USD
 * @member {String} cumulative_volume_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['cumulative_volume_usd'] = undefined;

/**
 * Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.
 * @member {Array.<String>} input_token_balances
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['input_token_balances'] = undefined;

/**
 * Weights of input tokens in the liquidity pool in percentage values.
 * @member {Array.<String>} input_token_weights
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['input_token_weights'] = undefined;

/**
 * Total supply of output token.
 * @member {String} output_token_supply
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['output_token_supply'] = undefined;

/**
 * Price per share of output token in USD
 * @member {String} output_token_price_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['output_token_price_usd'] = undefined;

/**
 * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
 * @member {String} staked_output_token_amount
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['staked_output_token_amount'] = undefined;

/**
 * Per-block reward token emission as of the current block normalized to a day, in token's native amount.
 * @member {Array.<String>} reward_token_emissions_amount
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['reward_token_emissions_amount'] = undefined;

/**
 * Per-block reward token emission as of the current block normalized to a day, in USD value.
 * @member {Array.<String>} reward_token_emissions_usd
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['reward_token_emissions_usd'] = undefined;

/**
 * Registry that deployed this pool
 * @member {String} registry_address
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['registry_address'] = undefined;

/**
 * Liquidity Gauge assocaited with this pool
 * @member {String} gauge_address
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['gauge_address'] = undefined;

/**
 * @member {Number} evaluated_ask
 */
CURVEFINANCEETHEREUMLiquidityPoolDTO.prototype['evaluated_ask'] = undefined;






export default CURVEFINANCEETHEREUMLiquidityPoolDTO;

