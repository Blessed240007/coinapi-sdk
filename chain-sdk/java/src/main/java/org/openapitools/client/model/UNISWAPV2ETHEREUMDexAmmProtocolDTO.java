/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 *  Decentralized exchange (Dex) automated market maker (Amm) protocol. It&#39;s an entity that represents a protocol involving a smart contract that use automated market makers.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-24T12:57:58.978232Z[Etc/UTC]")
public class UNISWAPV2ETHEREUMDexAmmProtocolDTO {
  public static final String SERIALIZED_NAME_ENTRY_TIME = "entry_time";
  @SerializedName(SERIALIZED_NAME_ENTRY_TIME)
  private OffsetDateTime entryTime;

  public static final String SERIALIZED_NAME_RECV_TIME = "recv_time";
  @SerializedName(SERIALIZED_NAME_RECV_TIME)
  private OffsetDateTime recvTime;

  public static final String SERIALIZED_NAME_BLOCK_NUMBER = "block_number";
  @SerializedName(SERIALIZED_NAME_BLOCK_NUMBER)
  private Long blockNumber;

  public static final String SERIALIZED_NAME_BLOCK_RANGE = "block_range";
  @SerializedName(SERIALIZED_NAME_BLOCK_RANGE)
  private String blockRange;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SLUG = "slug";
  @SerializedName(SERIALIZED_NAME_SLUG)
  private String slug;

  public static final String SERIALIZED_NAME_SCHEMA_VERSION = "schema_version";
  @SerializedName(SERIALIZED_NAME_SCHEMA_VERSION)
  private String schemaVersion;

  public static final String SERIALIZED_NAME_SUBGRAPH_VERSION = "subgraph_version";
  @SerializedName(SERIALIZED_NAME_SUBGRAPH_VERSION)
  private String subgraphVersion;

  public static final String SERIALIZED_NAME_METHODOLOGY_VERSION = "methodology_version";
  @SerializedName(SERIALIZED_NAME_METHODOLOGY_VERSION)
  private String methodologyVersion;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD = "total_value_locked_usd";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD)
  private String totalValueLockedUsd;

  public static final String SERIALIZED_NAME_PROTOCOL_CONTROLLED_VALUE_USD = "protocol_controlled_value_usd";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_CONTROLLED_VALUE_USD)
  private String protocolControlledValueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_VOLUME_USD = "cumulative_volume_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_VOLUME_USD)
  private String cumulativeVolumeUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_SUPPLY_SIDE_REVENUE_USD = "cumulative_supply_side_revenue_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_SUPPLY_SIDE_REVENUE_USD)
  private String cumulativeSupplySideRevenueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_PROTOCOL_SIDE_REVENUE_USD = "cumulative_protocol_side_revenue_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_PROTOCOL_SIDE_REVENUE_USD)
  private String cumulativeProtocolSideRevenueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_TOTAL_REVENUE_USD = "cumulative_total_revenue_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_TOTAL_REVENUE_USD)
  private String cumulativeTotalRevenueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_UNIQUE_USERS = "cumulative_unique_users";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_UNIQUE_USERS)
  private Integer cumulativeUniqueUsers;

  public static final String SERIALIZED_NAME_TOTAL_POOL_COUNT = "total_pool_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_POOL_COUNT)
  private Integer totalPoolCount;

  public UNISWAPV2ETHEREUMDexAmmProtocolDTO() {
  }

  public UNISWAPV2ETHEREUMDexAmmProtocolDTO entryTime(OffsetDateTime entryTime) {
    
    this.entryTime = entryTime;
    return this;
  }

   /**
   * Get entryTime
   * @return entryTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEntryTime() {
    return entryTime;
  }


  public void setEntryTime(OffsetDateTime entryTime) {
    this.entryTime = entryTime;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO recvTime(OffsetDateTime recvTime) {
    
    this.recvTime = recvTime;
    return this;
  }

   /**
   * Get recvTime
   * @return recvTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getRecvTime() {
    return recvTime;
  }


  public void setRecvTime(OffsetDateTime recvTime) {
    this.recvTime = recvTime;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO blockNumber(Long blockNumber) {
    
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Number of block in which entity was recorded.
   * @return blockNumber
  **/
  @javax.annotation.Nullable
  public Long getBlockNumber() {
    return blockNumber;
  }


  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO blockRange(String blockRange) {
    
    this.blockRange = blockRange;
    return this;
  }

   /**
   * 
   * @return blockRange
  **/
  @javax.annotation.Nullable
  public String getBlockRange() {
    return blockRange;
  }


  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Smart contract address of the protocol&#39;s main contract (Factory, Registry, etc)
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the protocol, including version. e.g. Uniswap v3
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO slug(String slug) {
    
    this.slug = slug;
    return this;
  }

   /**
   * Slug of protocol, including version. e.g. uniswap-v3
   * @return slug
  **/
  @javax.annotation.Nullable
  public String getSlug() {
    return slug;
  }


  public void setSlug(String slug) {
    this.slug = slug;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO schemaVersion(String schemaVersion) {
    
    this.schemaVersion = schemaVersion;
    return this;
  }

   /**
   *  Version of the subgraph schema, in SemVer format (e.g. 1.0.0)
   * @return schemaVersion
  **/
  @javax.annotation.Nullable
  public String getSchemaVersion() {
    return schemaVersion;
  }


  public void setSchemaVersion(String schemaVersion) {
    this.schemaVersion = schemaVersion;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO subgraphVersion(String subgraphVersion) {
    
    this.subgraphVersion = subgraphVersion;
    return this;
  }

   /**
   * Version of the subgraph implementation, in SemVer format (e.g. 1.0.0)
   * @return subgraphVersion
  **/
  @javax.annotation.Nullable
  public String getSubgraphVersion() {
    return subgraphVersion;
  }


  public void setSubgraphVersion(String subgraphVersion) {
    this.subgraphVersion = subgraphVersion;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO methodologyVersion(String methodologyVersion) {
    
    this.methodologyVersion = methodologyVersion;
    return this;
  }

   /**
   * Version of the methodology used to compute metrics, loosely based on SemVer format (e.g. 1.0.0)
   * @return methodologyVersion
  **/
  @javax.annotation.Nullable
  public String getMethodologyVersion() {
    return methodologyVersion;
  }


  public void setMethodologyVersion(String methodologyVersion) {
    this.methodologyVersion = methodologyVersion;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO totalValueLockedUsd(String totalValueLockedUsd) {
    
    this.totalValueLockedUsd = totalValueLockedUsd;
    return this;
  }

   /**
   * Current TVL (Total Value Locked) of the entire protocol
   * @return totalValueLockedUsd
  **/
  @javax.annotation.Nullable
  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }


  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO protocolControlledValueUsd(String protocolControlledValueUsd) {
    
    this.protocolControlledValueUsd = protocolControlledValueUsd;
    return this;
  }

   /**
   * Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV
   * @return protocolControlledValueUsd
  **/
  @javax.annotation.Nullable
  public String getProtocolControlledValueUsd() {
    return protocolControlledValueUsd;
  }


  public void setProtocolControlledValueUsd(String protocolControlledValueUsd) {
    this.protocolControlledValueUsd = protocolControlledValueUsd;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO cumulativeVolumeUsd(String cumulativeVolumeUsd) {
    
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
    return this;
  }

   /**
   * All historical volume in USD
   * @return cumulativeVolumeUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeVolumeUsd() {
    return cumulativeVolumeUsd;
  }


  public void setCumulativeVolumeUsd(String cumulativeVolumeUsd) {
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO cumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
    return this;
  }

   /**
   * Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea.
   * @return cumulativeSupplySideRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeSupplySideRevenueUsd() {
    return cumulativeSupplySideRevenueUsd;
  }


  public void setCumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO cumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
    return this;
  }

   /**
   * Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee.
   * @return cumulativeProtocolSideRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeProtocolSideRevenueUsd() {
    return cumulativeProtocolSideRevenueUsd;
  }


  public void setCumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO cumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
    return this;
  }

   /**
   * All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn.
   * @return cumulativeTotalRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeTotalRevenueUsd() {
    return cumulativeTotalRevenueUsd;
  }


  public void setCumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO cumulativeUniqueUsers(Integer cumulativeUniqueUsers) {
    
    this.cumulativeUniqueUsers = cumulativeUniqueUsers;
    return this;
  }

   /**
   * Number of cumulative unique users
   * @return cumulativeUniqueUsers
  **/
  @javax.annotation.Nullable
  public Integer getCumulativeUniqueUsers() {
    return cumulativeUniqueUsers;
  }


  public void setCumulativeUniqueUsers(Integer cumulativeUniqueUsers) {
    this.cumulativeUniqueUsers = cumulativeUniqueUsers;
  }


  public UNISWAPV2ETHEREUMDexAmmProtocolDTO totalPoolCount(Integer totalPoolCount) {
    
    this.totalPoolCount = totalPoolCount;
    return this;
  }

   /**
   * Total number of pools
   * @return totalPoolCount
  **/
  @javax.annotation.Nullable
  public Integer getTotalPoolCount() {
    return totalPoolCount;
  }


  public void setTotalPoolCount(Integer totalPoolCount) {
    this.totalPoolCount = totalPoolCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV2ETHEREUMDexAmmProtocolDTO unISWAPV2ETHEREUMDexAmmProtocolDTO = (UNISWAPV2ETHEREUMDexAmmProtocolDTO) o;
    return Objects.equals(this.entryTime, unISWAPV2ETHEREUMDexAmmProtocolDTO.entryTime) &&
        Objects.equals(this.recvTime, unISWAPV2ETHEREUMDexAmmProtocolDTO.recvTime) &&
        Objects.equals(this.blockNumber, unISWAPV2ETHEREUMDexAmmProtocolDTO.blockNumber) &&
        Objects.equals(this.blockRange, unISWAPV2ETHEREUMDexAmmProtocolDTO.blockRange) &&
        Objects.equals(this.id, unISWAPV2ETHEREUMDexAmmProtocolDTO.id) &&
        Objects.equals(this.name, unISWAPV2ETHEREUMDexAmmProtocolDTO.name) &&
        Objects.equals(this.slug, unISWAPV2ETHEREUMDexAmmProtocolDTO.slug) &&
        Objects.equals(this.schemaVersion, unISWAPV2ETHEREUMDexAmmProtocolDTO.schemaVersion) &&
        Objects.equals(this.subgraphVersion, unISWAPV2ETHEREUMDexAmmProtocolDTO.subgraphVersion) &&
        Objects.equals(this.methodologyVersion, unISWAPV2ETHEREUMDexAmmProtocolDTO.methodologyVersion) &&
        Objects.equals(this.totalValueLockedUsd, unISWAPV2ETHEREUMDexAmmProtocolDTO.totalValueLockedUsd) &&
        Objects.equals(this.protocolControlledValueUsd, unISWAPV2ETHEREUMDexAmmProtocolDTO.protocolControlledValueUsd) &&
        Objects.equals(this.cumulativeVolumeUsd, unISWAPV2ETHEREUMDexAmmProtocolDTO.cumulativeVolumeUsd) &&
        Objects.equals(this.cumulativeSupplySideRevenueUsd, unISWAPV2ETHEREUMDexAmmProtocolDTO.cumulativeSupplySideRevenueUsd) &&
        Objects.equals(this.cumulativeProtocolSideRevenueUsd, unISWAPV2ETHEREUMDexAmmProtocolDTO.cumulativeProtocolSideRevenueUsd) &&
        Objects.equals(this.cumulativeTotalRevenueUsd, unISWAPV2ETHEREUMDexAmmProtocolDTO.cumulativeTotalRevenueUsd) &&
        Objects.equals(this.cumulativeUniqueUsers, unISWAPV2ETHEREUMDexAmmProtocolDTO.cumulativeUniqueUsers) &&
        Objects.equals(this.totalPoolCount, unISWAPV2ETHEREUMDexAmmProtocolDTO.totalPoolCount);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryTime, recvTime, blockNumber, blockRange, id, name, slug, schemaVersion, subgraphVersion, methodologyVersion, totalValueLockedUsd, protocolControlledValueUsd, cumulativeVolumeUsd, cumulativeSupplySideRevenueUsd, cumulativeProtocolSideRevenueUsd, cumulativeTotalRevenueUsd, cumulativeUniqueUsers, totalPoolCount);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV2ETHEREUMDexAmmProtocolDTO {\n");
    sb.append("    entryTime: ").append(toIndentedString(entryTime)).append("\n");
    sb.append("    recvTime: ").append(toIndentedString(recvTime)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    blockRange: ").append(toIndentedString(blockRange)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    schemaVersion: ").append(toIndentedString(schemaVersion)).append("\n");
    sb.append("    subgraphVersion: ").append(toIndentedString(subgraphVersion)).append("\n");
    sb.append("    methodologyVersion: ").append(toIndentedString(methodologyVersion)).append("\n");
    sb.append("    totalValueLockedUsd: ").append(toIndentedString(totalValueLockedUsd)).append("\n");
    sb.append("    protocolControlledValueUsd: ").append(toIndentedString(protocolControlledValueUsd)).append("\n");
    sb.append("    cumulativeVolumeUsd: ").append(toIndentedString(cumulativeVolumeUsd)).append("\n");
    sb.append("    cumulativeSupplySideRevenueUsd: ").append(toIndentedString(cumulativeSupplySideRevenueUsd)).append("\n");
    sb.append("    cumulativeProtocolSideRevenueUsd: ").append(toIndentedString(cumulativeProtocolSideRevenueUsd)).append("\n");
    sb.append("    cumulativeTotalRevenueUsd: ").append(toIndentedString(cumulativeTotalRevenueUsd)).append("\n");
    sb.append("    cumulativeUniqueUsers: ").append(toIndentedString(cumulativeUniqueUsers)).append("\n");
    sb.append("    totalPoolCount: ").append(toIndentedString(totalPoolCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entry_time");
    openapiFields.add("recv_time");
    openapiFields.add("block_number");
    openapiFields.add("block_range");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("slug");
    openapiFields.add("schema_version");
    openapiFields.add("subgraph_version");
    openapiFields.add("methodology_version");
    openapiFields.add("total_value_locked_usd");
    openapiFields.add("protocol_controlled_value_usd");
    openapiFields.add("cumulative_volume_usd");
    openapiFields.add("cumulative_supply_side_revenue_usd");
    openapiFields.add("cumulative_protocol_side_revenue_usd");
    openapiFields.add("cumulative_total_revenue_usd");
    openapiFields.add("cumulative_unique_users");
    openapiFields.add("total_pool_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UNISWAPV2ETHEREUMDexAmmProtocolDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UNISWAPV2ETHEREUMDexAmmProtocolDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UNISWAPV2ETHEREUMDexAmmProtocolDTO is not found in the empty JSON string", UNISWAPV2ETHEREUMDexAmmProtocolDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UNISWAPV2ETHEREUMDexAmmProtocolDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UNISWAPV2ETHEREUMDexAmmProtocolDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("block_range") != null && !jsonObj.get("block_range").isJsonNull()) && !jsonObj.get("block_range").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `block_range` to be a primitive type in the JSON string but got `%s`", jsonObj.get("block_range").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("slug") != null && !jsonObj.get("slug").isJsonNull()) && !jsonObj.get("slug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `slug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("slug").toString()));
      }
      if ((jsonObj.get("schema_version") != null && !jsonObj.get("schema_version").isJsonNull()) && !jsonObj.get("schema_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schema_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schema_version").toString()));
      }
      if ((jsonObj.get("subgraph_version") != null && !jsonObj.get("subgraph_version").isJsonNull()) && !jsonObj.get("subgraph_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subgraph_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subgraph_version").toString()));
      }
      if ((jsonObj.get("methodology_version") != null && !jsonObj.get("methodology_version").isJsonNull()) && !jsonObj.get("methodology_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `methodology_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("methodology_version").toString()));
      }
      if ((jsonObj.get("total_value_locked_usd") != null && !jsonObj.get("total_value_locked_usd").isJsonNull()) && !jsonObj.get("total_value_locked_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_usd").toString()));
      }
      if ((jsonObj.get("protocol_controlled_value_usd") != null && !jsonObj.get("protocol_controlled_value_usd").isJsonNull()) && !jsonObj.get("protocol_controlled_value_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol_controlled_value_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol_controlled_value_usd").toString()));
      }
      if ((jsonObj.get("cumulative_volume_usd") != null && !jsonObj.get("cumulative_volume_usd").isJsonNull()) && !jsonObj.get("cumulative_volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_volume_usd").toString()));
      }
      if ((jsonObj.get("cumulative_supply_side_revenue_usd") != null && !jsonObj.get("cumulative_supply_side_revenue_usd").isJsonNull()) && !jsonObj.get("cumulative_supply_side_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_supply_side_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_supply_side_revenue_usd").toString()));
      }
      if ((jsonObj.get("cumulative_protocol_side_revenue_usd") != null && !jsonObj.get("cumulative_protocol_side_revenue_usd").isJsonNull()) && !jsonObj.get("cumulative_protocol_side_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_protocol_side_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_protocol_side_revenue_usd").toString()));
      }
      if ((jsonObj.get("cumulative_total_revenue_usd") != null && !jsonObj.get("cumulative_total_revenue_usd").isJsonNull()) && !jsonObj.get("cumulative_total_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_total_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_total_revenue_usd").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UNISWAPV2ETHEREUMDexAmmProtocolDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UNISWAPV2ETHEREUMDexAmmProtocolDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UNISWAPV2ETHEREUMDexAmmProtocolDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UNISWAPV2ETHEREUMDexAmmProtocolDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<UNISWAPV2ETHEREUMDexAmmProtocolDTO>() {
           @Override
           public void write(JsonWriter out, UNISWAPV2ETHEREUMDexAmmProtocolDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UNISWAPV2ETHEREUMDexAmmProtocolDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UNISWAPV2ETHEREUMDexAmmProtocolDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UNISWAPV2ETHEREUMDexAmmProtocolDTO
  * @throws IOException if the JSON string is invalid with respect to UNISWAPV2ETHEREUMDexAmmProtocolDTO
  */
  public static UNISWAPV2ETHEREUMDexAmmProtocolDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UNISWAPV2ETHEREUMDexAmmProtocolDTO.class);
  }

 /**
  * Convert an instance of UNISWAPV2ETHEREUMDexAmmProtocolDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

