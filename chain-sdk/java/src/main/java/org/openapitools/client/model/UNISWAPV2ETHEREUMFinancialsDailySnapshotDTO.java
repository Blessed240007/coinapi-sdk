/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Daily financial metrics for Uniswap V2.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-24T12:57:58.978232Z[Etc/UTC]")
public class UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO {
  public static final String SERIALIZED_NAME_ENTRY_TIME = "entry_time";
  @SerializedName(SERIALIZED_NAME_ENTRY_TIME)
  private OffsetDateTime entryTime;

  public static final String SERIALIZED_NAME_RECV_TIME = "recv_time";
  @SerializedName(SERIALIZED_NAME_RECV_TIME)
  private OffsetDateTime recvTime;

  public static final String SERIALIZED_NAME_BLOCK_NUMBER = "block_number";
  @SerializedName(SERIALIZED_NAME_BLOCK_NUMBER)
  private Long blockNumber;

  public static final String SERIALIZED_NAME_BLOCK_RANGE = "block_range";
  @SerializedName(SERIALIZED_NAME_BLOCK_RANGE)
  private String blockRange;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  private String protocol;

  public static final String SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD = "total_value_locked_usd";
  @SerializedName(SERIALIZED_NAME_TOTAL_VALUE_LOCKED_USD)
  private String totalValueLockedUsd;

  public static final String SERIALIZED_NAME_PROTOCOL_CONTROLLED_VALUE_USD = "protocol_controlled_value_usd";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_CONTROLLED_VALUE_USD)
  private String protocolControlledValueUsd;

  public static final String SERIALIZED_NAME_DAILY_VOLUME_USD = "daily_volume_usd";
  @SerializedName(SERIALIZED_NAME_DAILY_VOLUME_USD)
  private String dailyVolumeUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_VOLUME_USD = "cumulative_volume_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_VOLUME_USD)
  private String cumulativeVolumeUsd;

  public static final String SERIALIZED_NAME_DAILY_SUPPLY_SIDE_REVENUE_USD = "daily_supply_side_revenue_usd";
  @SerializedName(SERIALIZED_NAME_DAILY_SUPPLY_SIDE_REVENUE_USD)
  private String dailySupplySideRevenueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_SUPPLY_SIDE_REVENUE_USD = "cumulative_supply_side_revenue_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_SUPPLY_SIDE_REVENUE_USD)
  private String cumulativeSupplySideRevenueUsd;

  public static final String SERIALIZED_NAME_DAILY_PROTOCOL_SIDE_REVENUE_USD = "daily_protocol_side_revenue_usd";
  @SerializedName(SERIALIZED_NAME_DAILY_PROTOCOL_SIDE_REVENUE_USD)
  private String dailyProtocolSideRevenueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_PROTOCOL_SIDE_REVENUE_USD = "cumulative_protocol_side_revenue_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_PROTOCOL_SIDE_REVENUE_USD)
  private String cumulativeProtocolSideRevenueUsd;

  public static final String SERIALIZED_NAME_DAILY_TOTAL_REVENUE_USD = "daily_total_revenue_usd";
  @SerializedName(SERIALIZED_NAME_DAILY_TOTAL_REVENUE_USD)
  private String dailyTotalRevenueUsd;

  public static final String SERIALIZED_NAME_CUMULATIVE_TOTAL_REVENUE_USD = "cumulative_total_revenue_usd";
  @SerializedName(SERIALIZED_NAME_CUMULATIVE_TOTAL_REVENUE_USD)
  private String cumulativeTotalRevenueUsd;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private String timestamp;

  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO() {
  }

  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO entryTime(OffsetDateTime entryTime) {
    
    this.entryTime = entryTime;
    return this;
  }

   /**
   * Get entryTime
   * @return entryTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEntryTime() {
    return entryTime;
  }


  public void setEntryTime(OffsetDateTime entryTime) {
    this.entryTime = entryTime;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO recvTime(OffsetDateTime recvTime) {
    
    this.recvTime = recvTime;
    return this;
  }

   /**
   * Get recvTime
   * @return recvTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getRecvTime() {
    return recvTime;
  }


  public void setRecvTime(OffsetDateTime recvTime) {
    this.recvTime = recvTime;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO blockNumber(Long blockNumber) {
    
    this.blockNumber = blockNumber;
    return this;
  }

   /**
   * Number of block in which entity was recorded.
   * @return blockNumber
  **/
  @javax.annotation.Nullable
  public Long getBlockNumber() {
    return blockNumber;
  }


  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO blockRange(String blockRange) {
    
    this.blockRange = blockRange;
    return this;
  }

   /**
   * 
   * @return blockRange
  **/
  @javax.annotation.Nullable
  public String getBlockRange() {
    return blockRange;
  }


  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID is # of days since Unix epoch time
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO protocol(String protocol) {
    
    this.protocol = protocol;
    return this;
  }

   /**
   * Protocol this snapshot is associated with
   * @return protocol
  **/
  @javax.annotation.Nullable
  public String getProtocol() {
    return protocol;
  }


  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO totalValueLockedUsd(String totalValueLockedUsd) {
    
    this.totalValueLockedUsd = totalValueLockedUsd;
    return this;
  }

   /**
   * Current TVL (Total Value Locked) of the entire protocol
   * @return totalValueLockedUsd
  **/
  @javax.annotation.Nullable
  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }


  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO protocolControlledValueUsd(String protocolControlledValueUsd) {
    
    this.protocolControlledValueUsd = protocolControlledValueUsd;
    return this;
  }

   /**
   * Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV.
   * @return protocolControlledValueUsd
  **/
  @javax.annotation.Nullable
  public String getProtocolControlledValueUsd() {
    return protocolControlledValueUsd;
  }


  public void setProtocolControlledValueUsd(String protocolControlledValueUsd) {
    this.protocolControlledValueUsd = protocolControlledValueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO dailyVolumeUsd(String dailyVolumeUsd) {
    
    this.dailyVolumeUsd = dailyVolumeUsd;
    return this;
  }

   /**
   * All trade volume occurred in a given day, in USD
   * @return dailyVolumeUsd
  **/
  @javax.annotation.Nullable
  public String getDailyVolumeUsd() {
    return dailyVolumeUsd;
  }


  public void setDailyVolumeUsd(String dailyVolumeUsd) {
    this.dailyVolumeUsd = dailyVolumeUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO cumulativeVolumeUsd(String cumulativeVolumeUsd) {
    
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
    return this;
  }

   /**
   * All historical trade volume in USD
   * @return cumulativeVolumeUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeVolumeUsd() {
    return cumulativeVolumeUsd;
  }


  public void setCumulativeVolumeUsd(String cumulativeVolumeUsd) {
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO dailySupplySideRevenueUsd(String dailySupplySideRevenueUsd) {
    
    this.dailySupplySideRevenueUsd = dailySupplySideRevenueUsd;
    return this;
  }

   /**
   * Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea.
   * @return dailySupplySideRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getDailySupplySideRevenueUsd() {
    return dailySupplySideRevenueUsd;
  }


  public void setDailySupplySideRevenueUsd(String dailySupplySideRevenueUsd) {
    this.dailySupplySideRevenueUsd = dailySupplySideRevenueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO cumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
    return this;
  }

   /**
   * Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea.
   * @return cumulativeSupplySideRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeSupplySideRevenueUsd() {
    return cumulativeSupplySideRevenueUsd;
  }


  public void setCumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO dailyProtocolSideRevenueUsd(String dailyProtocolSideRevenueUsd) {
    
    this.dailyProtocolSideRevenueUsd = dailyProtocolSideRevenueUsd;
    return this;
  }

   /**
   * Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee.
   * @return dailyProtocolSideRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getDailyProtocolSideRevenueUsd() {
    return dailyProtocolSideRevenueUsd;
  }


  public void setDailyProtocolSideRevenueUsd(String dailyProtocolSideRevenueUsd) {
    this.dailyProtocolSideRevenueUsd = dailyProtocolSideRevenueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO cumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
    return this;
  }

   /**
   * Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushi’s 0.05%). OpenSea 10% sell fee.
   * @return cumulativeProtocolSideRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeProtocolSideRevenueUsd() {
    return cumulativeProtocolSideRevenueUsd;
  }


  public void setCumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO dailyTotalRevenueUsd(String dailyTotalRevenueUsd) {
    
    this.dailyTotalRevenueUsd = dailyTotalRevenueUsd;
    return this;
  }

   /**
   * ll revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn.
   * @return dailyTotalRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getDailyTotalRevenueUsd() {
    return dailyTotalRevenueUsd;
  }


  public void setDailyTotalRevenueUsd(String dailyTotalRevenueUsd) {
    this.dailyTotalRevenueUsd = dailyTotalRevenueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO cumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
    return this;
  }

   /**
   * All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn.
   * @return cumulativeTotalRevenueUsd
  **/
  @javax.annotation.Nullable
  public String getCumulativeTotalRevenueUsd() {
    return cumulativeTotalRevenueUsd;
  }


  public void setCumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
  }


  public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO timestamp(String timestamp) {
    
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Timestamp of this snapshot
   * @return timestamp
  **/
  @javax.annotation.Nullable
  public String getTimestamp() {
    return timestamp;
  }


  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO unISWAPV2ETHEREUMFinancialsDailySnapshotDTO = (UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO) o;
    return Objects.equals(this.entryTime, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.entryTime) &&
        Objects.equals(this.recvTime, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.recvTime) &&
        Objects.equals(this.blockNumber, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.blockNumber) &&
        Objects.equals(this.blockRange, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.blockRange) &&
        Objects.equals(this.id, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.id) &&
        Objects.equals(this.protocol, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.protocol) &&
        Objects.equals(this.totalValueLockedUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.totalValueLockedUsd) &&
        Objects.equals(this.protocolControlledValueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.protocolControlledValueUsd) &&
        Objects.equals(this.dailyVolumeUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.dailyVolumeUsd) &&
        Objects.equals(this.cumulativeVolumeUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.cumulativeVolumeUsd) &&
        Objects.equals(this.dailySupplySideRevenueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.dailySupplySideRevenueUsd) &&
        Objects.equals(this.cumulativeSupplySideRevenueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.cumulativeSupplySideRevenueUsd) &&
        Objects.equals(this.dailyProtocolSideRevenueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.dailyProtocolSideRevenueUsd) &&
        Objects.equals(this.cumulativeProtocolSideRevenueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.cumulativeProtocolSideRevenueUsd) &&
        Objects.equals(this.dailyTotalRevenueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.dailyTotalRevenueUsd) &&
        Objects.equals(this.cumulativeTotalRevenueUsd, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.cumulativeTotalRevenueUsd) &&
        Objects.equals(this.timestamp, unISWAPV2ETHEREUMFinancialsDailySnapshotDTO.timestamp);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(entryTime, recvTime, blockNumber, blockRange, id, protocol, totalValueLockedUsd, protocolControlledValueUsd, dailyVolumeUsd, cumulativeVolumeUsd, dailySupplySideRevenueUsd, cumulativeSupplySideRevenueUsd, dailyProtocolSideRevenueUsd, cumulativeProtocolSideRevenueUsd, dailyTotalRevenueUsd, cumulativeTotalRevenueUsd, timestamp);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO {\n");
    sb.append("    entryTime: ").append(toIndentedString(entryTime)).append("\n");
    sb.append("    recvTime: ").append(toIndentedString(recvTime)).append("\n");
    sb.append("    blockNumber: ").append(toIndentedString(blockNumber)).append("\n");
    sb.append("    blockRange: ").append(toIndentedString(blockRange)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    totalValueLockedUsd: ").append(toIndentedString(totalValueLockedUsd)).append("\n");
    sb.append("    protocolControlledValueUsd: ").append(toIndentedString(protocolControlledValueUsd)).append("\n");
    sb.append("    dailyVolumeUsd: ").append(toIndentedString(dailyVolumeUsd)).append("\n");
    sb.append("    cumulativeVolumeUsd: ").append(toIndentedString(cumulativeVolumeUsd)).append("\n");
    sb.append("    dailySupplySideRevenueUsd: ").append(toIndentedString(dailySupplySideRevenueUsd)).append("\n");
    sb.append("    cumulativeSupplySideRevenueUsd: ").append(toIndentedString(cumulativeSupplySideRevenueUsd)).append("\n");
    sb.append("    dailyProtocolSideRevenueUsd: ").append(toIndentedString(dailyProtocolSideRevenueUsd)).append("\n");
    sb.append("    cumulativeProtocolSideRevenueUsd: ").append(toIndentedString(cumulativeProtocolSideRevenueUsd)).append("\n");
    sb.append("    dailyTotalRevenueUsd: ").append(toIndentedString(dailyTotalRevenueUsd)).append("\n");
    sb.append("    cumulativeTotalRevenueUsd: ").append(toIndentedString(cumulativeTotalRevenueUsd)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("entry_time");
    openapiFields.add("recv_time");
    openapiFields.add("block_number");
    openapiFields.add("block_range");
    openapiFields.add("id");
    openapiFields.add("protocol");
    openapiFields.add("total_value_locked_usd");
    openapiFields.add("protocol_controlled_value_usd");
    openapiFields.add("daily_volume_usd");
    openapiFields.add("cumulative_volume_usd");
    openapiFields.add("daily_supply_side_revenue_usd");
    openapiFields.add("cumulative_supply_side_revenue_usd");
    openapiFields.add("daily_protocol_side_revenue_usd");
    openapiFields.add("cumulative_protocol_side_revenue_usd");
    openapiFields.add("daily_total_revenue_usd");
    openapiFields.add("cumulative_total_revenue_usd");
    openapiFields.add("timestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO is not found in the empty JSON string", UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("block_range") != null && !jsonObj.get("block_range").isJsonNull()) && !jsonObj.get("block_range").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `block_range` to be a primitive type in the JSON string but got `%s`", jsonObj.get("block_range").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("protocol") != null && !jsonObj.get("protocol").isJsonNull()) && !jsonObj.get("protocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol").toString()));
      }
      if ((jsonObj.get("total_value_locked_usd") != null && !jsonObj.get("total_value_locked_usd").isJsonNull()) && !jsonObj.get("total_value_locked_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `total_value_locked_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("total_value_locked_usd").toString()));
      }
      if ((jsonObj.get("protocol_controlled_value_usd") != null && !jsonObj.get("protocol_controlled_value_usd").isJsonNull()) && !jsonObj.get("protocol_controlled_value_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol_controlled_value_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol_controlled_value_usd").toString()));
      }
      if ((jsonObj.get("daily_volume_usd") != null && !jsonObj.get("daily_volume_usd").isJsonNull()) && !jsonObj.get("daily_volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `daily_volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("daily_volume_usd").toString()));
      }
      if ((jsonObj.get("cumulative_volume_usd") != null && !jsonObj.get("cumulative_volume_usd").isJsonNull()) && !jsonObj.get("cumulative_volume_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_volume_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_volume_usd").toString()));
      }
      if ((jsonObj.get("daily_supply_side_revenue_usd") != null && !jsonObj.get("daily_supply_side_revenue_usd").isJsonNull()) && !jsonObj.get("daily_supply_side_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `daily_supply_side_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("daily_supply_side_revenue_usd").toString()));
      }
      if ((jsonObj.get("cumulative_supply_side_revenue_usd") != null && !jsonObj.get("cumulative_supply_side_revenue_usd").isJsonNull()) && !jsonObj.get("cumulative_supply_side_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_supply_side_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_supply_side_revenue_usd").toString()));
      }
      if ((jsonObj.get("daily_protocol_side_revenue_usd") != null && !jsonObj.get("daily_protocol_side_revenue_usd").isJsonNull()) && !jsonObj.get("daily_protocol_side_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `daily_protocol_side_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("daily_protocol_side_revenue_usd").toString()));
      }
      if ((jsonObj.get("cumulative_protocol_side_revenue_usd") != null && !jsonObj.get("cumulative_protocol_side_revenue_usd").isJsonNull()) && !jsonObj.get("cumulative_protocol_side_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_protocol_side_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_protocol_side_revenue_usd").toString()));
      }
      if ((jsonObj.get("daily_total_revenue_usd") != null && !jsonObj.get("daily_total_revenue_usd").isJsonNull()) && !jsonObj.get("daily_total_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `daily_total_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("daily_total_revenue_usd").toString()));
      }
      if ((jsonObj.get("cumulative_total_revenue_usd") != null && !jsonObj.get("cumulative_total_revenue_usd").isJsonNull()) && !jsonObj.get("cumulative_total_revenue_usd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cumulative_total_revenue_usd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cumulative_total_revenue_usd").toString()));
      }
      if ((jsonObj.get("timestamp") != null && !jsonObj.get("timestamp").isJsonNull()) && !jsonObj.get("timestamp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timestamp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timestamp").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO>() {
           @Override
           public void write(JsonWriter out, UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO
  * @throws IOException if the JSON string is invalid with respect to UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO
  */
  public static UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO.class);
  }

 /**
  * Convert an instance of UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

