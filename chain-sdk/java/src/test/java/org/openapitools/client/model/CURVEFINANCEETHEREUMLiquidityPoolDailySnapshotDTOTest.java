/*
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO
 */
public class CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTOTest {
    private final CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO model = new CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO();

    /**
     * Model tests for CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO
     */
    @Test
    public void testCURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO() {
        // TODO: test CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO
    }

    /**
     * Test the property 'entryTime'
     */
    @Test
    public void entryTimeTest() {
        // TODO: test entryTime
    }

    /**
     * Test the property 'recvTime'
     */
    @Test
    public void recvTimeTest() {
        // TODO: test recvTime
    }

    /**
     * Test the property 'blockNumber'
     */
    @Test
    public void blockNumberTest() {
        // TODO: test blockNumber
    }

    /**
     * Test the property 'blockRange'
     */
    @Test
    public void blockRangeTest() {
        // TODO: test blockRange
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'pool'
     */
    @Test
    public void poolTest() {
        // TODO: test pool
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'totalValueLockedUsd'
     */
    @Test
    public void totalValueLockedUsdTest() {
        // TODO: test totalValueLockedUsd
    }

    /**
     * Test the property 'cumulativeSupplySideRevenueUsd'
     */
    @Test
    public void cumulativeSupplySideRevenueUsdTest() {
        // TODO: test cumulativeSupplySideRevenueUsd
    }

    /**
     * Test the property 'dailySupplySideRevenueUsd'
     */
    @Test
    public void dailySupplySideRevenueUsdTest() {
        // TODO: test dailySupplySideRevenueUsd
    }

    /**
     * Test the property 'cumulativeProtocolSideRevenueUsd'
     */
    @Test
    public void cumulativeProtocolSideRevenueUsdTest() {
        // TODO: test cumulativeProtocolSideRevenueUsd
    }

    /**
     * Test the property 'dailyProtocolSideRevenueUsd'
     */
    @Test
    public void dailyProtocolSideRevenueUsdTest() {
        // TODO: test dailyProtocolSideRevenueUsd
    }

    /**
     * Test the property 'cumulativeTotalRevenueUsd'
     */
    @Test
    public void cumulativeTotalRevenueUsdTest() {
        // TODO: test cumulativeTotalRevenueUsd
    }

    /**
     * Test the property 'dailyTotalRevenueUsd'
     */
    @Test
    public void dailyTotalRevenueUsdTest() {
        // TODO: test dailyTotalRevenueUsd
    }

    /**
     * Test the property 'dailyVolumeUsd'
     */
    @Test
    public void dailyVolumeUsdTest() {
        // TODO: test dailyVolumeUsd
    }

    /**
     * Test the property 'dailyVolumeByTokenAmount'
     */
    @Test
    public void dailyVolumeByTokenAmountTest() {
        // TODO: test dailyVolumeByTokenAmount
    }

    /**
     * Test the property 'dailyVolumeByTokenUsd'
     */
    @Test
    public void dailyVolumeByTokenUsdTest() {
        // TODO: test dailyVolumeByTokenUsd
    }

    /**
     * Test the property 'cumulativeVolumeUsd'
     */
    @Test
    public void cumulativeVolumeUsdTest() {
        // TODO: test cumulativeVolumeUsd
    }

    /**
     * Test the property 'inputTokenBalances'
     */
    @Test
    public void inputTokenBalancesTest() {
        // TODO: test inputTokenBalances
    }

    /**
     * Test the property 'inputTokenWeights'
     */
    @Test
    public void inputTokenWeightsTest() {
        // TODO: test inputTokenWeights
    }

    /**
     * Test the property 'outputTokenSupply'
     */
    @Test
    public void outputTokenSupplyTest() {
        // TODO: test outputTokenSupply
    }

    /**
     * Test the property 'outputTokenPriceUsd'
     */
    @Test
    public void outputTokenPriceUsdTest() {
        // TODO: test outputTokenPriceUsd
    }

    /**
     * Test the property 'stakedOutputTokenAmount'
     */
    @Test
    public void stakedOutputTokenAmountTest() {
        // TODO: test stakedOutputTokenAmount
    }

    /**
     * Test the property 'rewardTokenEmissionsAmount'
     */
    @Test
    public void rewardTokenEmissionsAmountTest() {
        // TODO: test rewardTokenEmissionsAmount
    }

    /**
     * Test the property 'rewardTokenEmissionsUsd'
     */
    @Test
    public void rewardTokenEmissionsUsdTest() {
        // TODO: test rewardTokenEmissionsUsd
    }

}
