<?php
/**
 * SUSHISWAPV3ETHEREUMApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * On Chain Dapps - REST API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SUSHISWAPV3ETHEREUMApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SUSHISWAPV3ETHEREUMApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMAccountsCurrent
     *
     * Accounts (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMAccountsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMActiveAccountsCurrent
     *
     * ActiveAccounts (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMActiveAccountsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMDepositsCurrent
     *
     * Deposits (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMDepositsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMDexAmmProtocolsCurrent
     *
     * DexAmmProtocols (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMDexAmmProtocolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMFinancialsDailySnapshotsCurrent
     *
     * FinancialsDailySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMFinancialsDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMLiquidityPoolAmountsCurrent
     *
     * LiquidityPoolAmounts (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMLiquidityPoolAmountsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotsCurrent
     *
     * LiquidityPoolDailySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMLiquidityPoolFeesCurrent
     *
     * LiquidityPoolFees (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMLiquidityPoolFeesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotsCurrent
     *
     * LiquidityPoolHourlySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMLiquidityPoolsCurrent
     *
     * LiquidityPools (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMLiquidityPoolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMPositionSnapshotsCurrent
     *
     * PositionSnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMPositionSnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMPositionsCurrent
     *
     * Positions (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMPositionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMRewardTokensCurrent
     *
     * RewardTokens (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMRewardTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMSwapsCurrent
     *
     * Swaps (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMSwapsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMTickDailySnapshotsCurrent
     *
     * TickDailySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMTickDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMTickHourlySnapshotsCurrent
     *
     * TickHourlySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMTickHourlySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMTicksCurrent
     *
     * Ticks (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMTicksCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMTokenWhiteListSymbolsCurrent
     *
     * TokenWhiteListSymbols (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMTokenWhiteListSymbolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMTokenWhiteListsCurrent
     *
     * TokenWhiteLists (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMTokenWhiteListsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMTokensCurrent
     *
     * Tokens (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotsCurrent
     *
     * UsageMetricsDailySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotsCurrent
     *
     * UsageMetricsHourlySnapshots (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sUSHISWAPV3ETHEREUMWithdrawsCurrent
     *
     * Withdraws (current).
     *
     */
    public function testSUSHISWAPV3ETHEREUMWithdrawsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
