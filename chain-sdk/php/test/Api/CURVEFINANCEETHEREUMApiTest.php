<?php
/**
 * CURVEFINANCEETHEREUMApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * On Chain Dapps - REST API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * CURVEFINANCEETHEREUMApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CURVEFINANCEETHEREUMApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for cURVEFINANCEETHEREUMAccountsCurrent
     *
     * Accounts (current).
     *
     */
    public function testCURVEFINANCEETHEREUMAccountsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMActiveAccountsCurrent
     *
     * ActiveAccounts (current).
     *
     */
    public function testCURVEFINANCEETHEREUMActiveAccountsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMDepositsCurrent
     *
     * Deposits (current).
     *
     */
    public function testCURVEFINANCEETHEREUMDepositsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMDexAmmProtocolsCurrent
     *
     * DexAmmProtocols (current).
     *
     */
    public function testCURVEFINANCEETHEREUMDexAmmProtocolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent
     *
     * FinancialsDailySnapshots (current).
     *
     */
    public function testCURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMLiquidityGaugesCurrent
     *
     * LiquidityGauges (current).
     *
     */
    public function testCURVEFINANCEETHEREUMLiquidityGaugesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent
     *
     * LiquidityPoolDailySnapshots (current).
     *
     */
    public function testCURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMLiquidityPoolFeesCurrent
     *
     * LiquidityPoolFees (current).
     *
     */
    public function testCURVEFINANCEETHEREUMLiquidityPoolFeesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent
     *
     * LiquidityPoolHourlySnapshots (current).
     *
     */
    public function testCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMLiquidityPoolsCurrent
     *
     * LiquidityPools (current).
     *
     */
    public function testCURVEFINANCEETHEREUMLiquidityPoolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMLpTokensCurrent
     *
     * LpTokens (current).
     *
     */
    public function testCURVEFINANCEETHEREUMLpTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMRewardTokensCurrent
     *
     * RewardTokens (current).
     *
     */
    public function testCURVEFINANCEETHEREUMRewardTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMSwapsCurrent
     *
     * Swaps (current).
     *
     */
    public function testCURVEFINANCEETHEREUMSwapsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMTokensCurrent
     *
     * Tokens (current).
     *
     */
    public function testCURVEFINANCEETHEREUMTokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent
     *
     * UsageMetricsDailySnapshots (current).
     *
     */
    public function testCURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent
     *
     * UsageMetricsHourlySnapshots (current).
     *
     */
    public function testCURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cURVEFINANCEETHEREUMWithdrawsCurrent
     *
     * Withdraws (current).
     *
     */
    public function testCURVEFINANCEETHEREUMWithdrawsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
