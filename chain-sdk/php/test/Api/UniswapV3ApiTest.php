<?php
/**
 * UniswapV3ApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * On Chain Dapps - REST API
 *
 * This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UniswapV3ApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UniswapV3ApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for uniswapV3BundlesCurrent
     *
     * Bundles (current).
     *
     */
    public function testUniswapV3BundlesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3BurnsCurrent
     *
     * Burns (current).
     *
     */
    public function testUniswapV3BurnsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3FactoriesCurrent
     *
     * Factories (current).
     *
     */
    public function testUniswapV3FactoriesCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3MintsCurrent
     *
     * Mints (current).
     *
     */
    public function testUniswapV3MintsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PoolDayDataCurrent
     *
     * PoolDayData (current).
     *
     */
    public function testUniswapV3PoolDayDataCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PoolHourDataCurrent
     *
     * PoolHourData (current).
     *
     */
    public function testUniswapV3PoolHourDataCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PoolsCurrent
     *
     * Pools (current).
     *
     */
    public function testUniswapV3PoolsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PositionSnapshotsCurrent
     *
     * PositionSnapshots (current).
     *
     */
    public function testUniswapV3PositionSnapshotsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3PositionsCurrent
     *
     * Positions (current).
     *
     */
    public function testUniswapV3PositionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3SwapsCurrent
     *
     * Swaps (current).
     *
     */
    public function testUniswapV3SwapsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TickDayDataCurrent
     *
     * TickDayData (current).
     *
     */
    public function testUniswapV3TickDayDataCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TicksCurrent
     *
     * Ticks (current).
     *
     */
    public function testUniswapV3TicksCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TokenHourDataCurrent
     *
     * TokenHourData (current).
     *
     */
    public function testUniswapV3TokenHourDataCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TokenV3DayDataCurrent
     *
     * TokenV3DayData (current).
     *
     */
    public function testUniswapV3TokenV3DayDataCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TokensCurrent
     *
     * Tokens (current).
     *
     */
    public function testUniswapV3TokensCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3TransactionsCurrent
     *
     * Transactions (current).
     *
     */
    public function testUniswapV3TransactionsCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uniswapV3UniswapDayDataCurrent
     *
     * UniswapDayData (current).
     *
     */
    public function testUniswapV3UniswapDayDataCurrent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
