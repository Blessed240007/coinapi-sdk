/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param entryTime 
 * @param recvTime 
 * @param blockNumber Number of block in which entity was recorded.
 * @param id (# of hours since Unix epoch time)
 * @param hour Number of hours since Unix epoch time
 * @param protocol Protocol this snapshot is associated with
 * @param hourlyActiveUsers Number of unique hourly active users
 * @param cumulativeUniqueUsers Number of cumulative unique users
 * @param hourlyTransactionCount Total number of transactions occurred in an hour. Transactions include all entities that implement the Event interface.
 * @param hourlyDepositCount Total number of deposits (add liquidity) in an hour
 * @param hourlyWithdrawCount Total number of withdrawals (remove liquidity) in an hour
 * @param hourlySwapCount Total number of trades (swaps) in an hour
 * @param timestamp Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed)
 */


data class PANCAKESWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO (

    @Json(name = "entry_time")
    val entryTime: java.time.OffsetDateTime? = null,

    @Json(name = "recv_time")
    val recvTime: java.time.OffsetDateTime? = null,

    /* Number of block in which entity was recorded. */
    @Json(name = "block_number")
    val blockNumber: kotlin.Long? = null,

    /* (# of hours since Unix epoch time) */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* Number of hours since Unix epoch time */
    @Json(name = "hour")
    val hour: kotlin.Int? = null,

    /* Protocol this snapshot is associated with */
    @Json(name = "protocol")
    val protocol: kotlin.String? = null,

    /* Number of unique hourly active users */
    @Json(name = "hourly_active_users")
    val hourlyActiveUsers: kotlin.Int? = null,

    /* Number of cumulative unique users */
    @Json(name = "cumulative_unique_users")
    val cumulativeUniqueUsers: kotlin.Int? = null,

    /* Total number of transactions occurred in an hour. Transactions include all entities that implement the Event interface. */
    @Json(name = "hourly_transaction_count")
    val hourlyTransactionCount: kotlin.Int? = null,

    /* Total number of deposits (add liquidity) in an hour */
    @Json(name = "hourly_deposit_count")
    val hourlyDepositCount: kotlin.Int? = null,

    /* Total number of withdrawals (remove liquidity) in an hour */
    @Json(name = "hourly_withdraw_count")
    val hourlyWithdrawCount: kotlin.Int? = null,

    /* Total number of trades (swaps) in an hour */
    @Json(name = "hourly_swap_count")
    val hourlySwapCount: kotlin.Int? = null,

    /* Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed) */
    @Json(name = "timestamp")
    val timestamp: kotlin.String? = null

)

