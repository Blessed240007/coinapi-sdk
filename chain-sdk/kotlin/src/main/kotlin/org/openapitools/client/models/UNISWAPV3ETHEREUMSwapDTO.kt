/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.TransactionsETradeAggressiveSide

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Swap are created for each token swap within a pair.
 *
 * @param entryTime 
 * @param recvTime 
 * @param blockNumber Number of block in which entity was recorded.
 * @param vid 
 * @param block 
 * @param id 
 * @param hash 
 * @param nonce 
 * @param logIndex 
 * @param gasLimit 
 * @param gasUsed 
 * @param gasPrice 
 * @param protocol 
 * @param account 
 * @param pool 
 * @param timestamp 
 * @param tick 
 * @param tokenIn 
 * @param amountIn 
 * @param amountInUsd 
 * @param tokenOut 
 * @param amountOut 
 * @param amountOutUsd 
 * @param reserveAmounts 
 * @param poolId 
 * @param transactionId 
 * @param evaluatedPrice 
 * @param evaluatedAmount 
 * @param evaluatedAggressor 
 */


data class UNISWAPV3ETHEREUMSwapDTO (

    @Json(name = "entry_time")
    val entryTime: java.time.OffsetDateTime? = null,

    @Json(name = "recv_time")
    val recvTime: java.time.OffsetDateTime? = null,

    /* Number of block in which entity was recorded. */
    @Json(name = "block_number")
    val blockNumber: kotlin.Long? = null,

    /*  */
    @Json(name = "vid")
    val vid: kotlin.Long? = null,

    /*  */
    @Json(name = "block_")
    val block: kotlin.Int? = null,

    /*  */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /*  */
    @Json(name = "hash")
    val hash: kotlin.String? = null,

    /*  */
    @Json(name = "nonce")
    val nonce: kotlin.String? = null,

    /*  */
    @Json(name = "log_index")
    val logIndex: kotlin.Int? = null,

    /*  */
    @Json(name = "gas_limit")
    val gasLimit: kotlin.String? = null,

    /*  */
    @Json(name = "gas_used")
    val gasUsed: kotlin.String? = null,

    /*  */
    @Json(name = "gas_price")
    val gasPrice: kotlin.String? = null,

    /*  */
    @Json(name = "protocol")
    val protocol: kotlin.String? = null,

    /*  */
    @Json(name = "account")
    val account: kotlin.String? = null,

    /*  */
    @Json(name = "pool")
    val pool: kotlin.String? = null,

    /*  */
    @Json(name = "timestamp")
    val timestamp: kotlin.String? = null,

    /*  */
    @Json(name = "tick")
    val tick: kotlin.String? = null,

    /*  */
    @Json(name = "token_in")
    val tokenIn: kotlin.String? = null,

    /*  */
    @Json(name = "amount_in")
    val amountIn: kotlin.String? = null,

    /*  */
    @Json(name = "amount_in_usd")
    val amountInUsd: kotlin.String? = null,

    /*  */
    @Json(name = "token_out")
    val tokenOut: kotlin.String? = null,

    /*  */
    @Json(name = "amount_out")
    val amountOut: kotlin.String? = null,

    /*  */
    @Json(name = "amount_out_usd")
    val amountOutUsd: kotlin.String? = null,

    /*  */
    @Json(name = "reserve_amounts")
    val reserveAmounts: kotlin.collections.List<kotlin.String>? = null,

    @Json(name = "pool_id")
    val poolId: kotlin.String? = null,

    @Json(name = "transaction_id")
    val transactionId: kotlin.String? = null,

    @Json(name = "evaluated_price")
    val evaluatedPrice: kotlin.Double? = null,

    @Json(name = "evaluated_amount")
    val evaluatedAmount: kotlin.Double? = null,

    @Json(name = "evaluated_aggressor")
    val evaluatedAggressor: TransactionsETradeAggressiveSide? = null

)

