/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param entryTime 
 * @param recvTime 
 * @param blockNumber Number of block in which entity was recorded.
 * @param vid 
 * @param id (pool address)-(tick index)
 * @param index tick index
 * @param pool Liquidity pool this tick belongs to
 * @param createdTimestamp Creation timestamp
 * @param createdBlockNumber Creation block number
 * @param prices calculated price of token0 of tick within this pool - constant
 * @param liquidityGross total liquidity pool has as tick lower or upper
 * @param liquidityGrossUsd total liquidity in USD pool has as tick lower or upper
 * @param liquidityNet how much liquidity changes when tick crossed
 * @param liquidityNetUsd how much liquidity in USD changes when tick crossed
 * @param lastSnapshotDayId Day ID of the most recent daily snapshot
 * @param lastSnapshotHourId Hour ID of the most recent hourly snapshot
 * @param lastUpdateTimestamp Timestamp of the last time this entity was updated
 * @param lastUpdateBlockNumber Block number of the last time this entity was updated
 */


data class UNISWAPV3ETHEREUMTickDTO (

    @Json(name = "entry_time")
    val entryTime: java.time.OffsetDateTime? = null,

    @Json(name = "recv_time")
    val recvTime: java.time.OffsetDateTime? = null,

    /* Number of block in which entity was recorded. */
    @Json(name = "block_number")
    val blockNumber: kotlin.Long? = null,

    /*  */
    @Json(name = "vid")
    val vid: kotlin.Long? = null,

    /* (pool address)-(tick index) */
    @Json(name = "id")
    val id: kotlin.String? = null,

    /* tick index */
    @Json(name = "index")
    val index: kotlin.String? = null,

    /* Liquidity pool this tick belongs to */
    @Json(name = "pool")
    val pool: kotlin.String? = null,

    /* Creation timestamp */
    @Json(name = "created_timestamp")
    val createdTimestamp: kotlin.String? = null,

    /* Creation block number */
    @Json(name = "created_block_number")
    val createdBlockNumber: kotlin.String? = null,

    /* calculated price of token0 of tick within this pool - constant */
    @Json(name = "prices")
    val prices: kotlin.collections.List<kotlin.String>? = null,

    /* total liquidity pool has as tick lower or upper */
    @Json(name = "liquidity_gross")
    val liquidityGross: kotlin.String? = null,

    /* total liquidity in USD pool has as tick lower or upper */
    @Json(name = "liquidity_gross_usd")
    val liquidityGrossUsd: kotlin.String? = null,

    /* how much liquidity changes when tick crossed */
    @Json(name = "liquidity_net")
    val liquidityNet: kotlin.String? = null,

    /* how much liquidity in USD changes when tick crossed */
    @Json(name = "liquidity_net_usd")
    val liquidityNetUsd: kotlin.String? = null,

    /* Day ID of the most recent daily snapshot */
    @Json(name = "last_snapshot_day_id")
    val lastSnapshotDayId: kotlin.Int? = null,

    /* Hour ID of the most recent hourly snapshot */
    @Json(name = "last_snapshot_hour_id")
    val lastSnapshotHourId: kotlin.Int? = null,

    /* Timestamp of the last time this entity was updated */
    @Json(name = "last_update_timestamp")
    val lastUpdateTimestamp: kotlin.String? = null,

    /* Block number of the last time this entity was updated */
    @Json(name = "last_update_block_number")
    val lastUpdateBlockNumber: kotlin.String? = null

)

