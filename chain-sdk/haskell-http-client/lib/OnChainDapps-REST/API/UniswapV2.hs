{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.API.UniswapV2
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.API.UniswapV2 where

import OnChainDapps-REST.Core
import OnChainDapps-REST.MimeTypes
import OnChainDapps-REST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV2

-- *** uniswapV2BundlesCurrent

-- | @GET \/dapps\/uniswapv2\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV2BundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2BundlesCurrent MimeNoContent [UniswapV2BundleDTO] accept
uniswapV2BundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/bundles/current"]

data UniswapV2BundlesCurrent  
-- | @application/json@
instance Produces UniswapV2BundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2BundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2BundlesCurrent MimePlainText


-- *** uniswapV2BurnsCurrent

-- | @GET \/dapps\/uniswapv2\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV2BurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2BurnsCurrent MimeNoContent [UniswapV2BurnDTO] accept
uniswapV2BurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/burns/current"]

data UniswapV2BurnsCurrent  
-- | @application/json@
instance Produces UniswapV2BurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2BurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2BurnsCurrent MimePlainText


-- *** uniswapV2LiquidityPositionSnapshotsCurrent

-- | @GET \/dapps\/uniswapv2\/liquidityPositionSnapshots\/current@
-- 
-- LiquidityPositionSnapshots (current)
-- 
-- Gets liquidityPositionSnapshots.
-- 
uniswapV2LiquidityPositionSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2LiquidityPositionSnapshotsCurrent MimeNoContent [UniswapV2LiquidityPositionSnapshotDTO] accept
uniswapV2LiquidityPositionSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositionSnapshots/current"]

data UniswapV2LiquidityPositionSnapshotsCurrent  
-- | @application/json@
instance Produces UniswapV2LiquidityPositionSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2LiquidityPositionSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2LiquidityPositionSnapshotsCurrent MimePlainText


-- *** uniswapV2LiquidityPositionsCurrent

-- | @GET \/dapps\/uniswapv2\/liquidityPositions\/current@
-- 
-- LiquidityPositions (current)
-- 
-- Gets liquidityPositions.
-- 
uniswapV2LiquidityPositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2LiquidityPositionsCurrent MimeNoContent [UniswapV2LiquidityPositionDTO] accept
uniswapV2LiquidityPositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/liquidityPositions/current"]

data UniswapV2LiquidityPositionsCurrent  
-- | @application/json@
instance Produces UniswapV2LiquidityPositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2LiquidityPositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2LiquidityPositionsCurrent MimePlainText


-- *** uniswapV2MintsCurrent

-- | @GET \/dapps\/uniswapv2\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV2MintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2MintsCurrent MimeNoContent [UniswapV2MintDTO] accept
uniswapV2MintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/mints/current"]

data UniswapV2MintsCurrent  
-- | @application/json@
instance Produces UniswapV2MintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2MintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2MintsCurrent MimePlainText


-- *** uniswapV2PairDayDataCurrent

-- | @GET \/dapps\/uniswapv2\/pairDayData\/current@
-- 
-- PairDayData (current)
-- 
-- Gets pairDayData.
-- 
uniswapV2PairDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2PairDayDataCurrent MimeNoContent [UniswapV2PairDayDataDTO] accept
uniswapV2PairDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairDayData/current"]

data UniswapV2PairDayDataCurrent  
-- | @application/json@
instance Produces UniswapV2PairDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2PairDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2PairDayDataCurrent MimePlainText


-- *** uniswapV2PairHourDataCurrent

-- | @GET \/dapps\/uniswapv2\/pairHourData\/current@
-- 
-- PairHourData (current)
-- 
-- Gets pairHourData.
-- 
uniswapV2PairHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2PairHourDataCurrent MimeNoContent [UniswapV2PairHourDataDTO] accept
uniswapV2PairHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairHourData/current"]

data UniswapV2PairHourDataCurrent  
-- | @application/json@
instance Produces UniswapV2PairHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2PairHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2PairHourDataCurrent MimePlainText


-- *** uniswapV2PairsCurrent

-- | @GET \/dapps\/uniswapv2\/pairs\/current@
-- 
-- Pairs (current)
-- 
-- Gets pairs.
-- 
uniswapV2PairsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2PairsCurrent MimeNoContent [UniswapV2PairDTO] accept
uniswapV2PairsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/pairs/current"]

data UniswapV2PairsCurrent  

-- | /Optional Param/ "id" - Pair contract address.
instance HasOptionalParam UniswapV2PairsCurrent Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV2PairsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2PairsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2PairsCurrent MimePlainText


-- *** uniswapV2SwapsCurrent

-- | @GET \/dapps\/uniswapv2\/swaps\/current@
-- 
-- Swaps (current)
-- 
-- Gets swaps.
-- 
uniswapV2SwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2SwapsCurrent MimeNoContent [UniswapV2SwapDTO] accept
uniswapV2SwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/swaps/current"]

data UniswapV2SwapsCurrent  

-- | /Optional Param/ "pair" - Reference to pair.
instance HasOptionalParam UniswapV2SwapsCurrent Pair where
  applyOptionalParam req (Pair xs) =
    req `addQuery` toQuery ("pair", Just xs)
-- | @application/json@
instance Produces UniswapV2SwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2SwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2SwapsCurrent MimePlainText


-- *** uniswapV2TokenDayDataCurrent

-- | @GET \/dapps\/uniswapv2\/tokenDayData\/current@
-- 
-- TokenDayData (current)
-- 
-- Gets tokenDayData.
-- 
uniswapV2TokenDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2TokenDayDataCurrent MimeNoContent [UniswapV2TokenDayDataDTO] accept
uniswapV2TokenDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokenDayData/current"]

data UniswapV2TokenDayDataCurrent  
-- | @application/json@
instance Produces UniswapV2TokenDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2TokenDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2TokenDayDataCurrent MimePlainText


-- *** uniswapV2TokensCurrent

-- | @GET \/dapps\/uniswapv2\/tokens\/current@
-- 
-- Tokens (current)
-- 
-- Gets tokens.
-- 
uniswapV2TokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2TokensCurrent MimeNoContent [UniswapV2TokenDTO] accept
uniswapV2TokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/tokens/current"]

data UniswapV2TokensCurrent  
-- | @application/json@
instance Produces UniswapV2TokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2TokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2TokensCurrent MimePlainText


-- *** uniswapV2TransactionsCurrent

-- | @GET \/dapps\/uniswapv2\/transactions\/current@
-- 
-- Transactions (current)
-- 
-- Gets transactions.
-- 
uniswapV2TransactionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2TransactionsCurrent MimeNoContent [UniswapV2TransactionDTO] accept
uniswapV2TransactionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/transactions/current"]

data UniswapV2TransactionsCurrent  
-- | @application/json@
instance Produces UniswapV2TransactionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2TransactionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2TransactionsCurrent MimePlainText


-- *** uniswapV2UniswapDayDataCurrent

-- | @GET \/dapps\/uniswapv2\/uniswapDayData\/current@
-- 
-- UniswapDayData (current)
-- 
-- Gets uniswapDayData.
-- 
uniswapV2UniswapDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2UniswapDayDataCurrent MimeNoContent [UniswapV2UniswapDayDataDTO] accept
uniswapV2UniswapDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/uniswapDayData/current"]

data UniswapV2UniswapDayDataCurrent  
-- | @application/json@
instance Produces UniswapV2UniswapDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2UniswapDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2UniswapDayDataCurrent MimePlainText


-- *** uniswapV2UniswapFactoriesCurrent

-- | @GET \/dapps\/uniswapv2\/uniswapFactories\/current@
-- 
-- UniswapFactories (current)
-- 
-- Gets uniswapFactories.
-- 
uniswapV2UniswapFactoriesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2UniswapFactoriesCurrent MimeNoContent [UniswapV2UniswapFactoryDTO] accept
uniswapV2UniswapFactoriesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/uniswapFactories/current"]

data UniswapV2UniswapFactoriesCurrent  
-- | @application/json@
instance Produces UniswapV2UniswapFactoriesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2UniswapFactoriesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2UniswapFactoriesCurrent MimePlainText


-- *** uniswapV2UsersCurrent

-- | @GET \/dapps\/uniswapv2\/users\/current@
-- 
-- Users (current)
-- 
-- Gets users.
-- 
uniswapV2UsersCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV2UsersCurrent MimeNoContent [UniswapV2UserDTO] accept
uniswapV2UsersCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv2/users/current"]

data UniswapV2UsersCurrent  
-- | @application/json@
instance Produces UniswapV2UsersCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV2UsersCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV2UsersCurrent MimePlainText

