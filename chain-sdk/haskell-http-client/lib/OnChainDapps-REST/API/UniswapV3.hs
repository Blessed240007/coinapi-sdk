{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.API.UniswapV3
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.API.UniswapV3 where

import OnChainDapps-REST.Core
import OnChainDapps-REST.MimeTypes
import OnChainDapps-REST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** UniswapV3

-- *** uniswapV3BundlesCurrent

-- | @GET \/dapps\/uniswapv3\/bundles\/current@
-- 
-- Bundles (current)
-- 
-- Gets bundles.
-- 
uniswapV3BundlesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3BundlesCurrent MimeNoContent [UniswapV3BundleDTO] accept
uniswapV3BundlesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/bundles/current"]

data UniswapV3BundlesCurrent  
-- | @application/json@
instance Produces UniswapV3BundlesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3BundlesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3BundlesCurrent MimePlainText


-- *** uniswapV3BurnsCurrent

-- | @GET \/dapps\/uniswapv3\/burns\/current@
-- 
-- Burns (current)
-- 
-- Gets burns.
-- 
uniswapV3BurnsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3BurnsCurrent MimeNoContent [UniswapV3BurnDTO] accept
uniswapV3BurnsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/burns/current"]

data UniswapV3BurnsCurrent  
-- | @application/json@
instance Produces UniswapV3BurnsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3BurnsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3BurnsCurrent MimePlainText


-- *** uniswapV3FactoriesCurrent

-- | @GET \/dapps\/uniswapv3\/factories\/current@
-- 
-- Factories (current)
-- 
-- Gets factories.
-- 
uniswapV3FactoriesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3FactoriesCurrent MimeNoContent [UniswapV3FactoryDTO] accept
uniswapV3FactoriesCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/factories/current"]

data UniswapV3FactoriesCurrent  
-- | @application/json@
instance Produces UniswapV3FactoriesCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3FactoriesCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3FactoriesCurrent MimePlainText


-- *** uniswapV3MintsCurrent

-- | @GET \/dapps\/uniswapv3\/mints\/current@
-- 
-- Mints (current)
-- 
-- Gets mints.
-- 
uniswapV3MintsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3MintsCurrent MimeNoContent [UniswapV3MintDTO] accept
uniswapV3MintsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/mints/current"]

data UniswapV3MintsCurrent  
-- | @application/json@
instance Produces UniswapV3MintsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3MintsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3MintsCurrent MimePlainText


-- *** uniswapV3PoolDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolDayData\/current@
-- 
-- PoolDayData (current)
-- 
-- Gets poolDayData.
-- 
uniswapV3PoolDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PoolDayDataCurrent MimeNoContent [UniswapV3PoolDayDataDTO] accept
uniswapV3PoolDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolDayData/current"]

data UniswapV3PoolDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3PoolDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolDayDataCurrent MimePlainText


-- *** uniswapV3PoolHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/poolHourData\/current@
-- 
-- PoolHourData (current)
-- 
-- Gets poolHourData.
-- 
uniswapV3PoolHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PoolHourDataCurrent MimeNoContent [UniswapV3PoolHourDataDTO] accept
uniswapV3PoolHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/poolHourData/current"]

data UniswapV3PoolHourDataCurrent  
-- | @application/json@
instance Produces UniswapV3PoolHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolHourDataCurrent MimePlainText


-- *** uniswapV3PoolsCurrent

-- | @GET \/dapps\/uniswapv3\/pools\/current@
-- 
-- Pools (current)
-- 
-- Gets pools.
-- 
uniswapV3PoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PoolsCurrent MimeNoContent [UniswapV3PoolDTO] accept
uniswapV3PoolsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/pools/current"]

data UniswapV3PoolsCurrent  

-- | /Optional Param/ "id" - Pool address.
instance HasOptionalParam UniswapV3PoolsCurrent Id where
  applyOptionalParam req (Id xs) =
    req `addQuery` toQuery ("id", Just xs)
-- | @application/json@
instance Produces UniswapV3PoolsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PoolsCurrent MimePlainText


-- *** uniswapV3PositionSnapshotsCurrent

-- | @GET \/dapps\/uniswapv3\/positionSnapshots\/current@
-- 
-- PositionSnapshots (current)
-- 
-- Gets positionSnapshots.
-- 
uniswapV3PositionSnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PositionSnapshotsCurrent MimeNoContent [UniswapV3PositionSnapshotDTO] accept
uniswapV3PositionSnapshotsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positionSnapshots/current"]

data UniswapV3PositionSnapshotsCurrent  
-- | @application/json@
instance Produces UniswapV3PositionSnapshotsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PositionSnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PositionSnapshotsCurrent MimePlainText


-- *** uniswapV3PositionsCurrent

-- | @GET \/dapps\/uniswapv3\/positions\/current@
-- 
-- Positions (current)
-- 
-- Gets positions.
-- 
uniswapV3PositionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3PositionsCurrent MimeNoContent [UniswapV3PositionDTO] accept
uniswapV3PositionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/positions/current"]

data UniswapV3PositionsCurrent  
-- | @application/json@
instance Produces UniswapV3PositionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3PositionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3PositionsCurrent MimePlainText


-- *** uniswapV3SwapsCurrent

-- | @GET \/dapps\/uniswapv3\/swaps\/current@
-- 
-- Swaps (current)
-- 
-- Gets swaps.
-- 
uniswapV3SwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3SwapsCurrent MimeNoContent [UniswapV3SwapDTO] accept
uniswapV3SwapsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/swaps/current"]

data UniswapV3SwapsCurrent  

-- | /Optional Param/ "pool" - Pool swap occured within.
instance HasOptionalParam UniswapV3SwapsCurrent Pool where
  applyOptionalParam req (Pool xs) =
    req `addQuery` toQuery ("pool", Just xs)
-- | @application/json@
instance Produces UniswapV3SwapsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3SwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3SwapsCurrent MimePlainText


-- *** uniswapV3TickDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/tickDayData\/current@
-- 
-- TickDayData (current)
-- 
-- Gets tickDayData.
-- 
uniswapV3TickDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TickDayDataCurrent MimeNoContent [UniswapV3TickDayDataDTO] accept
uniswapV3TickDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tickDayData/current"]

data UniswapV3TickDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3TickDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TickDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TickDayDataCurrent MimePlainText


-- *** uniswapV3TicksCurrent

-- | @GET \/dapps\/uniswapv3\/ticks\/current@
-- 
-- Ticks (current)
-- 
-- Gets ticks.
-- 
uniswapV3TicksCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TicksCurrent MimeNoContent [UniswapV3TickDTO] accept
uniswapV3TicksCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/ticks/current"]

data UniswapV3TicksCurrent  
-- | @application/json@
instance Produces UniswapV3TicksCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TicksCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TicksCurrent MimePlainText


-- *** uniswapV3TokenHourDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokenHourData\/current@
-- 
-- TokenHourData (current)
-- 
-- Gets tokenHourData.
-- 
uniswapV3TokenHourDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TokenHourDataCurrent MimeNoContent [UniswapV3TokenHourDataDTO] accept
uniswapV3TokenHourDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenHourData/current"]

data UniswapV3TokenHourDataCurrent  
-- | @application/json@
instance Produces UniswapV3TokenHourDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokenHourDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokenHourDataCurrent MimePlainText


-- *** uniswapV3TokenV3DayDataCurrent

-- | @GET \/dapps\/uniswapv3\/tokenV3DayData\/current@
-- 
-- TokenV3DayData (current)
-- 
-- Gets tokenV3DayData.
-- 
uniswapV3TokenV3DayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TokenV3DayDataCurrent MimeNoContent [UniswapV3TokenV3DayDataDTO] accept
uniswapV3TokenV3DayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokenV3DayData/current"]

data UniswapV3TokenV3DayDataCurrent  
-- | @application/json@
instance Produces UniswapV3TokenV3DayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokenV3DayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokenV3DayDataCurrent MimePlainText


-- *** uniswapV3TokensCurrent

-- | @GET \/dapps\/uniswapv3\/tokens\/current@
-- 
-- Tokens (current)
-- 
-- Gets tokens.
-- 
uniswapV3TokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TokensCurrent MimeNoContent [UniswapV3TokenDTO] accept
uniswapV3TokensCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/tokens/current"]

data UniswapV3TokensCurrent  
-- | @application/json@
instance Produces UniswapV3TokensCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TokensCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TokensCurrent MimePlainText


-- *** uniswapV3TransactionsCurrent

-- | @GET \/dapps\/uniswapv3\/transactions\/current@
-- 
-- Transactions (current)
-- 
-- Gets transactions.
-- 
uniswapV3TransactionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3TransactionsCurrent MimeNoContent [UniswapV3TransactionDTO] accept
uniswapV3TransactionsCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/transactions/current"]

data UniswapV3TransactionsCurrent  
-- | @application/json@
instance Produces UniswapV3TransactionsCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3TransactionsCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3TransactionsCurrent MimePlainText


-- *** uniswapV3UniswapDayDataCurrent

-- | @GET \/dapps\/uniswapv3\/uniswapDayData\/current@
-- 
-- UniswapDayData (current)
-- 
-- Gets uniswapDayData.
-- 
uniswapV3UniswapDayDataCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest UniswapV3UniswapDayDataCurrent MimeNoContent [UniswapV3UniswapDayDataDTO] accept
uniswapV3UniswapDayDataCurrent  _ =
  _mkRequest "GET" ["/dapps/uniswapv3/uniswapDayData/current"]

data UniswapV3UniswapDayDataCurrent  
-- | @application/json@
instance Produces UniswapV3UniswapDayDataCurrent MimeJSON
-- | @text/json@
instance Produces UniswapV3UniswapDayDataCurrent MimeTextJson
-- | @text/plain@
instance Produces UniswapV3UniswapDayDataCurrent MimePlainText

