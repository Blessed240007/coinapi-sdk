{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.API.CRYPTOPUNKSETHEREUM
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.API.CRYPTOPUNKSETHEREUM where

import OnChainDapps-REST.Core
import OnChainDapps-REST.MimeTypes
import OnChainDapps-REST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** CRYPTOPUNKSETHEREUM

-- *** cRYPTOPUNKSETHEREUMBidsCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/bids\/current@
-- 
-- Bids (current)
-- 
-- Gets bids.
-- 
cRYPTOPUNKSETHEREUMBidsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMBidsCurrent MimeNoContent [CRYPTOPUNKSBidDTO] accept
cRYPTOPUNKSETHEREUMBidsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/bids/current"]

data CRYPTOPUNKSETHEREUMBidsCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMBidsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMBidsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMBidsCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMBidsCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/collectionDailySnapshots\/current@
-- 
-- CollectionDailySnapshots (current)
-- 
-- Gets collectionDailySnapshots.
-- 
cRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent MimeNoContent [CRYPTOPUNKSCollectionDailySnapshotDTO] accept
cRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/collectionDailySnapshots/current"]

data CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMCollectionsCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/collections\/current@
-- 
-- Collections (current)
-- 
-- Gets collections.
-- 
cRYPTOPUNKSETHEREUMCollectionsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMCollectionsCurrent MimeNoContent [CRYPTOPUNKSCollectionDTO] accept
cRYPTOPUNKSETHEREUMCollectionsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/collections/current"]

data CRYPTOPUNKSETHEREUMCollectionsCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMCollectionsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMCollectionsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMCollectionsCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMCollectionsCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMDataSourcesCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/dataSources\/current@
-- 
-- DataSources (current)
-- 
-- Gets dataSources.
-- 
cRYPTOPUNKSETHEREUMDataSourcesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMDataSourcesCurrent MimeNoContent [CRYPTOPUNKSDataSourcesDTO] accept
cRYPTOPUNKSETHEREUMDataSourcesCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/dataSources/current"]

data CRYPTOPUNKSETHEREUMDataSourcesCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMDataSourcesCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMDataSourcesCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMDataSourcesCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMDataSourcesCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMItemsCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/items\/current@
-- 
-- Items (current)
-- 
-- Gets items.
-- 
cRYPTOPUNKSETHEREUMItemsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMItemsCurrent MimeNoContent [CRYPTOPUNKSItemDTO] accept
cRYPTOPUNKSETHEREUMItemsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/items/current"]

data CRYPTOPUNKSETHEREUMItemsCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMItemsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMItemsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMItemsCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMItemsCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMMarketPlacesCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/marketPlaces\/current@
-- 
-- MarketPlaces (current)
-- 
-- Gets marketPlaces.
-- 
cRYPTOPUNKSETHEREUMMarketPlacesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMMarketPlacesCurrent MimeNoContent [CRYPTOPUNKSMarketPlaceDTO] accept
cRYPTOPUNKSETHEREUMMarketPlacesCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/marketPlaces/current"]

data CRYPTOPUNKSETHEREUMMarketPlacesCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMMarketPlacesCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMMarketPlacesCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMMarketPlacesCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMMarketPlacesCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/marketplaceDailySnapshots\/current@
-- 
-- MarketplaceDailySnapshots (current)
-- 
-- Gets marketplaceDailySnapshots.
-- 
cRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent MimeNoContent [CRYPTOPUNKSMarketplaceDailySnapshotDTO] accept
cRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/marketplaceDailySnapshots/current"]

data CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMTradesCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/trades\/current@
-- 
-- Trades (current)
-- 
-- Gets trades.
-- 
cRYPTOPUNKSETHEREUMTradesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMTradesCurrent MimeNoContent [CRYPTOPUNKSTradeDTO] accept
cRYPTOPUNKSETHEREUMTradesCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/trades/current"]

data CRYPTOPUNKSETHEREUMTradesCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMTradesCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMTradesCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMTradesCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMTradesCurrent MimePlainText


-- *** cRYPTOPUNKSETHEREUMUsersCurrent

-- | @GET \/v1\/dapps\/cryptopunks-ethereum\/users\/current@
-- 
-- Users (current)
-- 
-- Gets users.
-- 
cRYPTOPUNKSETHEREUMUsersCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CRYPTOPUNKSETHEREUMUsersCurrent MimeNoContent [CRYPTOPUNKSUserDTO] accept
cRYPTOPUNKSETHEREUMUsersCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/cryptopunks-ethereum/users/current"]

data CRYPTOPUNKSETHEREUMUsersCurrent  
-- | @application/json@
instance Produces CRYPTOPUNKSETHEREUMUsersCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CRYPTOPUNKSETHEREUMUsersCurrent MimeXMsgpack
-- | @text/json@
instance Produces CRYPTOPUNKSETHEREUMUsersCurrent MimeTextJson
-- | @text/plain@
instance Produces CRYPTOPUNKSETHEREUMUsersCurrent MimePlainText

