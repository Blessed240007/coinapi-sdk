{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.API.Cow
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.API.Cow where

import OnChainDapps-REST.Core
import OnChainDapps-REST.MimeTypes
import OnChainDapps-REST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** Cow

-- *** cowOrdersCurrent

-- | @GET \/dapps\/cow\/orders\/current@
-- 
-- Orders (current)
-- 
-- Gets orders.
-- 
cowOrdersCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CowOrdersCurrent MimeNoContent [CowOrderDTO] accept
cowOrdersCurrent  _ =
  _mkRequest "GET" ["/dapps/cow/orders/current"]

data CowOrdersCurrent  
-- | @application/json@
instance Produces CowOrdersCurrent MimeJSON
-- | @text/json@
instance Produces CowOrdersCurrent MimeTextJson
-- | @text/plain@
instance Produces CowOrdersCurrent MimePlainText


-- *** cowSettlementsCurrent

-- | @GET \/dapps\/cow\/settlements\/current@
-- 
-- Settlements (current)
-- 
-- Gets settlements.
-- 
cowSettlementsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CowSettlementsCurrent MimeNoContent [CowSettlementDTO] accept
cowSettlementsCurrent  _ =
  _mkRequest "GET" ["/dapps/cow/settlements/current"]

data CowSettlementsCurrent  
-- | @application/json@
instance Produces CowSettlementsCurrent MimeJSON
-- | @text/json@
instance Produces CowSettlementsCurrent MimeTextJson
-- | @text/plain@
instance Produces CowSettlementsCurrent MimePlainText


-- *** cowTokensCurrent

-- | @GET \/dapps\/cow\/tokens\/current@
-- 
-- Tokens (current)
-- 
-- Gets tokens.
-- 
cowTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CowTokensCurrent MimeNoContent [CowTokenDTO] accept
cowTokensCurrent  _ =
  _mkRequest "GET" ["/dapps/cow/tokens/current"]

data CowTokensCurrent  
-- | @application/json@
instance Produces CowTokensCurrent MimeJSON
-- | @text/json@
instance Produces CowTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces CowTokensCurrent MimePlainText


-- *** cowTradesCurrent

-- | @GET \/dapps\/cow\/trades\/current@
-- 
-- Trades (current)
-- 
-- Gets trades.
-- 
cowTradesCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CowTradesCurrent MimeNoContent [CowTradeDTO] accept
cowTradesCurrent  _ =
  _mkRequest "GET" ["/dapps/cow/trades/current"]

data CowTradesCurrent  
-- | @application/json@
instance Produces CowTradesCurrent MimeJSON
-- | @text/json@
instance Produces CowTradesCurrent MimeTextJson
-- | @text/plain@
instance Produces CowTradesCurrent MimePlainText


-- *** cowUsersCurrent

-- | @GET \/dapps\/cow\/users\/current@
-- 
-- Users (current)
-- 
-- Gets users.
-- 
cowUsersCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CowUsersCurrent MimeNoContent [CowUserDTO] accept
cowUsersCurrent  _ =
  _mkRequest "GET" ["/dapps/cow/users/current"]

data CowUsersCurrent  
-- | @application/json@
instance Produces CowUsersCurrent MimeJSON
-- | @text/json@
instance Produces CowUsersCurrent MimeTextJson
-- | @text/plain@
instance Produces CowUsersCurrent MimePlainText

