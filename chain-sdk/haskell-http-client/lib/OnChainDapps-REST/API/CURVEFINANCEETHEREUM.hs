{-
   On Chain Dapps - REST API

    This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

   OpenAPI Version: 3.0.1
   On Chain Dapps - REST API API version: v1
   Contact: support@coinapi.io
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : OnChainDapps-REST.API.CURVEFINANCEETHEREUM
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module OnChainDapps-REST.API.CURVEFINANCEETHEREUM where

import OnChainDapps-REST.Core
import OnChainDapps-REST.MimeTypes
import OnChainDapps-REST.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** CURVEFINANCEETHEREUM

-- *** cURVEFINANCEETHEREUMLiquidityPoolsCurrent

-- | @GET \/v1\/dapps\/curve-finance-ethereum\/liquidityPools\/current@
-- 
-- LiquidityPools (current)
-- 
-- Gets liquidityPools.
-- 
cURVEFINANCEETHEREUMLiquidityPoolsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CURVEFINANCEETHEREUMLiquidityPoolsCurrent MimeNoContent [CURVEFINANCEETHEREUMLiquidityPoolDTO] accept
cURVEFINANCEETHEREUMLiquidityPoolsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/curve-finance-ethereum/liquidityPools/current"]

data CURVEFINANCEETHEREUMLiquidityPoolsCurrent  
-- | @application/json@
instance Produces CURVEFINANCEETHEREUMLiquidityPoolsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CURVEFINANCEETHEREUMLiquidityPoolsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CURVEFINANCEETHEREUMLiquidityPoolsCurrent MimeTextJson
-- | @text/plain@
instance Produces CURVEFINANCEETHEREUMLiquidityPoolsCurrent MimePlainText


-- *** cURVEFINANCEETHEREUMSwapsCurrent

-- | @GET \/v1\/dapps\/curve-finance-ethereum\/swaps\/current@
-- 
-- Swaps (current)
-- 
-- Gets swaps.
-- 
cURVEFINANCEETHEREUMSwapsCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CURVEFINANCEETHEREUMSwapsCurrent MimeNoContent [CURVEFINANCEETHEREUMSwapDTO] accept
cURVEFINANCEETHEREUMSwapsCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/curve-finance-ethereum/swaps/current"]

data CURVEFINANCEETHEREUMSwapsCurrent  
-- | @application/json@
instance Produces CURVEFINANCEETHEREUMSwapsCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CURVEFINANCEETHEREUMSwapsCurrent MimeXMsgpack
-- | @text/json@
instance Produces CURVEFINANCEETHEREUMSwapsCurrent MimeTextJson
-- | @text/plain@
instance Produces CURVEFINANCEETHEREUMSwapsCurrent MimePlainText


-- *** cURVEFINANCEETHEREUMTokensCurrent

-- | @GET \/v1\/dapps\/curve-finance-ethereum\/tokens\/current@
-- 
-- Tokens (current)
-- 
-- Gets tokens.
-- 
cURVEFINANCEETHEREUMTokensCurrent
  :: Accept accept -- ^ request accept ('MimeType')
  -> OnChainDapps-RESTRequest CURVEFINANCEETHEREUMTokensCurrent MimeNoContent [CURVEFINANCEETHEREUMTokenDTO] accept
cURVEFINANCEETHEREUMTokensCurrent  _ =
  _mkRequest "GET" ["/v1/dapps/curve-finance-ethereum/tokens/current"]

data CURVEFINANCEETHEREUMTokensCurrent  
-- | @application/json@
instance Produces CURVEFINANCEETHEREUMTokensCurrent MimeJSON
-- | @application/x-msgpack@
instance Produces CURVEFINANCEETHEREUMTokensCurrent MimeXMsgpack
-- | @text/json@
instance Produces CURVEFINANCEETHEREUMTokensCurrent MimeTextJson
-- | @text/plain@
instance Produces CURVEFINANCEETHEREUMTokensCurrent MimePlainText

