// tslint:disable
/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpQuery } from '../runtime';
import type {
    UniswapV3BundleDTO,
    UniswapV3BurnDTO,
    UniswapV3FactoryDTO,
    UniswapV3MintDTO,
    UniswapV3PoolDTO,
    UniswapV3PoolDayDataDTO,
    UniswapV3PoolHourDataDTO,
    UniswapV3PositionDTO,
    UniswapV3PositionSnapshotDTO,
    UniswapV3SwapDTO,
    UniswapV3TickDTO,
    UniswapV3TickDayDataDTO,
    UniswapV3TokenDTO,
    UniswapV3TokenHourDataDTO,
    UniswapV3TokenV3DayDataDTO,
    UniswapV3TransactionDTO,
    UniswapV3UniswapDayDataDTO,
} from '../models';

export interface UniswapV3PoolsCurrentRequest {
    id?: string;
}

export interface UniswapV3SwapsCurrentRequest {
    pool?: string;
}

/**
 * no description
 */
export class UniswapV3Api extends BaseAPI {

    /**
     * Gets bundles.
     * Bundles (current)
     */
    uniswapV3BundlesCurrent(): Observable<Array<UniswapV3BundleDTO>>
    uniswapV3BundlesCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3BundleDTO>>>
    uniswapV3BundlesCurrent(opts?: OperationOpts): Observable<Array<UniswapV3BundleDTO> | AjaxResponse<Array<UniswapV3BundleDTO>>> {
        return this.request<Array<UniswapV3BundleDTO>>({
            url: '/dapps/uniswapv3/bundles/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets burns.
     * Burns (current)
     */
    uniswapV3BurnsCurrent(): Observable<Array<UniswapV3BurnDTO>>
    uniswapV3BurnsCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3BurnDTO>>>
    uniswapV3BurnsCurrent(opts?: OperationOpts): Observable<Array<UniswapV3BurnDTO> | AjaxResponse<Array<UniswapV3BurnDTO>>> {
        return this.request<Array<UniswapV3BurnDTO>>({
            url: '/dapps/uniswapv3/burns/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets factories.
     * Factories (current)
     */
    uniswapV3FactoriesCurrent(): Observable<Array<UniswapV3FactoryDTO>>
    uniswapV3FactoriesCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3FactoryDTO>>>
    uniswapV3FactoriesCurrent(opts?: OperationOpts): Observable<Array<UniswapV3FactoryDTO> | AjaxResponse<Array<UniswapV3FactoryDTO>>> {
        return this.request<Array<UniswapV3FactoryDTO>>({
            url: '/dapps/uniswapv3/factories/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets mints.
     * Mints (current)
     */
    uniswapV3MintsCurrent(): Observable<Array<UniswapV3MintDTO>>
    uniswapV3MintsCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3MintDTO>>>
    uniswapV3MintsCurrent(opts?: OperationOpts): Observable<Array<UniswapV3MintDTO> | AjaxResponse<Array<UniswapV3MintDTO>>> {
        return this.request<Array<UniswapV3MintDTO>>({
            url: '/dapps/uniswapv3/mints/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets poolDayData.
     * PoolDayData (current)
     */
    uniswapV3PoolDayDataCurrent(): Observable<Array<UniswapV3PoolDayDataDTO>>
    uniswapV3PoolDayDataCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3PoolDayDataDTO>>>
    uniswapV3PoolDayDataCurrent(opts?: OperationOpts): Observable<Array<UniswapV3PoolDayDataDTO> | AjaxResponse<Array<UniswapV3PoolDayDataDTO>>> {
        return this.request<Array<UniswapV3PoolDayDataDTO>>({
            url: '/dapps/uniswapv3/poolDayData/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets poolHourData.
     * PoolHourData (current)
     */
    uniswapV3PoolHourDataCurrent(): Observable<Array<UniswapV3PoolHourDataDTO>>
    uniswapV3PoolHourDataCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3PoolHourDataDTO>>>
    uniswapV3PoolHourDataCurrent(opts?: OperationOpts): Observable<Array<UniswapV3PoolHourDataDTO> | AjaxResponse<Array<UniswapV3PoolHourDataDTO>>> {
        return this.request<Array<UniswapV3PoolHourDataDTO>>({
            url: '/dapps/uniswapv3/poolHourData/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets pools.
     * Pools (current)
     */
    uniswapV3PoolsCurrent({ id }: UniswapV3PoolsCurrentRequest): Observable<Array<UniswapV3PoolDTO>>
    uniswapV3PoolsCurrent({ id }: UniswapV3PoolsCurrentRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3PoolDTO>>>
    uniswapV3PoolsCurrent({ id }: UniswapV3PoolsCurrentRequest, opts?: OperationOpts): Observable<Array<UniswapV3PoolDTO> | AjaxResponse<Array<UniswapV3PoolDTO>>> {

        const query: HttpQuery = {};

        if (id != null) { query['id'] = id; }

        return this.request<Array<UniswapV3PoolDTO>>({
            url: '/dapps/uniswapv3/pools/current',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Gets positionSnapshots.
     * PositionSnapshots (current)
     */
    uniswapV3PositionSnapshotsCurrent(): Observable<Array<UniswapV3PositionSnapshotDTO>>
    uniswapV3PositionSnapshotsCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3PositionSnapshotDTO>>>
    uniswapV3PositionSnapshotsCurrent(opts?: OperationOpts): Observable<Array<UniswapV3PositionSnapshotDTO> | AjaxResponse<Array<UniswapV3PositionSnapshotDTO>>> {
        return this.request<Array<UniswapV3PositionSnapshotDTO>>({
            url: '/dapps/uniswapv3/positionSnapshots/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets positions.
     * Positions (current)
     */
    uniswapV3PositionsCurrent(): Observable<Array<UniswapV3PositionDTO>>
    uniswapV3PositionsCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3PositionDTO>>>
    uniswapV3PositionsCurrent(opts?: OperationOpts): Observable<Array<UniswapV3PositionDTO> | AjaxResponse<Array<UniswapV3PositionDTO>>> {
        return this.request<Array<UniswapV3PositionDTO>>({
            url: '/dapps/uniswapv3/positions/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets swaps.
     * Swaps (current)
     */
    uniswapV3SwapsCurrent({ pool }: UniswapV3SwapsCurrentRequest): Observable<Array<UniswapV3SwapDTO>>
    uniswapV3SwapsCurrent({ pool }: UniswapV3SwapsCurrentRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3SwapDTO>>>
    uniswapV3SwapsCurrent({ pool }: UniswapV3SwapsCurrentRequest, opts?: OperationOpts): Observable<Array<UniswapV3SwapDTO> | AjaxResponse<Array<UniswapV3SwapDTO>>> {

        const query: HttpQuery = {};

        if (pool != null) { query['pool'] = pool; }

        return this.request<Array<UniswapV3SwapDTO>>({
            url: '/dapps/uniswapv3/swaps/current',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * Gets tickDayData.
     * TickDayData (current)
     */
    uniswapV3TickDayDataCurrent(): Observable<Array<UniswapV3TickDayDataDTO>>
    uniswapV3TickDayDataCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3TickDayDataDTO>>>
    uniswapV3TickDayDataCurrent(opts?: OperationOpts): Observable<Array<UniswapV3TickDayDataDTO> | AjaxResponse<Array<UniswapV3TickDayDataDTO>>> {
        return this.request<Array<UniswapV3TickDayDataDTO>>({
            url: '/dapps/uniswapv3/tickDayData/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets ticks.
     * Ticks (current)
     */
    uniswapV3TicksCurrent(): Observable<Array<UniswapV3TickDTO>>
    uniswapV3TicksCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3TickDTO>>>
    uniswapV3TicksCurrent(opts?: OperationOpts): Observable<Array<UniswapV3TickDTO> | AjaxResponse<Array<UniswapV3TickDTO>>> {
        return this.request<Array<UniswapV3TickDTO>>({
            url: '/dapps/uniswapv3/ticks/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets tokenHourData.
     * TokenHourData (current)
     */
    uniswapV3TokenHourDataCurrent(): Observable<Array<UniswapV3TokenHourDataDTO>>
    uniswapV3TokenHourDataCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3TokenHourDataDTO>>>
    uniswapV3TokenHourDataCurrent(opts?: OperationOpts): Observable<Array<UniswapV3TokenHourDataDTO> | AjaxResponse<Array<UniswapV3TokenHourDataDTO>>> {
        return this.request<Array<UniswapV3TokenHourDataDTO>>({
            url: '/dapps/uniswapv3/tokenHourData/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets tokenV3DayData.
     * TokenV3DayData (current)
     */
    uniswapV3TokenV3DayDataCurrent(): Observable<Array<UniswapV3TokenV3DayDataDTO>>
    uniswapV3TokenV3DayDataCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3TokenV3DayDataDTO>>>
    uniswapV3TokenV3DayDataCurrent(opts?: OperationOpts): Observable<Array<UniswapV3TokenV3DayDataDTO> | AjaxResponse<Array<UniswapV3TokenV3DayDataDTO>>> {
        return this.request<Array<UniswapV3TokenV3DayDataDTO>>({
            url: '/dapps/uniswapv3/tokenV3DayData/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets tokens.
     * Tokens (current)
     */
    uniswapV3TokensCurrent(): Observable<Array<UniswapV3TokenDTO>>
    uniswapV3TokensCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3TokenDTO>>>
    uniswapV3TokensCurrent(opts?: OperationOpts): Observable<Array<UniswapV3TokenDTO> | AjaxResponse<Array<UniswapV3TokenDTO>>> {
        return this.request<Array<UniswapV3TokenDTO>>({
            url: '/dapps/uniswapv3/tokens/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets transactions.
     * Transactions (current)
     */
    uniswapV3TransactionsCurrent(): Observable<Array<UniswapV3TransactionDTO>>
    uniswapV3TransactionsCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3TransactionDTO>>>
    uniswapV3TransactionsCurrent(opts?: OperationOpts): Observable<Array<UniswapV3TransactionDTO> | AjaxResponse<Array<UniswapV3TransactionDTO>>> {
        return this.request<Array<UniswapV3TransactionDTO>>({
            url: '/dapps/uniswapv3/transactions/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Gets uniswapDayData.
     * UniswapDayData (current)
     */
    uniswapV3UniswapDayDataCurrent(): Observable<Array<UniswapV3UniswapDayDataDTO>>
    uniswapV3UniswapDayDataCurrent(opts?: OperationOpts): Observable<AjaxResponse<Array<UniswapV3UniswapDayDataDTO>>>
    uniswapV3UniswapDayDataCurrent(opts?: OperationOpts): Observable<Array<UniswapV3UniswapDayDataDTO> | AjaxResponse<Array<UniswapV3UniswapDayDataDTO>>> {
        return this.request<Array<UniswapV3UniswapDayDataDTO>>({
            url: '/dapps/uniswapv3/uniswapDayData/current',
            method: 'GET',
        }, opts?.responseOpts);
    };

}
