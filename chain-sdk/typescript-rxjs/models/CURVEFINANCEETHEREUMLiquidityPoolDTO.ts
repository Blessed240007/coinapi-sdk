// tslint:disable
/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * 
 * @export
 * @interface CURVEFINANCEETHEREUMLiquidityPoolDTO
 */
export interface CURVEFINANCEETHEREUMLiquidityPoolDTO {
    /**
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    entry_time?: string;
    /**
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    recv_time?: string;
    /**
     * Number of block in which entity was recorded.
     * @type {number}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    block_number?: number;
    /**
     * 
     * @type {number}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    vid?: number;
    /**
     * Smart contract address of the pool
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    id?: string | null;
    /**
     * The protocol this pool belongs to
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    protocol?: string | null;
    /**
     * Name of liquidity pool (e.g. Curve.fi DAI/USDC/USDT)
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    name?: string | null;
    /**
     * Symbol of liquidity pool (e.g. 3CRV)
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    symbol?: string | null;
    /**
     * Tokens that need to be deposited to take a position in protocol. e.g. WETH and USDC to deposit into the WETH-USDC pool. Array to account for multi-asset pools like Curve and Balancer
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    input_tokens?: Array<string> | null;
    /**
     * inputTokens in native (contract) order
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    input_tokens_ordered?: Array<string> | null;
    /**
     * Token that is minted to track ownership of position in protocol
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    output_token?: string | null;
    /**
     * Aditional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    reward_tokens?: Array<string> | null;
    /**
     * Fees per trade incurred to the user. Should include all fees that apply to a pool (e.g. Curve has a trading fee AND an admin fee, which is a portion of the trading fee. Uniswap only has a trading fee and no protocol fee.)
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    fees?: Array<string> | null;
    /**
     * Whether this pool is single-sided (e.g. Bancor, Platypus\'s Alternative Pool). The specifics of the implementation depends on the protocol.
     * @type {boolean}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    is_single_sided?: boolean;
    /**
     * Creation timestamp
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    created_timestamp?: string | null;
    /**
     * Creation block number
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    created_block_number?: string | null;
    /**
     * Current TVL (Total Value Locked) of this pool in USD
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    total_value_locked_usd?: string | null;
    /**
     * All revenue generated by the liquidity pool, accrued to the supply side.
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    cumulative_supply_side_revenue_usd?: string | null;
    /**
     * All revenue generated by the liquidity pool, accrued to the protocol.
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    cumulative_protocol_side_revenue_usd?: string | null;
    /**
     * All revenue generated by the liquidity pool.
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    cumulative_total_revenue_usd?: string | null;
    /**
     * All historical trade volume occurred in this pool, in USD
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    cumulative_volume_usd?: string | null;
    /**
     * Amount of input tokens in the pool. The ordering should be the same as the pool\'s `inputTokens` field.
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    input_token_balances?: Array<string> | null;
    /**
     * Weights of input tokens in the liquidity pool in percentage values.
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    input_token_weights?: Array<string> | null;
    /**
     * Total supply of output token.
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    output_token_supply?: string | null;
    /**
     * Price per share of output token in USD
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    output_token_price_usd?: string | null;
    /**
     * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    staked_output_token_amount?: string | null;
    /**
     * Per-block reward token emission as of the current block normalized to a day, in token\'s native amount.
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    reward_token_emissions_amount?: Array<string> | null;
    /**
     * Per-block reward token emission as of the current block normalized to a day, in USD value.
     * @type {Array<string>}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    reward_token_emissions_usd?: Array<string> | null;
    /**
     * Registry that deployed this pool
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    registry_address?: string | null;
    /**
     * Liquidity Gauge assocaited with this pool
     * @type {string}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    gauge_address?: string | null;
    /**
     * @type {number}
     * @memberof CURVEFINANCEETHEREUMLiquidityPoolDTO
     */
    readonly evaluated_ask?: number;
}
