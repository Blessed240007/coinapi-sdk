package org.openapitools.model;

import groovy.transform.Canonical
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;

@Canonical
class PANCAKESWAPV3ETHEREUMDexAmmProtocolDTO {
    
    Date entryTime
    
    Date recvTime
    /* Number of block in which entity was recorded. */
    Long blockNumber
    /*  */
    String blockRange
    /* Smart contract address of the protocol's main contract (Factory, Registry, etc). */
    String id
    /* Name of the protocol, including version. e.g. Uniswap v3. */
    String name
    /* Slug of protocol, including version. e.g. uniswap-v3. */
    String slug
    /* Version of the subgraph schema, in SemVer format (e.g. 1.0.0). */
    String schemaVersion
    /* Version of the subgraph implementation, in SemVer format (e.g. 1.0.0). */
    String subgraphVersion
    /* Version of the methodology used to compute metrics, loosely based on SemVer format (e.g. 1.0.0). */
    String methodologyVersion
    /* Current TVL (Total Value Locked) of the entire protocol. */
    String totalValueLockedUsd
    /* The sum of all active and non-active liquidity in USD for this pool. */
    String totalLiquidityUsd
    /* All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick. */
    String activeLiquidityUsd
    /* All protocol-side value locking in USD that remains uncollected and unused in the protocol. */
    String uncollectedProtocolSideValueUsd
    /* All supply-side value locking in USD that remains uncollected and unused in the protocol. */
    String uncollectedSupplySideValueUsd
    /* Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV. */
    String protocolControlledValueUsd
    /* All historical volume in USD. */
    String cumulativeVolumeUsd
    /* Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea. */
    String cumulativeSupplySideRevenueUsd
    /* Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushiâ€™s 0.05%). OpenSea 10% sell fee. */
    String cumulativeProtocolSideRevenueUsd
    /* All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn. */
    String cumulativeTotalRevenueUsd
    /* Number of cumulative unique users. */
    Integer cumulativeUniqueUsers
    /* Number of cumulative liquidity providers. */
    Integer cumulativeUniqueLPs
    /* Number of cumulative traders */
    Integer cumulativeUniqueTraders
    /* Total number of pools. */
    Integer totalPoolCount
    /* Total number of open positions. */
    Integer openPositionCount
    /* Total number of positions (open and closed). */
    Integer cumulativePositionCount
    /* Day ID of the most recent daily snapshot. */
    Integer lastSnapshotDayId
    /* Timestamp of the last time this entity was updated */
    String lastUpdateTimestamp
    /* Block number of the last time this entity was updated. */
    String lastUpdateBlockNumber
    /* This is a boolean to indicate whether or not the pools have been instantiated the were initialized before Optimism regenesis. */
    Boolean regenesis
}
