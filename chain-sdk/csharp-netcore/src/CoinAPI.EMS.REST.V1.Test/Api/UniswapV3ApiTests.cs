/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
// uncomment below to import models
//using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing UniswapV3Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UniswapV3ApiTests : IDisposable
    {
        private UniswapV3Api instance;

        public UniswapV3ApiTests()
        {
            instance = new UniswapV3Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UniswapV3Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UniswapV3Api
            //Assert.IsType<UniswapV3Api>(instance);
        }

        /// <summary>
        /// Test UniswapV3BundlesCurrent
        /// </summary>
        [Fact]
        public void UniswapV3BundlesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3BundlesCurrent();
            //Assert.IsType<List<UniswapV3BundleDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3BurnsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3BurnsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3BurnsCurrent();
            //Assert.IsType<List<UniswapV3BurnDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3FactoriesCurrent
        /// </summary>
        [Fact]
        public void UniswapV3FactoriesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3FactoriesCurrent();
            //Assert.IsType<List<UniswapV3FactoryDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3MintsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3MintsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3MintsCurrent();
            //Assert.IsType<List<UniswapV3MintDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3PoolDayDataCurrent
        /// </summary>
        [Fact]
        public void UniswapV3PoolDayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3PoolDayDataCurrent();
            //Assert.IsType<List<UniswapV3PoolDayDataDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3PoolHourDataCurrent
        /// </summary>
        [Fact]
        public void UniswapV3PoolHourDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3PoolHourDataCurrent();
            //Assert.IsType<List<UniswapV3PoolHourDataDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3PoolsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3PoolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.UniswapV3PoolsCurrent(id);
            //Assert.IsType<List<UniswapV3PoolDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3PositionSnapshotsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3PositionSnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3PositionSnapshotsCurrent();
            //Assert.IsType<List<UniswapV3PositionSnapshotDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3PositionsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3PositionsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3PositionsCurrent();
            //Assert.IsType<List<UniswapV3PositionDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3SwapsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3SwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.UniswapV3SwapsCurrent(pool);
            //Assert.IsType<List<UniswapV3SwapDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3TickDayDataCurrent
        /// </summary>
        [Fact]
        public void UniswapV3TickDayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3TickDayDataCurrent();
            //Assert.IsType<List<UniswapV3TickDayDataDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3TicksCurrent
        /// </summary>
        [Fact]
        public void UniswapV3TicksCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3TicksCurrent();
            //Assert.IsType<List<UniswapV3TickDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3TokenHourDataCurrent
        /// </summary>
        [Fact]
        public void UniswapV3TokenHourDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3TokenHourDataCurrent();
            //Assert.IsType<List<UniswapV3TokenHourDataDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3TokenV3DayDataCurrent
        /// </summary>
        [Fact]
        public void UniswapV3TokenV3DayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3TokenV3DayDataCurrent();
            //Assert.IsType<List<UniswapV3TokenV3DayDataDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3TokensCurrent
        /// </summary>
        [Fact]
        public void UniswapV3TokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3TokensCurrent();
            //Assert.IsType<List<UniswapV3TokenDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3TransactionsCurrent
        /// </summary>
        [Fact]
        public void UniswapV3TransactionsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3TransactionsCurrent();
            //Assert.IsType<List<UniswapV3TransactionDTO>>(response);
        }

        /// <summary>
        /// Test UniswapV3UniswapDayDataCurrent
        /// </summary>
        [Fact]
        public void UniswapV3UniswapDayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UniswapV3UniswapDayDataCurrent();
            //Assert.IsType<List<UniswapV3UniswapDayDataDTO>>(response);
        }
    }
}
