/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
// uncomment below to import models
//using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test.Api
{
    /// <summary>
    ///  Class for testing CURVEFINANCEETHEREUMApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CURVEFINANCEETHEREUMApiTests : IDisposable
    {
        private CURVEFINANCEETHEREUMApi instance;

        public CURVEFINANCEETHEREUMApiTests()
        {
            instance = new CURVEFINANCEETHEREUMApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CURVEFINANCEETHEREUMApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CURVEFINANCEETHEREUMApi
            //Assert.IsType<CURVEFINANCEETHEREUMApi>(instance);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMAccountsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMAccountsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMAccountsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMAccountDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMActiveAccountsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMActiveAccountsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMActiveAccountsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMActiveAccountDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMDepositsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMDepositsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMDepositsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMDepositDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMDexAmmProtocolsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMDexAmmProtocolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMDexAmmProtocolsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMDexAmmProtocolDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMFinancialsDailySnapshotsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMFinancialsDailySnapshotDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMLiquidityGaugesCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMLiquidityGaugesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMLiquidityGaugesCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMLiquidityGaugeDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMLiquidityPoolFeesCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMLiquidityPoolFeesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMLiquidityPoolFeesCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMLiquidityPoolFeeDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMLiquidityPoolsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMLiquidityPoolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.CURVEFINANCEETHEREUMLiquidityPoolsCurrent(id);
            //Assert.IsType<List<CURVEFINANCEETHEREUMLiquidityPoolDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMLpTokensCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMLpTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMLpTokensCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMLpTokenDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMRewardTokensCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMRewardTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMRewardTokensCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMRewardTokenDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMSwapsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMSwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMSwapsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMSwapDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMTokensCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.CURVEFINANCEETHEREUMTokensCurrent(id);
            //Assert.IsType<List<CURVEFINANCEETHEREUMTokenDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMUsageMetricsDailySnapshotsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMUsageMetricsDailySnapshotDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotDTO>>(response);
        }

        /// <summary>
        /// Test CURVEFINANCEETHEREUMWithdrawsCurrent
        /// </summary>
        [Fact]
        public void CURVEFINANCEETHEREUMWithdrawsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.CURVEFINANCEETHEREUMWithdrawsCurrent();
            //Assert.IsType<List<CURVEFINANCEETHEREUMWithdrawDTO>>(response);
        }
    }
}
