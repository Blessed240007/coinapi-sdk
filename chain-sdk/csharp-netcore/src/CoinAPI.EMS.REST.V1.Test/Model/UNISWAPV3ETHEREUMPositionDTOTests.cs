/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.EMS.REST.V1.Model;
using CoinAPI.EMS.REST.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.EMS.REST.V1.Test.Model
{
    /// <summary>
    ///  Class for testing UNISWAPV3ETHEREUMPositionDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UNISWAPV3ETHEREUMPositionDTOTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for UNISWAPV3ETHEREUMPositionDTO
        //private UNISWAPV3ETHEREUMPositionDTO instance;

        public UNISWAPV3ETHEREUMPositionDTOTests()
        {
            // TODO uncomment below to create an instance of UNISWAPV3ETHEREUMPositionDTO
            //instance = new UNISWAPV3ETHEREUMPositionDTO();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UNISWAPV3ETHEREUMPositionDTO
        /// </summary>
        [Fact]
        public void UNISWAPV3ETHEREUMPositionDTOInstanceTest()
        {
            // TODO uncomment below to test "IsType" UNISWAPV3ETHEREUMPositionDTO
            //Assert.IsType<UNISWAPV3ETHEREUMPositionDTO>(instance);
        }


        /// <summary>
        /// Test the property 'EntryTime'
        /// </summary>
        [Fact]
        public void EntryTimeTest()
        {
            // TODO unit test for the property 'EntryTime'
        }
        /// <summary>
        /// Test the property 'RecvTime'
        /// </summary>
        [Fact]
        public void RecvTimeTest()
        {
            // TODO unit test for the property 'RecvTime'
        }
        /// <summary>
        /// Test the property 'BlockNumber'
        /// </summary>
        [Fact]
        public void BlockNumberTest()
        {
            // TODO unit test for the property 'BlockNumber'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Account'
        /// </summary>
        [Fact]
        public void AccountTest()
        {
            // TODO unit test for the property 'Account'
        }
        /// <summary>
        /// Test the property 'Pool'
        /// </summary>
        [Fact]
        public void PoolTest()
        {
            // TODO unit test for the property 'Pool'
        }
        /// <summary>
        /// Test the property 'HashOpened'
        /// </summary>
        [Fact]
        public void HashOpenedTest()
        {
            // TODO unit test for the property 'HashOpened'
        }
        /// <summary>
        /// Test the property 'HashClosed'
        /// </summary>
        [Fact]
        public void HashClosedTest()
        {
            // TODO unit test for the property 'HashClosed'
        }
        /// <summary>
        /// Test the property 'BlockNumberOpened'
        /// </summary>
        [Fact]
        public void BlockNumberOpenedTest()
        {
            // TODO unit test for the property 'BlockNumberOpened'
        }
        /// <summary>
        /// Test the property 'TimestampOpened'
        /// </summary>
        [Fact]
        public void TimestampOpenedTest()
        {
            // TODO unit test for the property 'TimestampOpened'
        }
        /// <summary>
        /// Test the property 'BlockNumberClosed'
        /// </summary>
        [Fact]
        public void BlockNumberClosedTest()
        {
            // TODO unit test for the property 'BlockNumberClosed'
        }
        /// <summary>
        /// Test the property 'TimestampClosed'
        /// </summary>
        [Fact]
        public void TimestampClosedTest()
        {
            // TODO unit test for the property 'TimestampClosed'
        }
        /// <summary>
        /// Test the property 'TickLower'
        /// </summary>
        [Fact]
        public void TickLowerTest()
        {
            // TODO unit test for the property 'TickLower'
        }
        /// <summary>
        /// Test the property 'TickUpper'
        /// </summary>
        [Fact]
        public void TickUpperTest()
        {
            // TODO unit test for the property 'TickUpper'
        }
        /// <summary>
        /// Test the property 'LiquidityToken'
        /// </summary>
        [Fact]
        public void LiquidityTokenTest()
        {
            // TODO unit test for the property 'LiquidityToken'
        }
        /// <summary>
        /// Test the property 'LiquidityTokenType'
        /// </summary>
        [Fact]
        public void LiquidityTokenTypeTest()
        {
            // TODO unit test for the property 'LiquidityTokenType'
        }
        /// <summary>
        /// Test the property 'Liquidity'
        /// </summary>
        [Fact]
        public void LiquidityTest()
        {
            // TODO unit test for the property 'Liquidity'
        }
        /// <summary>
        /// Test the property 'LiquidityUsd'
        /// </summary>
        [Fact]
        public void LiquidityUsdTest()
        {
            // TODO unit test for the property 'LiquidityUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeDepositTokenAmounts'
        /// </summary>
        [Fact]
        public void CumulativeDepositTokenAmountsTest()
        {
            // TODO unit test for the property 'CumulativeDepositTokenAmounts'
        }
        /// <summary>
        /// Test the property 'CumulativeDepositUsd'
        /// </summary>
        [Fact]
        public void CumulativeDepositUsdTest()
        {
            // TODO unit test for the property 'CumulativeDepositUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeWithdrawTokenAmounts'
        /// </summary>
        [Fact]
        public void CumulativeWithdrawTokenAmountsTest()
        {
            // TODO unit test for the property 'CumulativeWithdrawTokenAmounts'
        }
        /// <summary>
        /// Test the property 'CumulativeWithdrawUsd'
        /// </summary>
        [Fact]
        public void CumulativeWithdrawUsdTest()
        {
            // TODO unit test for the property 'CumulativeWithdrawUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeRewardUsd'
        /// </summary>
        [Fact]
        public void CumulativeRewardUsdTest()
        {
            // TODO unit test for the property 'CumulativeRewardUsd'
        }
        /// <summary>
        /// Test the property 'DepositCount'
        /// </summary>
        [Fact]
        public void DepositCountTest()
        {
            // TODO unit test for the property 'DepositCount'
        }
        /// <summary>
        /// Test the property 'WithdrawCount'
        /// </summary>
        [Fact]
        public void WithdrawCountTest()
        {
            // TODO unit test for the property 'WithdrawCount'
        }

    }

}
