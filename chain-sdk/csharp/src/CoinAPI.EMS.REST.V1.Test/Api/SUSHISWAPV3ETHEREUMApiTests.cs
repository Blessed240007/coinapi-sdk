/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing SUSHISWAPV3ETHEREUMApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SUSHISWAPV3ETHEREUMApiTests
    {
        private SUSHISWAPV3ETHEREUMApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SUSHISWAPV3ETHEREUMApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SUSHISWAPV3ETHEREUMApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SUSHISWAPV3ETHEREUMApi
            //Assert.IsInstanceOf(typeof(SUSHISWAPV3ETHEREUMApi), instance);
        }

        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMAccountsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMAccountsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMAccountsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMAccountDTO>), response, "response is List<SUSHISWAPV3ETHEREUMAccountDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMActiveAccountsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMActiveAccountsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMActiveAccountsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMActiveAccountDTO>), response, "response is List<SUSHISWAPV3ETHEREUMActiveAccountDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMDepositsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMDepositsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMDepositsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMDepositDTO>), response, "response is List<SUSHISWAPV3ETHEREUMDepositDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMDexAmmProtocolsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMDexAmmProtocolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMDexAmmProtocolsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMDexAmmProtocolDTO>), response, "response is List<SUSHISWAPV3ETHEREUMDexAmmProtocolDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMFinancialsDailySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMFinancialsDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMFinancialsDailySnapshotsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMFinancialsDailySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMFinancialsDailySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMLiquidityPoolAmountsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMLiquidityPoolAmountsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.SUSHISWAPV3ETHEREUMLiquidityPoolAmountsCurrent(id);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMLiquidityPoolAmountDTO>), response, "response is List<SUSHISWAPV3ETHEREUMLiquidityPoolAmountDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMLiquidityPoolFeesCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMLiquidityPoolFeesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMLiquidityPoolFeesCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMLiquidityPoolFeeDTO>), response, "response is List<SUSHISWAPV3ETHEREUMLiquidityPoolFeeDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotsCurrent(pool);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMLiquidityPoolsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMLiquidityPoolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.SUSHISWAPV3ETHEREUMLiquidityPoolsCurrent(id);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMLiquidityPoolDTO>), response, "response is List<SUSHISWAPV3ETHEREUMLiquidityPoolDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMPositionSnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMPositionSnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMPositionSnapshotsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMPositionSnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMPositionSnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMPositionsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMPositionsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.SUSHISWAPV3ETHEREUMPositionsCurrent(pool);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMPositionDTO>), response, "response is List<SUSHISWAPV3ETHEREUMPositionDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMRewardTokensCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMRewardTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMRewardTokensCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMRewardTokenDTO>), response, "response is List<SUSHISWAPV3ETHEREUMRewardTokenDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMSwapsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMSwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMSwapsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMSwapDTO>), response, "response is List<SUSHISWAPV3ETHEREUMSwapDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMTickDailySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMTickDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.SUSHISWAPV3ETHEREUMTickDailySnapshotsCurrent(pool);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMTickDailySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMTickDailySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMTickHourlySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMTickHourlySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.SUSHISWAPV3ETHEREUMTickHourlySnapshotsCurrent(pool);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMTickHourlySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMTickHourlySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMTicksCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMTicksCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pool = null;
            //var response = instance.SUSHISWAPV3ETHEREUMTicksCurrent(pool);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMTickDTO>), response, "response is List<SUSHISWAPV3ETHEREUMTickDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMTokenWhiteListSymbolsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMTokenWhiteListSymbolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMTokenWhiteListSymbolsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMTokenWhiteListSymbolDTO>), response, "response is List<SUSHISWAPV3ETHEREUMTokenWhiteListSymbolDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMTokenWhiteListsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMTokenWhiteListsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMTokenWhiteListsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMTokenWhiteListDTO>), response, "response is List<SUSHISWAPV3ETHEREUMTokenWhiteListDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMTokensCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.SUSHISWAPV3ETHEREUMTokensCurrent(id);
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMTokenDTO>), response, "response is List<SUSHISWAPV3ETHEREUMTokenDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>), response, "response is List<SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>");
        }
        
        /// <summary>
        /// Test SUSHISWAPV3ETHEREUMWithdrawsCurrent
        /// </summary>
        [Test]
        public void SUSHISWAPV3ETHEREUMWithdrawsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SUSHISWAPV3ETHEREUMWithdrawsCurrent();
            //Assert.IsInstanceOf(typeof(List<SUSHISWAPV3ETHEREUMWithdrawDTO>), response, "response is List<SUSHISWAPV3ETHEREUMWithdrawDTO>");
        }
        
    }

}
