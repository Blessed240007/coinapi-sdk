/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing PANCAKESWAPV3ETHEREUMApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PANCAKESWAPV3ETHEREUMApiTests
    {
        private PANCAKESWAPV3ETHEREUMApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PANCAKESWAPV3ETHEREUMApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PANCAKESWAPV3ETHEREUMApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PANCAKESWAPV3ETHEREUMApi
            //Assert.IsInstanceOf(typeof(PANCAKESWAPV3ETHEREUMApi), instance);
        }

        
        /// <summary>
        /// Test PANCAKESWAPV3ETHEREUMLiquidityPoolsCurrent
        /// </summary>
        [Test]
        public void PANCAKESWAPV3ETHEREUMLiquidityPoolsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.PANCAKESWAPV3ETHEREUMLiquidityPoolsCurrent(id);
            //Assert.IsInstanceOf(typeof(List<PANCAKESWAPV3ETHEREUMLiquidityPoolDTO>), response, "response is List<PANCAKESWAPV3ETHEREUMLiquidityPoolDTO>");
        }
        
        /// <summary>
        /// Test PANCAKESWAPV3ETHEREUMSwapsCurrent
        /// </summary>
        [Test]
        public void PANCAKESWAPV3ETHEREUMSwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.PANCAKESWAPV3ETHEREUMSwapsCurrent();
            //Assert.IsInstanceOf(typeof(List<PANCAKESWAPV3ETHEREUMSwapDTO>), response, "response is List<PANCAKESWAPV3ETHEREUMSwapDTO>");
        }
        
        /// <summary>
        /// Test PANCAKESWAPV3ETHEREUMTokensCurrent
        /// </summary>
        [Test]
        public void PANCAKESWAPV3ETHEREUMTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.PANCAKESWAPV3ETHEREUMTokensCurrent(id);
            //Assert.IsInstanceOf(typeof(List<PANCAKESWAPV3ETHEREUMTokenDTO>), response, "response is List<PANCAKESWAPV3ETHEREUMTokenDTO>");
        }
        
    }

}
