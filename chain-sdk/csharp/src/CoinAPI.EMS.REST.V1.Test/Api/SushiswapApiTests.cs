/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CoinAPI.EMS.REST.V1.Client;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing SushiswapApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SushiswapApiTests
    {
        private SushiswapApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SushiswapApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SushiswapApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' SushiswapApi
            //Assert.IsInstanceOf(typeof(SushiswapApi), instance);
        }

        
        /// <summary>
        /// Test SushiswapBundlesCurrent
        /// </summary>
        [Test]
        public void SushiswapBundlesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapBundlesCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapBundleDTO>), response, "response is List<SushiswapBundleDTO>");
        }
        
        /// <summary>
        /// Test SushiswapBurnsCurrent
        /// </summary>
        [Test]
        public void SushiswapBurnsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapBurnsCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapBurnDTO>), response, "response is List<SushiswapBurnDTO>");
        }
        
        /// <summary>
        /// Test SushiswapDayDataCurrent
        /// </summary>
        [Test]
        public void SushiswapDayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapDayDataCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapDayDataDTO>), response, "response is List<SushiswapDayDataDTO>");
        }
        
        /// <summary>
        /// Test SushiswapFactoriesCurrent
        /// </summary>
        [Test]
        public void SushiswapFactoriesCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapFactoriesCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapFactoryDTO>), response, "response is List<SushiswapFactoryDTO>");
        }
        
        /// <summary>
        /// Test SushiswapHourDataCurrent
        /// </summary>
        [Test]
        public void SushiswapHourDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapHourDataCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapHourDataDTO>), response, "response is List<SushiswapHourDataDTO>");
        }
        
        /// <summary>
        /// Test SushiswapLiquidityPositionSnapshotsCurrent
        /// </summary>
        [Test]
        public void SushiswapLiquidityPositionSnapshotsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapLiquidityPositionSnapshotsCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapLiquidityPositionSnapshotDTO>), response, "response is List<SushiswapLiquidityPositionSnapshotDTO>");
        }
        
        /// <summary>
        /// Test SushiswapLiquidityPositionsCurrent
        /// </summary>
        [Test]
        public void SushiswapLiquidityPositionsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapLiquidityPositionsCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapLiquidityPositionDTO>), response, "response is List<SushiswapLiquidityPositionDTO>");
        }
        
        /// <summary>
        /// Test SushiswapMintsCurrent
        /// </summary>
        [Test]
        public void SushiswapMintsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapMintsCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapMintDTO>), response, "response is List<SushiswapMintDTO>");
        }
        
        /// <summary>
        /// Test SushiswapPairDayDataCurrent
        /// </summary>
        [Test]
        public void SushiswapPairDayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapPairDayDataCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapPairDayDataDTO>), response, "response is List<SushiswapPairDayDataDTO>");
        }
        
        /// <summary>
        /// Test SushiswapPairHourDataCurrent
        /// </summary>
        [Test]
        public void SushiswapPairHourDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapPairHourDataCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapPairHourDataDTO>), response, "response is List<SushiswapPairHourDataDTO>");
        }
        
        /// <summary>
        /// Test SushiswapPairsCurrent
        /// </summary>
        [Test]
        public void SushiswapPairsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.SushiswapPairsCurrent(id);
            //Assert.IsInstanceOf(typeof(List<SushiswapPairDTO>), response, "response is List<SushiswapPairDTO>");
        }
        
        /// <summary>
        /// Test SushiswapSwapsCurrent
        /// </summary>
        [Test]
        public void SushiswapSwapsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string pair = null;
            //var response = instance.SushiswapSwapsCurrent(pair);
            //Assert.IsInstanceOf(typeof(List<SushiswapSwapDTO>), response, "response is List<SushiswapSwapDTO>");
        }
        
        /// <summary>
        /// Test SushiswapTokenDayDataCurrent
        /// </summary>
        [Test]
        public void SushiswapTokenDayDataCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapTokenDayDataCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapTokenDayDataDTO>), response, "response is List<SushiswapTokenDayDataDTO>");
        }
        
        /// <summary>
        /// Test SushiswapTokensCurrent
        /// </summary>
        [Test]
        public void SushiswapTokensCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapTokensCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapTokenDTO>), response, "response is List<SushiswapTokenDTO>");
        }
        
        /// <summary>
        /// Test SushiswapTransactionsCurrent
        /// </summary>
        [Test]
        public void SushiswapTransactionsCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapTransactionsCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapTransactionDTO>), response, "response is List<SushiswapTransactionDTO>");
        }
        
        /// <summary>
        /// Test SushiswapUsersCurrent
        /// </summary>
        [Test]
        public void SushiswapUsersCurrentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SushiswapUsersCurrent();
            //Assert.IsInstanceOf(typeof(List<SushiswapUserDTO>), response, "response is List<SushiswapUserDTO>");
        }
        
    }

}
