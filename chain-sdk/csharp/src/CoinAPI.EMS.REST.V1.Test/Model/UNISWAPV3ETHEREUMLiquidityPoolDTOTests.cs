/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;
using CoinAPI.EMS.REST.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing UNISWAPV3ETHEREUMLiquidityPoolDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UNISWAPV3ETHEREUMLiquidityPoolDTOTests
    {
        // TODO uncomment below to declare an instance variable for UNISWAPV3ETHEREUMLiquidityPoolDTO
        //private UNISWAPV3ETHEREUMLiquidityPoolDTO instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UNISWAPV3ETHEREUMLiquidityPoolDTO
            //instance = new UNISWAPV3ETHEREUMLiquidityPoolDTO();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UNISWAPV3ETHEREUMLiquidityPoolDTO
        /// </summary>
        [Test]
        public void UNISWAPV3ETHEREUMLiquidityPoolDTOInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" UNISWAPV3ETHEREUMLiquidityPoolDTO
            //Assert.IsInstanceOf(typeof(UNISWAPV3ETHEREUMLiquidityPoolDTO), instance);
        }


        /// <summary>
        /// Test the property 'EntryTime'
        /// </summary>
        [Test]
        public void EntryTimeTest()
        {
            // TODO unit test for the property 'EntryTime'
        }
        /// <summary>
        /// Test the property 'RecvTime'
        /// </summary>
        [Test]
        public void RecvTimeTest()
        {
            // TODO unit test for the property 'RecvTime'
        }
        /// <summary>
        /// Test the property 'BlockNumber'
        /// </summary>
        [Test]
        public void BlockNumberTest()
        {
            // TODO unit test for the property 'BlockNumber'
        }
        /// <summary>
        /// Test the property 'Vid'
        /// </summary>
        [Test]
        public void VidTest()
        {
            // TODO unit test for the property 'Vid'
        }
        /// <summary>
        /// Test the property 'BlockRange'
        /// </summary>
        [Test]
        public void BlockRangeTest()
        {
            // TODO unit test for the property 'BlockRange'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Protocol'
        /// </summary>
        [Test]
        public void ProtocolTest()
        {
            // TODO unit test for the property 'Protocol'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Symbol'
        /// </summary>
        [Test]
        public void SymbolTest()
        {
            // TODO unit test for the property 'Symbol'
        }
        /// <summary>
        /// Test the property 'LiquidityToken'
        /// </summary>
        [Test]
        public void LiquidityTokenTest()
        {
            // TODO unit test for the property 'LiquidityToken'
        }
        /// <summary>
        /// Test the property 'InputTokens'
        /// </summary>
        [Test]
        public void InputTokensTest()
        {
            // TODO unit test for the property 'InputTokens'
        }
        /// <summary>
        /// Test the property 'RewardTokens'
        /// </summary>
        [Test]
        public void RewardTokensTest()
        {
            // TODO unit test for the property 'RewardTokens'
        }
        /// <summary>
        /// Test the property 'Fees'
        /// </summary>
        [Test]
        public void FeesTest()
        {
            // TODO unit test for the property 'Fees'
        }
        /// <summary>
        /// Test the property 'IsSingleSided'
        /// </summary>
        [Test]
        public void IsSingleSidedTest()
        {
            // TODO unit test for the property 'IsSingleSided'
        }
        /// <summary>
        /// Test the property 'CreatedTimestamp'
        /// </summary>
        [Test]
        public void CreatedTimestampTest()
        {
            // TODO unit test for the property 'CreatedTimestamp'
        }
        /// <summary>
        /// Test the property 'CreatedBlockNumber'
        /// </summary>
        [Test]
        public void CreatedBlockNumberTest()
        {
            // TODO unit test for the property 'CreatedBlockNumber'
        }
        /// <summary>
        /// Test the property 'Tick'
        /// </summary>
        [Test]
        public void TickTest()
        {
            // TODO unit test for the property 'Tick'
        }
        /// <summary>
        /// Test the property 'TotalValueLockedUsd'
        /// </summary>
        [Test]
        public void TotalValueLockedUsdTest()
        {
            // TODO unit test for the property 'TotalValueLockedUsd'
        }
        /// <summary>
        /// Test the property 'TotalLiquidity'
        /// </summary>
        [Test]
        public void TotalLiquidityTest()
        {
            // TODO unit test for the property 'TotalLiquidity'
        }
        /// <summary>
        /// Test the property 'TotalLiquidityUsd'
        /// </summary>
        [Test]
        public void TotalLiquidityUsdTest()
        {
            // TODO unit test for the property 'TotalLiquidityUsd'
        }
        /// <summary>
        /// Test the property 'ActiveLiquidity'
        /// </summary>
        [Test]
        public void ActiveLiquidityTest()
        {
            // TODO unit test for the property 'ActiveLiquidity'
        }
        /// <summary>
        /// Test the property 'ActiveLiquidityUsd'
        /// </summary>
        [Test]
        public void ActiveLiquidityUsdTest()
        {
            // TODO unit test for the property 'ActiveLiquidityUsd'
        }
        /// <summary>
        /// Test the property 'UncollectedProtocolSideTokenAmounts'
        /// </summary>
        [Test]
        public void UncollectedProtocolSideTokenAmountsTest()
        {
            // TODO unit test for the property 'UncollectedProtocolSideTokenAmounts'
        }
        /// <summary>
        /// Test the property 'UncollectedProtocolSideValuesUsd'
        /// </summary>
        [Test]
        public void UncollectedProtocolSideValuesUsdTest()
        {
            // TODO unit test for the property 'UncollectedProtocolSideValuesUsd'
        }
        /// <summary>
        /// Test the property 'UncollectedSupplySideTokenAmounts'
        /// </summary>
        [Test]
        public void UncollectedSupplySideTokenAmountsTest()
        {
            // TODO unit test for the property 'UncollectedSupplySideTokenAmounts'
        }
        /// <summary>
        /// Test the property 'UncollectedSupplySideValuesUsd'
        /// </summary>
        [Test]
        public void UncollectedSupplySideValuesUsdTest()
        {
            // TODO unit test for the property 'UncollectedSupplySideValuesUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeSupplySideRevenueUsd'
        /// </summary>
        [Test]
        public void CumulativeSupplySideRevenueUsdTest()
        {
            // TODO unit test for the property 'CumulativeSupplySideRevenueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeProtocolSideRevenueUsd'
        /// </summary>
        [Test]
        public void CumulativeProtocolSideRevenueUsdTest()
        {
            // TODO unit test for the property 'CumulativeProtocolSideRevenueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeTotalRevenueUsd'
        /// </summary>
        [Test]
        public void CumulativeTotalRevenueUsdTest()
        {
            // TODO unit test for the property 'CumulativeTotalRevenueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeVolumeByTokenAmount'
        /// </summary>
        [Test]
        public void CumulativeVolumeByTokenAmountTest()
        {
            // TODO unit test for the property 'CumulativeVolumeByTokenAmount'
        }
        /// <summary>
        /// Test the property 'CumulativeVolumeByTokenUsd'
        /// </summary>
        [Test]
        public void CumulativeVolumeByTokenUsdTest()
        {
            // TODO unit test for the property 'CumulativeVolumeByTokenUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeVolumeUsd'
        /// </summary>
        [Test]
        public void CumulativeVolumeUsdTest()
        {
            // TODO unit test for the property 'CumulativeVolumeUsd'
        }
        /// <summary>
        /// Test the property 'InputTokenBalances'
        /// </summary>
        [Test]
        public void InputTokenBalancesTest()
        {
            // TODO unit test for the property 'InputTokenBalances'
        }
        /// <summary>
        /// Test the property 'InputTokenBalancesUsd'
        /// </summary>
        [Test]
        public void InputTokenBalancesUsdTest()
        {
            // TODO unit test for the property 'InputTokenBalancesUsd'
        }
        /// <summary>
        /// Test the property 'InputTokenWeights'
        /// </summary>
        [Test]
        public void InputTokenWeightsTest()
        {
            // TODO unit test for the property 'InputTokenWeights'
        }
        /// <summary>
        /// Test the property 'StakedOutputTokenAmount'
        /// </summary>
        [Test]
        public void StakedOutputTokenAmountTest()
        {
            // TODO unit test for the property 'StakedOutputTokenAmount'
        }
        /// <summary>
        /// Test the property 'RewardTokenEmissionsAmount'
        /// </summary>
        [Test]
        public void RewardTokenEmissionsAmountTest()
        {
            // TODO unit test for the property 'RewardTokenEmissionsAmount'
        }
        /// <summary>
        /// Test the property 'RewardTokenEmissionsUsd'
        /// </summary>
        [Test]
        public void RewardTokenEmissionsUsdTest()
        {
            // TODO unit test for the property 'RewardTokenEmissionsUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeDepositCount'
        /// </summary>
        [Test]
        public void CumulativeDepositCountTest()
        {
            // TODO unit test for the property 'CumulativeDepositCount'
        }
        /// <summary>
        /// Test the property 'CumulativeWithdrawCount'
        /// </summary>
        [Test]
        public void CumulativeWithdrawCountTest()
        {
            // TODO unit test for the property 'CumulativeWithdrawCount'
        }
        /// <summary>
        /// Test the property 'CumulativeSwapCount'
        /// </summary>
        [Test]
        public void CumulativeSwapCountTest()
        {
            // TODO unit test for the property 'CumulativeSwapCount'
        }
        /// <summary>
        /// Test the property 'PositionCount'
        /// </summary>
        [Test]
        public void PositionCountTest()
        {
            // TODO unit test for the property 'PositionCount'
        }
        /// <summary>
        /// Test the property 'OpenPositionCount'
        /// </summary>
        [Test]
        public void OpenPositionCountTest()
        {
            // TODO unit test for the property 'OpenPositionCount'
        }
        /// <summary>
        /// Test the property 'ClosedPositionCount'
        /// </summary>
        [Test]
        public void ClosedPositionCountTest()
        {
            // TODO unit test for the property 'ClosedPositionCount'
        }
        /// <summary>
        /// Test the property 'LastSnapshotDayId'
        /// </summary>
        [Test]
        public void LastSnapshotDayIdTest()
        {
            // TODO unit test for the property 'LastSnapshotDayId'
        }
        /// <summary>
        /// Test the property 'LastSnapshotHourId'
        /// </summary>
        [Test]
        public void LastSnapshotHourIdTest()
        {
            // TODO unit test for the property 'LastSnapshotHourId'
        }
        /// <summary>
        /// Test the property 'LastUpdateTimestamp'
        /// </summary>
        [Test]
        public void LastUpdateTimestampTest()
        {
            // TODO unit test for the property 'LastUpdateTimestamp'
        }
        /// <summary>
        /// Test the property 'LastUpdateBlockNumber'
        /// </summary>
        [Test]
        public void LastUpdateBlockNumberTest()
        {
            // TODO unit test for the property 'LastUpdateBlockNumber'
        }
        /// <summary>
        /// Test the property 'EvaluatedAsk'
        /// </summary>
        [Test]
        public void EvaluatedAskTest()
        {
            // TODO unit test for the property 'EvaluatedAsk'
        }

    }

}
