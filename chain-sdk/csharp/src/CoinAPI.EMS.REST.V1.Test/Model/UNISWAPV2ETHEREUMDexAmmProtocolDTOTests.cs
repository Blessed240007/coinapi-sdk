/*
 * On Chain Dapps - REST API
 *
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using CoinAPI.EMS.REST.V1.Api;
using CoinAPI.EMS.REST.V1.Model;
using CoinAPI.EMS.REST.V1.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace CoinAPI.EMS.REST.V1.Test
{
    /// <summary>
    ///  Class for testing UNISWAPV2ETHEREUMDexAmmProtocolDTO
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class UNISWAPV2ETHEREUMDexAmmProtocolDTOTests
    {
        // TODO uncomment below to declare an instance variable for UNISWAPV2ETHEREUMDexAmmProtocolDTO
        //private UNISWAPV2ETHEREUMDexAmmProtocolDTO instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UNISWAPV2ETHEREUMDexAmmProtocolDTO
            //instance = new UNISWAPV2ETHEREUMDexAmmProtocolDTO();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UNISWAPV2ETHEREUMDexAmmProtocolDTO
        /// </summary>
        [Test]
        public void UNISWAPV2ETHEREUMDexAmmProtocolDTOInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOf" UNISWAPV2ETHEREUMDexAmmProtocolDTO
            //Assert.IsInstanceOf(typeof(UNISWAPV2ETHEREUMDexAmmProtocolDTO), instance);
        }


        /// <summary>
        /// Test the property 'EntryTime'
        /// </summary>
        [Test]
        public void EntryTimeTest()
        {
            // TODO unit test for the property 'EntryTime'
        }
        /// <summary>
        /// Test the property 'RecvTime'
        /// </summary>
        [Test]
        public void RecvTimeTest()
        {
            // TODO unit test for the property 'RecvTime'
        }
        /// <summary>
        /// Test the property 'BlockNumber'
        /// </summary>
        [Test]
        public void BlockNumberTest()
        {
            // TODO unit test for the property 'BlockNumber'
        }
        /// <summary>
        /// Test the property 'BlockRange'
        /// </summary>
        [Test]
        public void BlockRangeTest()
        {
            // TODO unit test for the property 'BlockRange'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Slug'
        /// </summary>
        [Test]
        public void SlugTest()
        {
            // TODO unit test for the property 'Slug'
        }
        /// <summary>
        /// Test the property 'SchemaVersion'
        /// </summary>
        [Test]
        public void SchemaVersionTest()
        {
            // TODO unit test for the property 'SchemaVersion'
        }
        /// <summary>
        /// Test the property 'SubgraphVersion'
        /// </summary>
        [Test]
        public void SubgraphVersionTest()
        {
            // TODO unit test for the property 'SubgraphVersion'
        }
        /// <summary>
        /// Test the property 'MethodologyVersion'
        /// </summary>
        [Test]
        public void MethodologyVersionTest()
        {
            // TODO unit test for the property 'MethodologyVersion'
        }
        /// <summary>
        /// Test the property 'TotalValueLockedUsd'
        /// </summary>
        [Test]
        public void TotalValueLockedUsdTest()
        {
            // TODO unit test for the property 'TotalValueLockedUsd'
        }
        /// <summary>
        /// Test the property 'ProtocolControlledValueUsd'
        /// </summary>
        [Test]
        public void ProtocolControlledValueUsdTest()
        {
            // TODO unit test for the property 'ProtocolControlledValueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeVolumeUsd'
        /// </summary>
        [Test]
        public void CumulativeVolumeUsdTest()
        {
            // TODO unit test for the property 'CumulativeVolumeUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeSupplySideRevenueUsd'
        /// </summary>
        [Test]
        public void CumulativeSupplySideRevenueUsdTest()
        {
            // TODO unit test for the property 'CumulativeSupplySideRevenueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeProtocolSideRevenueUsd'
        /// </summary>
        [Test]
        public void CumulativeProtocolSideRevenueUsdTest()
        {
            // TODO unit test for the property 'CumulativeProtocolSideRevenueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeTotalRevenueUsd'
        /// </summary>
        [Test]
        public void CumulativeTotalRevenueUsdTest()
        {
            // TODO unit test for the property 'CumulativeTotalRevenueUsd'
        }
        /// <summary>
        /// Test the property 'CumulativeUniqueUsers'
        /// </summary>
        [Test]
        public void CumulativeUniqueUsersTest()
        {
            // TODO unit test for the property 'CumulativeUniqueUsers'
        }
        /// <summary>
        /// Test the property 'TotalPoolCount'
        /// </summary>
        [Test]
        public void TotalPoolCountTest()
        {
            // TODO unit test for the property 'TotalPoolCount'
        }

    }

}
