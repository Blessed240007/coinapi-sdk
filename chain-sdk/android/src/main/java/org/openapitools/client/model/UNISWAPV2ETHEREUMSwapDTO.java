/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import org.openapitools.client.model.TransactionsETradeAggressiveSide;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Trade (swap) event which occurred in a pool.
 **/
@ApiModel(description = "Trade (swap) event which occurred in a pool.")
public class UNISWAPV2ETHEREUMSwapDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("block_")
  private Integer block = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("hash")
  private String hash = null;
  @SerializedName("log_index")
  private Integer logIndex = null;
  @SerializedName("protocol")
  private String protocol = null;
  @SerializedName("to")
  private String to = null;
  @SerializedName("from")
  private String from = null;
  @SerializedName("timestamp")
  private String timestamp = null;
  @SerializedName("token_in")
  private String tokenIn = null;
  @SerializedName("amount_in")
  private String amountIn = null;
  @SerializedName("amount_in_usd")
  private String amountInUsd = null;
  @SerializedName("token_out")
  private String tokenOut = null;
  @SerializedName("amount_out")
  private String amountOut = null;
  @SerializedName("amount_out_usd")
  private String amountOutUsd = null;
  @SerializedName("reserve_amounts")
  private List<String> reserveAmounts = null;
  @SerializedName("pool")
  private String pool = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("pool_id")
  private String poolId = null;
  @SerializedName("transaction_id")
  private String transactionId = null;
  @SerializedName("evaluated_price")
  private Double evaluatedPrice = null;
  @SerializedName("evaluated_amount")
  private Double evaluatedAmount = null;
  @SerializedName("evaluated_aggressor")
  private TransactionsETradeAggressiveSide evaluatedAggressor = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Integer getBlock() {
    return block;
  }
  public void setBlock(Integer block) {
    this.block = block;
  }

  /**
   * swap-(Transaction hash)-(Log index)
   **/
  @ApiModelProperty(value = "swap-(Transaction hash)-(Log index)")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Transaction hash of the transaction that emitted this event
   **/
  @ApiModelProperty(value = "Transaction hash of the transaction that emitted this event")
  public String getHash() {
    return hash;
  }
  public void setHash(String hash) {
    this.hash = hash;
  }

  /**
   * Event log index. For transactions that don't emit event, create arbitrary index starting from 0
   **/
  @ApiModelProperty(value = "Event log index. For transactions that don't emit event, create arbitrary index starting from 0")
  public Integer getLogIndex() {
    return logIndex;
  }
  public void setLogIndex(Integer logIndex) {
    this.logIndex = logIndex;
  }

  /**
   * The protocol this transaction belongs to
   **/
  @ApiModelProperty(value = "The protocol this transaction belongs to")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  /**
   * Address that received the tokens
   **/
  @ApiModelProperty(value = "Address that received the tokens")
  public String getTo() {
    return to;
  }
  public void setTo(String to) {
    this.to = to;
  }

  /**
   * Address that sent the tokens
   **/
  @ApiModelProperty(value = "Address that sent the tokens")
  public String getFrom() {
    return from;
  }
  public void setFrom(String from) {
    this.from = from;
  }

  /**
   * Timestamp of this event
   **/
  @ApiModelProperty(value = "Timestamp of this event")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  /**
   * Token deposited into pool
   **/
  @ApiModelProperty(value = "Token deposited into pool")
  public String getTokenIn() {
    return tokenIn;
  }
  public void setTokenIn(String tokenIn) {
    this.tokenIn = tokenIn;
  }

  /**
   * Amount of token deposited into pool in native units
   **/
  @ApiModelProperty(value = "Amount of token deposited into pool in native units")
  public String getAmountIn() {
    return amountIn;
  }
  public void setAmountIn(String amountIn) {
    this.amountIn = amountIn;
  }

  /**
   * Amount of token deposited into pool in USD
   **/
  @ApiModelProperty(value = "Amount of token deposited into pool in USD")
  public String getAmountInUsd() {
    return amountInUsd;
  }
  public void setAmountInUsd(String amountInUsd) {
    this.amountInUsd = amountInUsd;
  }

  /**
   * Token withdrawn from pool
   **/
  @ApiModelProperty(value = "Token withdrawn from pool")
  public String getTokenOut() {
    return tokenOut;
  }
  public void setTokenOut(String tokenOut) {
    this.tokenOut = tokenOut;
  }

  /**
   * Amount of token withdrawn from pool in native units
   **/
  @ApiModelProperty(value = "Amount of token withdrawn from pool in native units")
  public String getAmountOut() {
    return amountOut;
  }
  public void setAmountOut(String amountOut) {
    this.amountOut = amountOut;
  }

  /**
   * Amount of token withdrawn from pool in USD
   **/
  @ApiModelProperty(value = "Amount of token withdrawn from pool in USD")
  public String getAmountOutUsd() {
    return amountOutUsd;
  }
  public void setAmountOutUsd(String amountOutUsd) {
    this.amountOutUsd = amountOutUsd;
  }

  /**
   * Amount of input tokens in the liquidity pool
   **/
  @ApiModelProperty(value = "Amount of input tokens in the liquidity pool")
  public List<String> getReserveAmounts() {
    return reserveAmounts;
  }
  public void setReserveAmounts(List<String> reserveAmounts) {
    this.reserveAmounts = reserveAmounts;
  }

  /**
   * The pool involving this transaction
   **/
  @ApiModelProperty(value = "The pool involving this transaction")
  public String getPool() {
    return pool;
  }
  public void setPool(String pool) {
    this.pool = pool;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getPoolId() {
    return poolId;
  }
  public void setPoolId(String poolId) {
    this.poolId = poolId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTransactionId() {
    return transactionId;
  }
  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getEvaluatedPrice() {
    return evaluatedPrice;
  }
  public void setEvaluatedPrice(Double evaluatedPrice) {
    this.evaluatedPrice = evaluatedPrice;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Double getEvaluatedAmount() {
    return evaluatedAmount;
  }
  public void setEvaluatedAmount(Double evaluatedAmount) {
    this.evaluatedAmount = evaluatedAmount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public TransactionsETradeAggressiveSide getEvaluatedAggressor() {
    return evaluatedAggressor;
  }
  public void setEvaluatedAggressor(TransactionsETradeAggressiveSide evaluatedAggressor) {
    this.evaluatedAggressor = evaluatedAggressor;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV2ETHEREUMSwapDTO uNISWAPV2ETHEREUMSwapDTO = (UNISWAPV2ETHEREUMSwapDTO) o;
    return (this.entryTime == null ? uNISWAPV2ETHEREUMSwapDTO.entryTime == null : this.entryTime.equals(uNISWAPV2ETHEREUMSwapDTO.entryTime)) &&
        (this.recvTime == null ? uNISWAPV2ETHEREUMSwapDTO.recvTime == null : this.recvTime.equals(uNISWAPV2ETHEREUMSwapDTO.recvTime)) &&
        (this.blockNumber == null ? uNISWAPV2ETHEREUMSwapDTO.blockNumber == null : this.blockNumber.equals(uNISWAPV2ETHEREUMSwapDTO.blockNumber)) &&
        (this.block == null ? uNISWAPV2ETHEREUMSwapDTO.block == null : this.block.equals(uNISWAPV2ETHEREUMSwapDTO.block)) &&
        (this.id == null ? uNISWAPV2ETHEREUMSwapDTO.id == null : this.id.equals(uNISWAPV2ETHEREUMSwapDTO.id)) &&
        (this.hash == null ? uNISWAPV2ETHEREUMSwapDTO.hash == null : this.hash.equals(uNISWAPV2ETHEREUMSwapDTO.hash)) &&
        (this.logIndex == null ? uNISWAPV2ETHEREUMSwapDTO.logIndex == null : this.logIndex.equals(uNISWAPV2ETHEREUMSwapDTO.logIndex)) &&
        (this.protocol == null ? uNISWAPV2ETHEREUMSwapDTO.protocol == null : this.protocol.equals(uNISWAPV2ETHEREUMSwapDTO.protocol)) &&
        (this.to == null ? uNISWAPV2ETHEREUMSwapDTO.to == null : this.to.equals(uNISWAPV2ETHEREUMSwapDTO.to)) &&
        (this.from == null ? uNISWAPV2ETHEREUMSwapDTO.from == null : this.from.equals(uNISWAPV2ETHEREUMSwapDTO.from)) &&
        (this.timestamp == null ? uNISWAPV2ETHEREUMSwapDTO.timestamp == null : this.timestamp.equals(uNISWAPV2ETHEREUMSwapDTO.timestamp)) &&
        (this.tokenIn == null ? uNISWAPV2ETHEREUMSwapDTO.tokenIn == null : this.tokenIn.equals(uNISWAPV2ETHEREUMSwapDTO.tokenIn)) &&
        (this.amountIn == null ? uNISWAPV2ETHEREUMSwapDTO.amountIn == null : this.amountIn.equals(uNISWAPV2ETHEREUMSwapDTO.amountIn)) &&
        (this.amountInUsd == null ? uNISWAPV2ETHEREUMSwapDTO.amountInUsd == null : this.amountInUsd.equals(uNISWAPV2ETHEREUMSwapDTO.amountInUsd)) &&
        (this.tokenOut == null ? uNISWAPV2ETHEREUMSwapDTO.tokenOut == null : this.tokenOut.equals(uNISWAPV2ETHEREUMSwapDTO.tokenOut)) &&
        (this.amountOut == null ? uNISWAPV2ETHEREUMSwapDTO.amountOut == null : this.amountOut.equals(uNISWAPV2ETHEREUMSwapDTO.amountOut)) &&
        (this.amountOutUsd == null ? uNISWAPV2ETHEREUMSwapDTO.amountOutUsd == null : this.amountOutUsd.equals(uNISWAPV2ETHEREUMSwapDTO.amountOutUsd)) &&
        (this.reserveAmounts == null ? uNISWAPV2ETHEREUMSwapDTO.reserveAmounts == null : this.reserveAmounts.equals(uNISWAPV2ETHEREUMSwapDTO.reserveAmounts)) &&
        (this.pool == null ? uNISWAPV2ETHEREUMSwapDTO.pool == null : this.pool.equals(uNISWAPV2ETHEREUMSwapDTO.pool)) &&
        (this.blockRange == null ? uNISWAPV2ETHEREUMSwapDTO.blockRange == null : this.blockRange.equals(uNISWAPV2ETHEREUMSwapDTO.blockRange)) &&
        (this.poolId == null ? uNISWAPV2ETHEREUMSwapDTO.poolId == null : this.poolId.equals(uNISWAPV2ETHEREUMSwapDTO.poolId)) &&
        (this.transactionId == null ? uNISWAPV2ETHEREUMSwapDTO.transactionId == null : this.transactionId.equals(uNISWAPV2ETHEREUMSwapDTO.transactionId)) &&
        (this.evaluatedPrice == null ? uNISWAPV2ETHEREUMSwapDTO.evaluatedPrice == null : this.evaluatedPrice.equals(uNISWAPV2ETHEREUMSwapDTO.evaluatedPrice)) &&
        (this.evaluatedAmount == null ? uNISWAPV2ETHEREUMSwapDTO.evaluatedAmount == null : this.evaluatedAmount.equals(uNISWAPV2ETHEREUMSwapDTO.evaluatedAmount)) &&
        (this.evaluatedAggressor == null ? uNISWAPV2ETHEREUMSwapDTO.evaluatedAggressor == null : this.evaluatedAggressor.equals(uNISWAPV2ETHEREUMSwapDTO.evaluatedAggressor));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.block == null ? 0: this.block.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.hash == null ? 0: this.hash.hashCode());
    result = 31 * result + (this.logIndex == null ? 0: this.logIndex.hashCode());
    result = 31 * result + (this.protocol == null ? 0: this.protocol.hashCode());
    result = 31 * result + (this.to == null ? 0: this.to.hashCode());
    result = 31 * result + (this.from == null ? 0: this.from.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    result = 31 * result + (this.tokenIn == null ? 0: this.tokenIn.hashCode());
    result = 31 * result + (this.amountIn == null ? 0: this.amountIn.hashCode());
    result = 31 * result + (this.amountInUsd == null ? 0: this.amountInUsd.hashCode());
    result = 31 * result + (this.tokenOut == null ? 0: this.tokenOut.hashCode());
    result = 31 * result + (this.amountOut == null ? 0: this.amountOut.hashCode());
    result = 31 * result + (this.amountOutUsd == null ? 0: this.amountOutUsd.hashCode());
    result = 31 * result + (this.reserveAmounts == null ? 0: this.reserveAmounts.hashCode());
    result = 31 * result + (this.pool == null ? 0: this.pool.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.poolId == null ? 0: this.poolId.hashCode());
    result = 31 * result + (this.transactionId == null ? 0: this.transactionId.hashCode());
    result = 31 * result + (this.evaluatedPrice == null ? 0: this.evaluatedPrice.hashCode());
    result = 31 * result + (this.evaluatedAmount == null ? 0: this.evaluatedAmount.hashCode());
    result = 31 * result + (this.evaluatedAggressor == null ? 0: this.evaluatedAggressor.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV2ETHEREUMSwapDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  block: ").append(block).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  hash: ").append(hash).append("\n");
    sb.append("  logIndex: ").append(logIndex).append("\n");
    sb.append("  protocol: ").append(protocol).append("\n");
    sb.append("  to: ").append(to).append("\n");
    sb.append("  from: ").append(from).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("  tokenIn: ").append(tokenIn).append("\n");
    sb.append("  amountIn: ").append(amountIn).append("\n");
    sb.append("  amountInUsd: ").append(amountInUsd).append("\n");
    sb.append("  tokenOut: ").append(tokenOut).append("\n");
    sb.append("  amountOut: ").append(amountOut).append("\n");
    sb.append("  amountOutUsd: ").append(amountOutUsd).append("\n");
    sb.append("  reserveAmounts: ").append(reserveAmounts).append("\n");
    sb.append("  pool: ").append(pool).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  poolId: ").append(poolId).append("\n");
    sb.append("  transactionId: ").append(transactionId).append("\n");
    sb.append("  evaluatedPrice: ").append(evaluatedPrice).append("\n");
    sb.append("  evaluatedAmount: ").append(evaluatedAmount).append("\n");
    sb.append("  evaluatedAggressor: ").append(evaluatedAggressor).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
