/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Stores aggregated information for a specific token across all pairs that token is included in.
 **/
@ApiModel(description = "Stores aggregated information for a specific token across all pairs that token is included in.")
public class PANCAKESWAPV3ETHEREUMTokenDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("vid")
  private Long vid = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("symbol")
  private String symbol = null;
  @SerializedName("decimals")
  private Integer decimals = null;
  @SerializedName("last_price_usd")
  private String lastPriceUsd = null;
  @SerializedName("last_price_block_number")
  private String lastPriceBlockNumber = null;
  @SerializedName("last_price_pool")
  private String lastPricePool = null;
  @SerializedName("total_supply")
  private String totalSupply = null;
  @SerializedName("total_value_locked_usd")
  private String totalValueLockedUsd = null;
  @SerializedName("large_price_change_buffer")
  private Integer largePriceChangeBuffer = null;
  @SerializedName("large_tvl_impact_buffer")
  private Integer largeTvlImpactBuffer = null;
  @SerializedName("token_symbol")
  private String tokenSymbol = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * .
   **/
  @ApiModelProperty(value = ".")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   * Smart contract address of the token.
   **/
  @ApiModelProperty(value = "Smart contract address of the token.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Name of the token, mirrored from the smart contract.
   **/
  @ApiModelProperty(value = "Name of the token, mirrored from the smart contract.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Symbol of the token, mirrored from the smart contract.
   **/
  @ApiModelProperty(value = "Symbol of the token, mirrored from the smart contract.")
  public String getSymbol() {
    return symbol;
  }
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  /**
   * The number of decimal places this token uses, default to 18.
   **/
  @ApiModelProperty(value = "The number of decimal places this token uses, default to 18.")
  public Integer getDecimals() {
    return decimals;
  }
  public void setDecimals(Integer decimals) {
    this.decimals = decimals;
  }

  /**
   * Optional field to track the price of a token, mostly for caching purposes.
   **/
  @ApiModelProperty(value = "Optional field to track the price of a token, mostly for caching purposes.")
  public String getLastPriceUsd() {
    return lastPriceUsd;
  }
  public void setLastPriceUsd(String lastPriceUsd) {
    this.lastPriceUsd = lastPriceUsd;
  }

  /**
   * Optional field to track the block number of the last token price.
   **/
  @ApiModelProperty(value = "Optional field to track the block number of the last token price.")
  public String getLastPriceBlockNumber() {
    return lastPriceBlockNumber;
  }
  public void setLastPriceBlockNumber(String lastPriceBlockNumber) {
    this.lastPriceBlockNumber = lastPriceBlockNumber;
  }

  /**
   * Last pool that gave this token a price.
   **/
  @ApiModelProperty(value = "Last pool that gave this token a price.")
  public String getLastPricePool() {
    return lastPricePool;
  }
  public void setLastPricePool(String lastPricePool) {
    this.lastPricePool = lastPricePool;
  }

  /**
   * Amount of tokens in the protocol.
   **/
  @ApiModelProperty(value = "Amount of tokens in the protocol.")
  public String getTotalSupply() {
    return totalSupply;
  }
  public void setTotalSupply(String totalSupply) {
    this.totalSupply = totalSupply;
  }

  /**
   * Total value locked in the protocol.
   **/
  @ApiModelProperty(value = "Total value locked in the protocol.")
  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }
  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }

  /**
   * The buffer for detecting large price changes.
   **/
  @ApiModelProperty(value = "The buffer for detecting large price changes.")
  public Integer getLargePriceChangeBuffer() {
    return largePriceChangeBuffer;
  }
  public void setLargePriceChangeBuffer(Integer largePriceChangeBuffer) {
    this.largePriceChangeBuffer = largePriceChangeBuffer;
  }

  /**
   * The buffer for detecting large TVL (Total Value Locked) impact.
   **/
  @ApiModelProperty(value = "The buffer for detecting large TVL (Total Value Locked) impact.")
  public Integer getLargeTvlImpactBuffer() {
    return largeTvlImpactBuffer;
  }
  public void setLargeTvlImpactBuffer(Integer largeTvlImpactBuffer) {
    this.largeTvlImpactBuffer = largeTvlImpactBuffer;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTokenSymbol() {
    return tokenSymbol;
  }
  public void setTokenSymbol(String tokenSymbol) {
    this.tokenSymbol = tokenSymbol;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PANCAKESWAPV3ETHEREUMTokenDTO pANCAKESWAPV3ETHEREUMTokenDTO = (PANCAKESWAPV3ETHEREUMTokenDTO) o;
    return (this.entryTime == null ? pANCAKESWAPV3ETHEREUMTokenDTO.entryTime == null : this.entryTime.equals(pANCAKESWAPV3ETHEREUMTokenDTO.entryTime)) &&
        (this.recvTime == null ? pANCAKESWAPV3ETHEREUMTokenDTO.recvTime == null : this.recvTime.equals(pANCAKESWAPV3ETHEREUMTokenDTO.recvTime)) &&
        (this.blockNumber == null ? pANCAKESWAPV3ETHEREUMTokenDTO.blockNumber == null : this.blockNumber.equals(pANCAKESWAPV3ETHEREUMTokenDTO.blockNumber)) &&
        (this.vid == null ? pANCAKESWAPV3ETHEREUMTokenDTO.vid == null : this.vid.equals(pANCAKESWAPV3ETHEREUMTokenDTO.vid)) &&
        (this.blockRange == null ? pANCAKESWAPV3ETHEREUMTokenDTO.blockRange == null : this.blockRange.equals(pANCAKESWAPV3ETHEREUMTokenDTO.blockRange)) &&
        (this.id == null ? pANCAKESWAPV3ETHEREUMTokenDTO.id == null : this.id.equals(pANCAKESWAPV3ETHEREUMTokenDTO.id)) &&
        (this.name == null ? pANCAKESWAPV3ETHEREUMTokenDTO.name == null : this.name.equals(pANCAKESWAPV3ETHEREUMTokenDTO.name)) &&
        (this.symbol == null ? pANCAKESWAPV3ETHEREUMTokenDTO.symbol == null : this.symbol.equals(pANCAKESWAPV3ETHEREUMTokenDTO.symbol)) &&
        (this.decimals == null ? pANCAKESWAPV3ETHEREUMTokenDTO.decimals == null : this.decimals.equals(pANCAKESWAPV3ETHEREUMTokenDTO.decimals)) &&
        (this.lastPriceUsd == null ? pANCAKESWAPV3ETHEREUMTokenDTO.lastPriceUsd == null : this.lastPriceUsd.equals(pANCAKESWAPV3ETHEREUMTokenDTO.lastPriceUsd)) &&
        (this.lastPriceBlockNumber == null ? pANCAKESWAPV3ETHEREUMTokenDTO.lastPriceBlockNumber == null : this.lastPriceBlockNumber.equals(pANCAKESWAPV3ETHEREUMTokenDTO.lastPriceBlockNumber)) &&
        (this.lastPricePool == null ? pANCAKESWAPV3ETHEREUMTokenDTO.lastPricePool == null : this.lastPricePool.equals(pANCAKESWAPV3ETHEREUMTokenDTO.lastPricePool)) &&
        (this.totalSupply == null ? pANCAKESWAPV3ETHEREUMTokenDTO.totalSupply == null : this.totalSupply.equals(pANCAKESWAPV3ETHEREUMTokenDTO.totalSupply)) &&
        (this.totalValueLockedUsd == null ? pANCAKESWAPV3ETHEREUMTokenDTO.totalValueLockedUsd == null : this.totalValueLockedUsd.equals(pANCAKESWAPV3ETHEREUMTokenDTO.totalValueLockedUsd)) &&
        (this.largePriceChangeBuffer == null ? pANCAKESWAPV3ETHEREUMTokenDTO.largePriceChangeBuffer == null : this.largePriceChangeBuffer.equals(pANCAKESWAPV3ETHEREUMTokenDTO.largePriceChangeBuffer)) &&
        (this.largeTvlImpactBuffer == null ? pANCAKESWAPV3ETHEREUMTokenDTO.largeTvlImpactBuffer == null : this.largeTvlImpactBuffer.equals(pANCAKESWAPV3ETHEREUMTokenDTO.largeTvlImpactBuffer)) &&
        (this.tokenSymbol == null ? pANCAKESWAPV3ETHEREUMTokenDTO.tokenSymbol == null : this.tokenSymbol.equals(pANCAKESWAPV3ETHEREUMTokenDTO.tokenSymbol));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.symbol == null ? 0: this.symbol.hashCode());
    result = 31 * result + (this.decimals == null ? 0: this.decimals.hashCode());
    result = 31 * result + (this.lastPriceUsd == null ? 0: this.lastPriceUsd.hashCode());
    result = 31 * result + (this.lastPriceBlockNumber == null ? 0: this.lastPriceBlockNumber.hashCode());
    result = 31 * result + (this.lastPricePool == null ? 0: this.lastPricePool.hashCode());
    result = 31 * result + (this.totalSupply == null ? 0: this.totalSupply.hashCode());
    result = 31 * result + (this.totalValueLockedUsd == null ? 0: this.totalValueLockedUsd.hashCode());
    result = 31 * result + (this.largePriceChangeBuffer == null ? 0: this.largePriceChangeBuffer.hashCode());
    result = 31 * result + (this.largeTvlImpactBuffer == null ? 0: this.largeTvlImpactBuffer.hashCode());
    result = 31 * result + (this.tokenSymbol == null ? 0: this.tokenSymbol.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PANCAKESWAPV3ETHEREUMTokenDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  symbol: ").append(symbol).append("\n");
    sb.append("  decimals: ").append(decimals).append("\n");
    sb.append("  lastPriceUsd: ").append(lastPriceUsd).append("\n");
    sb.append("  lastPriceBlockNumber: ").append(lastPriceBlockNumber).append("\n");
    sb.append("  lastPricePool: ").append(lastPricePool).append("\n");
    sb.append("  totalSupply: ").append(totalSupply).append("\n");
    sb.append("  totalValueLockedUsd: ").append(totalValueLockedUsd).append("\n");
    sb.append("  largePriceChangeBuffer: ").append(largePriceChangeBuffer).append("\n");
    sb.append("  largeTvlImpactBuffer: ").append(largeTvlImpactBuffer).append("\n");
    sb.append("  tokenSymbol: ").append(tokenSymbol).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
