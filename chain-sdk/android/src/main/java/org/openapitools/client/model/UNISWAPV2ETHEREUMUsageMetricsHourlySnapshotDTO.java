/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("protocol")
  private String protocol = null;
  @SerializedName("hourly_active_users")
  private Integer hourlyActiveUsers = null;
  @SerializedName("cumulative_unique_users")
  private Integer cumulativeUniqueUsers = null;
  @SerializedName("hourly_transaction_count")
  private Integer hourlyTransactionCount = null;
  @SerializedName("hourly_deposit_count")
  private Integer hourlyDepositCount = null;
  @SerializedName("hourly_withdraw_count")
  private Integer hourlyWithdrawCount = null;
  @SerializedName("hourly_swap_count")
  private Integer hourlySwapCount = null;
  @SerializedName("timestamp")
  private String timestamp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   * # of hours since Unix epoch time
   **/
  @ApiModelProperty(value = "# of hours since Unix epoch time")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Protocol this snapshot is associated with
   **/
  @ApiModelProperty(value = "Protocol this snapshot is associated with")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  /**
   * Number of unique hourly active users
   **/
  @ApiModelProperty(value = "Number of unique hourly active users")
  public Integer getHourlyActiveUsers() {
    return hourlyActiveUsers;
  }
  public void setHourlyActiveUsers(Integer hourlyActiveUsers) {
    this.hourlyActiveUsers = hourlyActiveUsers;
  }

  /**
   * Number of cumulative unique users
   **/
  @ApiModelProperty(value = "Number of cumulative unique users")
  public Integer getCumulativeUniqueUsers() {
    return cumulativeUniqueUsers;
  }
  public void setCumulativeUniqueUsers(Integer cumulativeUniqueUsers) {
    this.cumulativeUniqueUsers = cumulativeUniqueUsers;
  }

  /**
   * Total number of transactions occurred in an hour. Transactions include all entities that implement the Event interface.
   **/
  @ApiModelProperty(value = "Total number of transactions occurred in an hour. Transactions include all entities that implement the Event interface.")
  public Integer getHourlyTransactionCount() {
    return hourlyTransactionCount;
  }
  public void setHourlyTransactionCount(Integer hourlyTransactionCount) {
    this.hourlyTransactionCount = hourlyTransactionCount;
  }

  /**
   *  Total number of deposits (add liquidity) in an hour
   **/
  @ApiModelProperty(value = " Total number of deposits (add liquidity) in an hour")
  public Integer getHourlyDepositCount() {
    return hourlyDepositCount;
  }
  public void setHourlyDepositCount(Integer hourlyDepositCount) {
    this.hourlyDepositCount = hourlyDepositCount;
  }

  /**
   * Total number of withdrawals (remove liquidity) in an hour
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity) in an hour")
  public Integer getHourlyWithdrawCount() {
    return hourlyWithdrawCount;
  }
  public void setHourlyWithdrawCount(Integer hourlyWithdrawCount) {
    this.hourlyWithdrawCount = hourlyWithdrawCount;
  }

  /**
   * Total number of trades (swaps) in an hour
   **/
  @ApiModelProperty(value = "Total number of trades (swaps) in an hour")
  public Integer getHourlySwapCount() {
    return hourlySwapCount;
  }
  public void setHourlySwapCount(Integer hourlySwapCount) {
    this.hourlySwapCount = hourlySwapCount;
  }

  /**
   * Timestamp of this snapshot
   **/
  @ApiModelProperty(value = "Timestamp of this snapshot")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO = (UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO) o;
    return (this.entryTime == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.entryTime == null : this.entryTime.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.entryTime)) &&
        (this.recvTime == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.recvTime == null : this.recvTime.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.recvTime)) &&
        (this.blockNumber == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.blockNumber == null : this.blockNumber.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.blockNumber)) &&
        (this.blockRange == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.blockRange == null : this.blockRange.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.blockRange)) &&
        (this.id == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.id == null : this.id.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.id)) &&
        (this.protocol == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.protocol == null : this.protocol.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.protocol)) &&
        (this.hourlyActiveUsers == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyActiveUsers == null : this.hourlyActiveUsers.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyActiveUsers)) &&
        (this.cumulativeUniqueUsers == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.cumulativeUniqueUsers == null : this.cumulativeUniqueUsers.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.cumulativeUniqueUsers)) &&
        (this.hourlyTransactionCount == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyTransactionCount == null : this.hourlyTransactionCount.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyTransactionCount)) &&
        (this.hourlyDepositCount == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyDepositCount == null : this.hourlyDepositCount.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyDepositCount)) &&
        (this.hourlyWithdrawCount == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyWithdrawCount == null : this.hourlyWithdrawCount.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlyWithdrawCount)) &&
        (this.hourlySwapCount == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlySwapCount == null : this.hourlySwapCount.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.hourlySwapCount)) &&
        (this.timestamp == null ? uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.timestamp == null : this.timestamp.equals(uNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO.timestamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.protocol == null ? 0: this.protocol.hashCode());
    result = 31 * result + (this.hourlyActiveUsers == null ? 0: this.hourlyActiveUsers.hashCode());
    result = 31 * result + (this.cumulativeUniqueUsers == null ? 0: this.cumulativeUniqueUsers.hashCode());
    result = 31 * result + (this.hourlyTransactionCount == null ? 0: this.hourlyTransactionCount.hashCode());
    result = 31 * result + (this.hourlyDepositCount == null ? 0: this.hourlyDepositCount.hashCode());
    result = 31 * result + (this.hourlyWithdrawCount == null ? 0: this.hourlyWithdrawCount.hashCode());
    result = 31 * result + (this.hourlySwapCount == null ? 0: this.hourlySwapCount.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  protocol: ").append(protocol).append("\n");
    sb.append("  hourlyActiveUsers: ").append(hourlyActiveUsers).append("\n");
    sb.append("  cumulativeUniqueUsers: ").append(cumulativeUniqueUsers).append("\n");
    sb.append("  hourlyTransactionCount: ").append(hourlyTransactionCount).append("\n");
    sb.append("  hourlyDepositCount: ").append(hourlyDepositCount).append("\n");
    sb.append("  hourlyWithdrawCount: ").append(hourlyWithdrawCount).append("\n");
    sb.append("  hourlySwapCount: ").append(hourlySwapCount).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
