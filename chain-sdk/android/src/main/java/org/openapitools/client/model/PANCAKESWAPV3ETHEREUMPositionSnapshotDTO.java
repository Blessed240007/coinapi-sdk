/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class PANCAKESWAPV3ETHEREUMPositionSnapshotDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("hash")
  private String hash = null;
  @SerializedName("log_index")
  private Integer logIndex = null;
  @SerializedName("nonce")
  private String nonce = null;
  @SerializedName("position")
  private String position = null;
  @SerializedName("liquidity_token_type")
  private String liquidityTokenType = null;
  @SerializedName("liquidity")
  private String liquidity = null;
  @SerializedName("liquidity_usd")
  private String liquidityUsd = null;
  @SerializedName("cumulative_deposit_token_amounts")
  private List<String> cumulativeDepositTokenAmounts = null;
  @SerializedName("cumulative_deposit_usd")
  private String cumulativeDepositUsd = null;
  @SerializedName("cumulative_withdraw_token_amounts")
  private List<String> cumulativeWithdrawTokenAmounts = null;
  @SerializedName("cumulative_withdraw_usd")
  private String cumulativeWithdrawUsd = null;
  @SerializedName("cumulative_reward_token_amounts")
  private List<String> cumulativeRewardTokenAmounts = null;
  @SerializedName("cumulative_reward_usd")
  private List<String> cumulativeRewardUsd = null;
  @SerializedName("deposit_count")
  private Integer depositCount = null;
  @SerializedName("withdraw_count")
  private Integer withdrawCount = null;
  @SerializedName("timestamp")
  private String timestamp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   *  (position id )-( transaction hash )-( log index ) 
   **/
  @ApiModelProperty(value = " (position id )-( transaction hash )-( log index ) ")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Transaction hash of the transaction that triggered this snapshot
   **/
  @ApiModelProperty(value = "Transaction hash of the transaction that triggered this snapshot")
  public String getHash() {
    return hash;
  }
  public void setHash(String hash) {
    this.hash = hash;
  }

  /**
   * Event log index. For transactions that don't emit event, create arbitrary index starting from 0
   **/
  @ApiModelProperty(value = "Event log index. For transactions that don't emit event, create arbitrary index starting from 0")
  public Integer getLogIndex() {
    return logIndex;
  }
  public void setLogIndex(Integer logIndex) {
    this.logIndex = logIndex;
  }

  /**
   * Nonce of the transaction that triggered this snapshot
   **/
  @ApiModelProperty(value = "Nonce of the transaction that triggered this snapshot")
  public String getNonce() {
    return nonce;
  }
  public void setNonce(String nonce) {
    this.nonce = nonce;
  }

  /**
   * Position of this snapshot
   **/
  @ApiModelProperty(value = "Position of this snapshot")
  public String getPosition() {
    return position;
  }
  public void setPosition(String position) {
    this.position = position;
  }

  /**
   * Type of token used to track liquidity
   **/
  @ApiModelProperty(value = "Type of token used to track liquidity")
  public String getLiquidityTokenType() {
    return liquidityTokenType;
  }
  public void setLiquidityTokenType(String liquidityTokenType) {
    this.liquidityTokenType = liquidityTokenType;
  }

  /**
   * total position liquidity
   **/
  @ApiModelProperty(value = "total position liquidity")
  public String getLiquidity() {
    return liquidity;
  }
  public void setLiquidity(String liquidity) {
    this.liquidity = liquidity;
  }

  /**
   * total position liquidity in USD
   **/
  @ApiModelProperty(value = "total position liquidity in USD")
  public String getLiquidityUsd() {
    return liquidityUsd;
  }
  public void setLiquidityUsd(String liquidityUsd) {
    this.liquidityUsd = liquidityUsd;
  }

  /**
   * amount of tokens ever deposited to position
   **/
  @ApiModelProperty(value = "amount of tokens ever deposited to position")
  public List<String> getCumulativeDepositTokenAmounts() {
    return cumulativeDepositTokenAmounts;
  }
  public void setCumulativeDepositTokenAmounts(List<String> cumulativeDepositTokenAmounts) {
    this.cumulativeDepositTokenAmounts = cumulativeDepositTokenAmounts;
  }

  /**
   * amount of tokens in USD deposited to position
   **/
  @ApiModelProperty(value = "amount of tokens in USD deposited to position")
  public String getCumulativeDepositUsd() {
    return cumulativeDepositUsd;
  }
  public void setCumulativeDepositUsd(String cumulativeDepositUsd) {
    this.cumulativeDepositUsd = cumulativeDepositUsd;
  }

  /**
   * amount of tokens ever withdrawn from position (without fees)
   **/
  @ApiModelProperty(value = "amount of tokens ever withdrawn from position (without fees)")
  public List<String> getCumulativeWithdrawTokenAmounts() {
    return cumulativeWithdrawTokenAmounts;
  }
  public void setCumulativeWithdrawTokenAmounts(List<String> cumulativeWithdrawTokenAmounts) {
    this.cumulativeWithdrawTokenAmounts = cumulativeWithdrawTokenAmounts;
  }

  /**
   * amount of tokens in USD withdrawn from position (without fees)
   **/
  @ApiModelProperty(value = "amount of tokens in USD withdrawn from position (without fees)")
  public String getCumulativeWithdrawUsd() {
    return cumulativeWithdrawUsd;
  }
  public void setCumulativeWithdrawUsd(String cumulativeWithdrawUsd) {
    this.cumulativeWithdrawUsd = cumulativeWithdrawUsd;
  }

  /**
   * Total reward token accumulated under this position, in native amounts
   **/
  @ApiModelProperty(value = "Total reward token accumulated under this position, in native amounts")
  public List<String> getCumulativeRewardTokenAmounts() {
    return cumulativeRewardTokenAmounts;
  }
  public void setCumulativeRewardTokenAmounts(List<String> cumulativeRewardTokenAmounts) {
    this.cumulativeRewardTokenAmounts = cumulativeRewardTokenAmounts;
  }

  /**
   * Total reward token accumulated under this position, in USD
   **/
  @ApiModelProperty(value = "Total reward token accumulated under this position, in USD")
  public List<String> getCumulativeRewardUsd() {
    return cumulativeRewardUsd;
  }
  public void setCumulativeRewardUsd(List<String> cumulativeRewardUsd) {
    this.cumulativeRewardUsd = cumulativeRewardUsd;
  }

  /**
   * Number of deposits related to this position
   **/
  @ApiModelProperty(value = "Number of deposits related to this position")
  public Integer getDepositCount() {
    return depositCount;
  }
  public void setDepositCount(Integer depositCount) {
    this.depositCount = depositCount;
  }

  /**
   * Number of withdrawals related to this position
   **/
  @ApiModelProperty(value = "Number of withdrawals related to this position")
  public Integer getWithdrawCount() {
    return withdrawCount;
  }
  public void setWithdrawCount(Integer withdrawCount) {
    this.withdrawCount = withdrawCount;
  }

  /**
   * Timestamp of this snapshot
   **/
  @ApiModelProperty(value = "Timestamp of this snapshot")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PANCAKESWAPV3ETHEREUMPositionSnapshotDTO pANCAKESWAPV3ETHEREUMPositionSnapshotDTO = (PANCAKESWAPV3ETHEREUMPositionSnapshotDTO) o;
    return (this.entryTime == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.entryTime == null : this.entryTime.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.entryTime)) &&
        (this.recvTime == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.recvTime == null : this.recvTime.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.recvTime)) &&
        (this.blockNumber == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.blockNumber == null : this.blockNumber.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.blockNumber)) &&
        (this.id == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.id == null : this.id.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.id)) &&
        (this.hash == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.hash == null : this.hash.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.hash)) &&
        (this.logIndex == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.logIndex == null : this.logIndex.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.logIndex)) &&
        (this.nonce == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.nonce == null : this.nonce.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.nonce)) &&
        (this.position == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.position == null : this.position.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.position)) &&
        (this.liquidityTokenType == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.liquidityTokenType == null : this.liquidityTokenType.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.liquidityTokenType)) &&
        (this.liquidity == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.liquidity == null : this.liquidity.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.liquidity)) &&
        (this.liquidityUsd == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.liquidityUsd == null : this.liquidityUsd.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.liquidityUsd)) &&
        (this.cumulativeDepositTokenAmounts == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositTokenAmounts == null : this.cumulativeDepositTokenAmounts.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositTokenAmounts)) &&
        (this.cumulativeDepositUsd == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositUsd == null : this.cumulativeDepositUsd.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositUsd)) &&
        (this.cumulativeWithdrawTokenAmounts == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawTokenAmounts == null : this.cumulativeWithdrawTokenAmounts.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawTokenAmounts)) &&
        (this.cumulativeWithdrawUsd == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawUsd == null : this.cumulativeWithdrawUsd.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawUsd)) &&
        (this.cumulativeRewardTokenAmounts == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardTokenAmounts == null : this.cumulativeRewardTokenAmounts.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardTokenAmounts)) &&
        (this.cumulativeRewardUsd == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardUsd == null : this.cumulativeRewardUsd.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardUsd)) &&
        (this.depositCount == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.depositCount == null : this.depositCount.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.depositCount)) &&
        (this.withdrawCount == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.withdrawCount == null : this.withdrawCount.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.withdrawCount)) &&
        (this.timestamp == null ? pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.timestamp == null : this.timestamp.equals(pANCAKESWAPV3ETHEREUMPositionSnapshotDTO.timestamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.hash == null ? 0: this.hash.hashCode());
    result = 31 * result + (this.logIndex == null ? 0: this.logIndex.hashCode());
    result = 31 * result + (this.nonce == null ? 0: this.nonce.hashCode());
    result = 31 * result + (this.position == null ? 0: this.position.hashCode());
    result = 31 * result + (this.liquidityTokenType == null ? 0: this.liquidityTokenType.hashCode());
    result = 31 * result + (this.liquidity == null ? 0: this.liquidity.hashCode());
    result = 31 * result + (this.liquidityUsd == null ? 0: this.liquidityUsd.hashCode());
    result = 31 * result + (this.cumulativeDepositTokenAmounts == null ? 0: this.cumulativeDepositTokenAmounts.hashCode());
    result = 31 * result + (this.cumulativeDepositUsd == null ? 0: this.cumulativeDepositUsd.hashCode());
    result = 31 * result + (this.cumulativeWithdrawTokenAmounts == null ? 0: this.cumulativeWithdrawTokenAmounts.hashCode());
    result = 31 * result + (this.cumulativeWithdrawUsd == null ? 0: this.cumulativeWithdrawUsd.hashCode());
    result = 31 * result + (this.cumulativeRewardTokenAmounts == null ? 0: this.cumulativeRewardTokenAmounts.hashCode());
    result = 31 * result + (this.cumulativeRewardUsd == null ? 0: this.cumulativeRewardUsd.hashCode());
    result = 31 * result + (this.depositCount == null ? 0: this.depositCount.hashCode());
    result = 31 * result + (this.withdrawCount == null ? 0: this.withdrawCount.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PANCAKESWAPV3ETHEREUMPositionSnapshotDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  hash: ").append(hash).append("\n");
    sb.append("  logIndex: ").append(logIndex).append("\n");
    sb.append("  nonce: ").append(nonce).append("\n");
    sb.append("  position: ").append(position).append("\n");
    sb.append("  liquidityTokenType: ").append(liquidityTokenType).append("\n");
    sb.append("  liquidity: ").append(liquidity).append("\n");
    sb.append("  liquidityUsd: ").append(liquidityUsd).append("\n");
    sb.append("  cumulativeDepositTokenAmounts: ").append(cumulativeDepositTokenAmounts).append("\n");
    sb.append("  cumulativeDepositUsd: ").append(cumulativeDepositUsd).append("\n");
    sb.append("  cumulativeWithdrawTokenAmounts: ").append(cumulativeWithdrawTokenAmounts).append("\n");
    sb.append("  cumulativeWithdrawUsd: ").append(cumulativeWithdrawUsd).append("\n");
    sb.append("  cumulativeRewardTokenAmounts: ").append(cumulativeRewardTokenAmounts).append("\n");
    sb.append("  cumulativeRewardUsd: ").append(cumulativeRewardUsd).append("\n");
    sb.append("  depositCount: ").append(depositCount).append("\n");
    sb.append("  withdrawCount: ").append(withdrawCount).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
