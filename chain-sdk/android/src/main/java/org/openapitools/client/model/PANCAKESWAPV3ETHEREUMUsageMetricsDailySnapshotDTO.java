/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("day")
  private Integer day = null;
  @SerializedName("protocol")
  private String protocol = null;
  @SerializedName("daily_active_users")
  private Integer dailyActiveUsers = null;
  @SerializedName("cumulative_unique_users")
  private Integer cumulativeUniqueUsers = null;
  @SerializedName("daily_transaction_count")
  private Integer dailyTransactionCount = null;
  @SerializedName("total_pool_count")
  private Integer totalPoolCount = null;
  @SerializedName("daily_deposit_count")
  private Integer dailyDepositCount = null;
  @SerializedName("daily_withdraw_count")
  private Integer dailyWithdrawCount = null;
  @SerializedName("daily_swap_count")
  private Integer dailySwapCount = null;
  @SerializedName("timestamp")
  private String timestamp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * ID is # of days since Unix epoch time
   **/
  @ApiModelProperty(value = "ID is # of days since Unix epoch time")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Number of days since Unix epoch time
   **/
  @ApiModelProperty(value = "Number of days since Unix epoch time")
  public Integer getDay() {
    return day;
  }
  public void setDay(Integer day) {
    this.day = day;
  }

  /**
   * Protocol this snapshot is associated with
   **/
  @ApiModelProperty(value = "Protocol this snapshot is associated with")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  /**
   * Number of unique daily active users
   **/
  @ApiModelProperty(value = "Number of unique daily active users")
  public Integer getDailyActiveUsers() {
    return dailyActiveUsers;
  }
  public void setDailyActiveUsers(Integer dailyActiveUsers) {
    this.dailyActiveUsers = dailyActiveUsers;
  }

  /**
   * Number of cumulative unique users
   **/
  @ApiModelProperty(value = "Number of cumulative unique users")
  public Integer getCumulativeUniqueUsers() {
    return cumulativeUniqueUsers;
  }
  public void setCumulativeUniqueUsers(Integer cumulativeUniqueUsers) {
    this.cumulativeUniqueUsers = cumulativeUniqueUsers;
  }

  /**
   * Total number of transactions occurred in a day. Transactions include all entities that implement the Event interface.
   **/
  @ApiModelProperty(value = "Total number of transactions occurred in a day. Transactions include all entities that implement the Event interface.")
  public Integer getDailyTransactionCount() {
    return dailyTransactionCount;
  }
  public void setDailyTransactionCount(Integer dailyTransactionCount) {
    this.dailyTransactionCount = dailyTransactionCount;
  }

  /**
   * Total number of pools
   **/
  @ApiModelProperty(value = "Total number of pools")
  public Integer getTotalPoolCount() {
    return totalPoolCount;
  }
  public void setTotalPoolCount(Integer totalPoolCount) {
    this.totalPoolCount = totalPoolCount;
  }

  /**
   * Total number of deposits (add liquidity) in an day
   **/
  @ApiModelProperty(value = "Total number of deposits (add liquidity) in an day")
  public Integer getDailyDepositCount() {
    return dailyDepositCount;
  }
  public void setDailyDepositCount(Integer dailyDepositCount) {
    this.dailyDepositCount = dailyDepositCount;
  }

  /**
   * Total number of withdrawals (remove liquidity) in an day
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity) in an day")
  public Integer getDailyWithdrawCount() {
    return dailyWithdrawCount;
  }
  public void setDailyWithdrawCount(Integer dailyWithdrawCount) {
    this.dailyWithdrawCount = dailyWithdrawCount;
  }

  /**
   * Total number of trades (swaps) in an day
   **/
  @ApiModelProperty(value = "Total number of trades (swaps) in an day")
  public Integer getDailySwapCount() {
    return dailySwapCount;
  }
  public void setDailySwapCount(Integer dailySwapCount) {
    this.dailySwapCount = dailySwapCount;
  }

  /**
   * Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed)
   **/
  @ApiModelProperty(value = "Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed)")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO = (PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO) o;
    return (this.entryTime == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.entryTime == null : this.entryTime.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.entryTime)) &&
        (this.recvTime == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.recvTime == null : this.recvTime.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.recvTime)) &&
        (this.blockNumber == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.blockNumber == null : this.blockNumber.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.blockNumber)) &&
        (this.id == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.id == null : this.id.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.id)) &&
        (this.day == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.day == null : this.day.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.day)) &&
        (this.protocol == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.protocol == null : this.protocol.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.protocol)) &&
        (this.dailyActiveUsers == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyActiveUsers == null : this.dailyActiveUsers.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyActiveUsers)) &&
        (this.cumulativeUniqueUsers == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.cumulativeUniqueUsers == null : this.cumulativeUniqueUsers.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.cumulativeUniqueUsers)) &&
        (this.dailyTransactionCount == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyTransactionCount == null : this.dailyTransactionCount.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyTransactionCount)) &&
        (this.totalPoolCount == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.totalPoolCount == null : this.totalPoolCount.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.totalPoolCount)) &&
        (this.dailyDepositCount == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyDepositCount == null : this.dailyDepositCount.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyDepositCount)) &&
        (this.dailyWithdrawCount == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyWithdrawCount == null : this.dailyWithdrawCount.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailyWithdrawCount)) &&
        (this.dailySwapCount == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailySwapCount == null : this.dailySwapCount.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.dailySwapCount)) &&
        (this.timestamp == null ? pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.timestamp == null : this.timestamp.equals(pANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO.timestamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.day == null ? 0: this.day.hashCode());
    result = 31 * result + (this.protocol == null ? 0: this.protocol.hashCode());
    result = 31 * result + (this.dailyActiveUsers == null ? 0: this.dailyActiveUsers.hashCode());
    result = 31 * result + (this.cumulativeUniqueUsers == null ? 0: this.cumulativeUniqueUsers.hashCode());
    result = 31 * result + (this.dailyTransactionCount == null ? 0: this.dailyTransactionCount.hashCode());
    result = 31 * result + (this.totalPoolCount == null ? 0: this.totalPoolCount.hashCode());
    result = 31 * result + (this.dailyDepositCount == null ? 0: this.dailyDepositCount.hashCode());
    result = 31 * result + (this.dailyWithdrawCount == null ? 0: this.dailyWithdrawCount.hashCode());
    result = 31 * result + (this.dailySwapCount == null ? 0: this.dailySwapCount.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  day: ").append(day).append("\n");
    sb.append("  protocol: ").append(protocol).append("\n");
    sb.append("  dailyActiveUsers: ").append(dailyActiveUsers).append("\n");
    sb.append("  cumulativeUniqueUsers: ").append(cumulativeUniqueUsers).append("\n");
    sb.append("  dailyTransactionCount: ").append(dailyTransactionCount).append("\n");
    sb.append("  totalPoolCount: ").append(totalPoolCount).append("\n");
    sb.append("  dailyDepositCount: ").append(dailyDepositCount).append("\n");
    sb.append("  dailyWithdrawCount: ").append(dailyWithdrawCount).append("\n");
    sb.append("  dailySwapCount: ").append(dailySwapCount).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
