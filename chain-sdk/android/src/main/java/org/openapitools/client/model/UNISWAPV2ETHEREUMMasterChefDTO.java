/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Smart contract that is used to manage the liquidity mining program on Uniswap V2.
 **/
@ApiModel(description = "Smart contract that is used to manage the liquidity mining program on Uniswap V2.")
public class UNISWAPV2ETHEREUMMasterChefDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("address")
  private String address = null;
  @SerializedName("total_alloc_point")
  private String totalAllocPoint = null;
  @SerializedName("reward_token_rate")
  private String rewardTokenRate = null;
  @SerializedName("reward_token_interval")
  private String rewardTokenInterval = null;
  @SerializedName("adjusted_reward_token_rate")
  private String adjustedRewardTokenRate = null;
  @SerializedName("last_updated_reward_rate")
  private String lastUpdatedRewardRate = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   * (masterChef type) - (pid referenced in the masterchef contract)
   **/
  @ApiModelProperty(value = "(masterChef type) - (pid referenced in the masterchef contract)")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Address of the masterchef contract
   **/
  @ApiModelProperty(value = "Address of the masterchef contract")
  public String getAddress() {
    return address;
  }
  public void setAddress(String address) {
    this.address = address;
  }

  /**
   * Total allocation point of all staking pools
   **/
  @ApiModelProperty(value = "Total allocation point of all staking pools")
  public String getTotalAllocPoint() {
    return totalAllocPoint;
  }
  public void setTotalAllocPoint(String totalAllocPoint) {
    this.totalAllocPoint = totalAllocPoint;
  }

  /**
   * Amount of reward tokens emitted per block or timestamp
   **/
  @ApiModelProperty(value = "Amount of reward tokens emitted per block or timestamp")
  public String getRewardTokenRate() {
    return rewardTokenRate;
  }
  public void setRewardTokenRate(String rewardTokenRate) {
    this.rewardTokenRate = rewardTokenRate;
  }

  /**
   * Indicates whether rewards are indicated by block or timestamp
   **/
  @ApiModelProperty(value = "Indicates whether rewards are indicated by block or timestamp")
  public String getRewardTokenInterval() {
    return rewardTokenInterval;
  }
  public void setRewardTokenInterval(String rewardTokenInterval) {
    this.rewardTokenInterval = rewardTokenInterval;
  }

  /**
   * Reward token rate given after you adjust for allocations either burned or not applicable
   **/
  @ApiModelProperty(value = "Reward token rate given after you adjust for allocations either burned or not applicable")
  public String getAdjustedRewardTokenRate() {
    return adjustedRewardTokenRate;
  }
  public void setAdjustedRewardTokenRate(String adjustedRewardTokenRate) {
    this.adjustedRewardTokenRate = adjustedRewardTokenRate;
  }

  /**
   * Last time the adjusted reward token rate was updated
   **/
  @ApiModelProperty(value = "Last time the adjusted reward token rate was updated")
  public String getLastUpdatedRewardRate() {
    return lastUpdatedRewardRate;
  }
  public void setLastUpdatedRewardRate(String lastUpdatedRewardRate) {
    this.lastUpdatedRewardRate = lastUpdatedRewardRate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV2ETHEREUMMasterChefDTO uNISWAPV2ETHEREUMMasterChefDTO = (UNISWAPV2ETHEREUMMasterChefDTO) o;
    return (this.entryTime == null ? uNISWAPV2ETHEREUMMasterChefDTO.entryTime == null : this.entryTime.equals(uNISWAPV2ETHEREUMMasterChefDTO.entryTime)) &&
        (this.recvTime == null ? uNISWAPV2ETHEREUMMasterChefDTO.recvTime == null : this.recvTime.equals(uNISWAPV2ETHEREUMMasterChefDTO.recvTime)) &&
        (this.blockNumber == null ? uNISWAPV2ETHEREUMMasterChefDTO.blockNumber == null : this.blockNumber.equals(uNISWAPV2ETHEREUMMasterChefDTO.blockNumber)) &&
        (this.blockRange == null ? uNISWAPV2ETHEREUMMasterChefDTO.blockRange == null : this.blockRange.equals(uNISWAPV2ETHEREUMMasterChefDTO.blockRange)) &&
        (this.id == null ? uNISWAPV2ETHEREUMMasterChefDTO.id == null : this.id.equals(uNISWAPV2ETHEREUMMasterChefDTO.id)) &&
        (this.address == null ? uNISWAPV2ETHEREUMMasterChefDTO.address == null : this.address.equals(uNISWAPV2ETHEREUMMasterChefDTO.address)) &&
        (this.totalAllocPoint == null ? uNISWAPV2ETHEREUMMasterChefDTO.totalAllocPoint == null : this.totalAllocPoint.equals(uNISWAPV2ETHEREUMMasterChefDTO.totalAllocPoint)) &&
        (this.rewardTokenRate == null ? uNISWAPV2ETHEREUMMasterChefDTO.rewardTokenRate == null : this.rewardTokenRate.equals(uNISWAPV2ETHEREUMMasterChefDTO.rewardTokenRate)) &&
        (this.rewardTokenInterval == null ? uNISWAPV2ETHEREUMMasterChefDTO.rewardTokenInterval == null : this.rewardTokenInterval.equals(uNISWAPV2ETHEREUMMasterChefDTO.rewardTokenInterval)) &&
        (this.adjustedRewardTokenRate == null ? uNISWAPV2ETHEREUMMasterChefDTO.adjustedRewardTokenRate == null : this.adjustedRewardTokenRate.equals(uNISWAPV2ETHEREUMMasterChefDTO.adjustedRewardTokenRate)) &&
        (this.lastUpdatedRewardRate == null ? uNISWAPV2ETHEREUMMasterChefDTO.lastUpdatedRewardRate == null : this.lastUpdatedRewardRate.equals(uNISWAPV2ETHEREUMMasterChefDTO.lastUpdatedRewardRate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.address == null ? 0: this.address.hashCode());
    result = 31 * result + (this.totalAllocPoint == null ? 0: this.totalAllocPoint.hashCode());
    result = 31 * result + (this.rewardTokenRate == null ? 0: this.rewardTokenRate.hashCode());
    result = 31 * result + (this.rewardTokenInterval == null ? 0: this.rewardTokenInterval.hashCode());
    result = 31 * result + (this.adjustedRewardTokenRate == null ? 0: this.adjustedRewardTokenRate.hashCode());
    result = 31 * result + (this.lastUpdatedRewardRate == null ? 0: this.lastUpdatedRewardRate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV2ETHEREUMMasterChefDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  address: ").append(address).append("\n");
    sb.append("  totalAllocPoint: ").append(totalAllocPoint).append("\n");
    sb.append("  rewardTokenRate: ").append(rewardTokenRate).append("\n");
    sb.append("  rewardTokenInterval: ").append(rewardTokenInterval).append("\n");
    sb.append("  adjustedRewardTokenRate: ").append(adjustedRewardTokenRate).append("\n");
    sb.append("  lastUpdatedRewardRate: ").append(lastUpdatedRewardRate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
