/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class PANCAKESWAPV3ETHEREUMAccountDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("position_count")
  private Integer positionCount = null;
  @SerializedName("open_position_count")
  private Integer openPositionCount = null;
  @SerializedName("closed_position_count")
  private Integer closedPositionCount = null;
  @SerializedName("deposit_count")
  private Integer depositCount = null;
  @SerializedName("withdraw_count")
  private Integer withdrawCount = null;
  @SerializedName("swap_count")
  private Integer swapCount = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   * Account address.
   **/
  @ApiModelProperty(value = "Account address.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Number of positions this account has.
   **/
  @ApiModelProperty(value = "Number of positions this account has.")
  public Integer getPositionCount() {
    return positionCount;
  }
  public void setPositionCount(Integer positionCount) {
    this.positionCount = positionCount;
  }

  /**
   * Number of open positions this account has.
   **/
  @ApiModelProperty(value = "Number of open positions this account has.")
  public Integer getOpenPositionCount() {
    return openPositionCount;
  }
  public void setOpenPositionCount(Integer openPositionCount) {
    this.openPositionCount = openPositionCount;
  }

  /**
   * Number of closed positions this account has.
   **/
  @ApiModelProperty(value = "Number of closed positions this account has.")
  public Integer getClosedPositionCount() {
    return closedPositionCount;
  }
  public void setClosedPositionCount(Integer closedPositionCount) {
    this.closedPositionCount = closedPositionCount;
  }

  /**
   * Number of deposits this account made.
   **/
  @ApiModelProperty(value = "Number of deposits this account made.")
  public Integer getDepositCount() {
    return depositCount;
  }
  public void setDepositCount(Integer depositCount) {
    this.depositCount = depositCount;
  }

  /**
   * Number of withdrawals this account made.
   **/
  @ApiModelProperty(value = "Number of withdrawals this account made.")
  public Integer getWithdrawCount() {
    return withdrawCount;
  }
  public void setWithdrawCount(Integer withdrawCount) {
    this.withdrawCount = withdrawCount;
  }

  /**
   * Number of times this account has traded/swapped.
   **/
  @ApiModelProperty(value = "Number of times this account has traded/swapped.")
  public Integer getSwapCount() {
    return swapCount;
  }
  public void setSwapCount(Integer swapCount) {
    this.swapCount = swapCount;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PANCAKESWAPV3ETHEREUMAccountDTO pANCAKESWAPV3ETHEREUMAccountDTO = (PANCAKESWAPV3ETHEREUMAccountDTO) o;
    return (this.entryTime == null ? pANCAKESWAPV3ETHEREUMAccountDTO.entryTime == null : this.entryTime.equals(pANCAKESWAPV3ETHEREUMAccountDTO.entryTime)) &&
        (this.recvTime == null ? pANCAKESWAPV3ETHEREUMAccountDTO.recvTime == null : this.recvTime.equals(pANCAKESWAPV3ETHEREUMAccountDTO.recvTime)) &&
        (this.blockNumber == null ? pANCAKESWAPV3ETHEREUMAccountDTO.blockNumber == null : this.blockNumber.equals(pANCAKESWAPV3ETHEREUMAccountDTO.blockNumber)) &&
        (this.blockRange == null ? pANCAKESWAPV3ETHEREUMAccountDTO.blockRange == null : this.blockRange.equals(pANCAKESWAPV3ETHEREUMAccountDTO.blockRange)) &&
        (this.id == null ? pANCAKESWAPV3ETHEREUMAccountDTO.id == null : this.id.equals(pANCAKESWAPV3ETHEREUMAccountDTO.id)) &&
        (this.positionCount == null ? pANCAKESWAPV3ETHEREUMAccountDTO.positionCount == null : this.positionCount.equals(pANCAKESWAPV3ETHEREUMAccountDTO.positionCount)) &&
        (this.openPositionCount == null ? pANCAKESWAPV3ETHEREUMAccountDTO.openPositionCount == null : this.openPositionCount.equals(pANCAKESWAPV3ETHEREUMAccountDTO.openPositionCount)) &&
        (this.closedPositionCount == null ? pANCAKESWAPV3ETHEREUMAccountDTO.closedPositionCount == null : this.closedPositionCount.equals(pANCAKESWAPV3ETHEREUMAccountDTO.closedPositionCount)) &&
        (this.depositCount == null ? pANCAKESWAPV3ETHEREUMAccountDTO.depositCount == null : this.depositCount.equals(pANCAKESWAPV3ETHEREUMAccountDTO.depositCount)) &&
        (this.withdrawCount == null ? pANCAKESWAPV3ETHEREUMAccountDTO.withdrawCount == null : this.withdrawCount.equals(pANCAKESWAPV3ETHEREUMAccountDTO.withdrawCount)) &&
        (this.swapCount == null ? pANCAKESWAPV3ETHEREUMAccountDTO.swapCount == null : this.swapCount.equals(pANCAKESWAPV3ETHEREUMAccountDTO.swapCount));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.positionCount == null ? 0: this.positionCount.hashCode());
    result = 31 * result + (this.openPositionCount == null ? 0: this.openPositionCount.hashCode());
    result = 31 * result + (this.closedPositionCount == null ? 0: this.closedPositionCount.hashCode());
    result = 31 * result + (this.depositCount == null ? 0: this.depositCount.hashCode());
    result = 31 * result + (this.withdrawCount == null ? 0: this.withdrawCount.hashCode());
    result = 31 * result + (this.swapCount == null ? 0: this.swapCount.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PANCAKESWAPV3ETHEREUMAccountDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  positionCount: ").append(positionCount).append("\n");
    sb.append("  openPositionCount: ").append(openPositionCount).append("\n");
    sb.append("  closedPositionCount: ").append(closedPositionCount).append("\n");
    sb.append("  depositCount: ").append(depositCount).append("\n");
    sb.append("  withdrawCount: ").append(withdrawCount).append("\n");
    sb.append("  swapCount: ").append(swapCount).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
