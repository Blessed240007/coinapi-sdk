/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Represents a liquidity pool daily snapshot for PancakeSwap V3.
 **/
@ApiModel(description = "Represents a liquidity pool daily snapshot for PancakeSwap V3.")
public class PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("block_")
  private Integer block = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("day")
  private Integer day = null;
  @SerializedName("protocol")
  private String protocol = null;
  @SerializedName("pool")
  private String pool = null;
  @SerializedName("tick")
  private String tick = null;
  @SerializedName("total_value_locked_usd")
  private String totalValueLockedUsd = null;
  @SerializedName("total_liquidity")
  private String totalLiquidity = null;
  @SerializedName("total_liquidity_usd")
  private String totalLiquidityUsd = null;
  @SerializedName("active_liquidity")
  private String activeLiquidity = null;
  @SerializedName("active_liquidity_usd")
  private String activeLiquidityUsd = null;
  @SerializedName("uncollected_protocol_side_token_amounts")
  private List<String> uncollectedProtocolSideTokenAmounts = null;
  @SerializedName("uncollected_protocol_side_values_usd")
  private List<String> uncollectedProtocolSideValuesUsd = null;
  @SerializedName("uncollected_supply_side_token_amounts")
  private List<String> uncollectedSupplySideTokenAmounts = null;
  @SerializedName("uncollected_supply_side_values_usd")
  private List<String> uncollectedSupplySideValuesUsd = null;
  @SerializedName("cumulative_supply_side_revenue_usd")
  private String cumulativeSupplySideRevenueUsd = null;
  @SerializedName("daily_supply_side_revenue_usd")
  private String dailySupplySideRevenueUsd = null;
  @SerializedName("cumulative_protocol_side_revenue_usd")
  private String cumulativeProtocolSideRevenueUsd = null;
  @SerializedName("daily_protocol_side_revenue_usd")
  private String dailyProtocolSideRevenueUsd = null;
  @SerializedName("cumulative_total_revenue_usd")
  private String cumulativeTotalRevenueUsd = null;
  @SerializedName("daily_total_revenue_usd")
  private String dailyTotalRevenueUsd = null;
  @SerializedName("cumulative_volume_usd")
  private String cumulativeVolumeUsd = null;
  @SerializedName("daily_volume_usd")
  private String dailyVolumeUsd = null;
  @SerializedName("cumulative_volume_by_token_amount")
  private List<String> cumulativeVolumeByTokenAmount = null;
  @SerializedName("daily_volume_by_token_amount")
  private List<String> dailyVolumeByTokenAmount = null;
  @SerializedName("cumulative_volume_by_token_usd")
  private List<String> cumulativeVolumeByTokenUsd = null;
  @SerializedName("daily_volume_by_token_usd")
  private List<String> dailyVolumeByTokenUsd = null;
  @SerializedName("input_token_balances")
  private List<String> inputTokenBalances = null;
  @SerializedName("input_token_balances_usd")
  private List<String> inputTokenBalancesUsd = null;
  @SerializedName("input_token_weights")
  private List<String> inputTokenWeights = null;
  @SerializedName("staked_output_token_amount")
  private String stakedOutputTokenAmount = null;
  @SerializedName("reward_token_emissions_amount")
  private List<String> rewardTokenEmissionsAmount = null;
  @SerializedName("reward_token_emissions_usd")
  private List<String> rewardTokenEmissionsUsd = null;
  @SerializedName("cumulative_deposit_count")
  private Integer cumulativeDepositCount = null;
  @SerializedName("daily_deposit_count")
  private Integer dailyDepositCount = null;
  @SerializedName("cumulative_withdraw_count")
  private Integer cumulativeWithdrawCount = null;
  @SerializedName("daily_withdraw_count")
  private Integer dailyWithdrawCount = null;
  @SerializedName("cumulative_swap_count")
  private Integer cumulativeSwapCount = null;
  @SerializedName("daily_swap_count")
  private Integer dailySwapCount = null;
  @SerializedName("position_count")
  private Integer positionCount = null;
  @SerializedName("open_position_count")
  private Integer openPositionCount = null;
  @SerializedName("closed_position_count")
  private Integer closedPositionCount = null;
  @SerializedName("timestamp")
  private String timestamp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * The Ethereum block number associated with the liquidity pool daily snapshot.
   **/
  @ApiModelProperty(value = "The Ethereum block number associated with the liquidity pool daily snapshot.")
  public Integer getBlock() {
    return block;
  }
  public void setBlock(Integer block) {
    this.block = block;
  }

  /**
   * Identifier, format: (smart contract address of the pool)-(# of days since Unix epoch time).
   **/
  @ApiModelProperty(value = "Identifier, format: (smart contract address of the pool)-(# of days since Unix epoch time).")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Number of days since Unix epoch time.
   **/
  @ApiModelProperty(value = "Number of days since Unix epoch time.")
  public Integer getDay() {
    return day;
  }
  public void setDay(Integer day) {
    this.day = day;
  }

  /**
   * Protocol associated with the liquidity pool.
   **/
  @ApiModelProperty(value = "Protocol associated with the liquidity pool.")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  /**
   * Pool this snapshot belongs to.
   **/
  @ApiModelProperty(value = "Pool this snapshot belongs to.")
  public String getPool() {
    return pool;
  }
  public void setPool(String pool) {
    this.pool = pool;
  }

  /**
   * Current tick representing the price of token0/token1.
   **/
  @ApiModelProperty(value = "Current tick representing the price of token0/token1.")
  public String getTick() {
    return tick;
  }
  public void setTick(String tick) {
    this.tick = tick;
  }

  /**
   * Current TVL (Total Value Locked) of this pool.
   **/
  @ApiModelProperty(value = "Current TVL (Total Value Locked) of this pool.")
  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }
  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }

  /**
   * The sum of all active and non-active liquidity for this pool.
   **/
  @ApiModelProperty(value = "The sum of all active and non-active liquidity for this pool.")
  public String getTotalLiquidity() {
    return totalLiquidity;
  }
  public void setTotalLiquidity(String totalLiquidity) {
    this.totalLiquidity = totalLiquidity;
  }

  /**
   * Sum of all active and non-active liquidity in USD for this pool.
   **/
  @ApiModelProperty(value = "Sum of all active and non-active liquidity in USD for this pool.")
  public String getTotalLiquidityUsd() {
    return totalLiquidityUsd;
  }
  public void setTotalLiquidityUsd(String totalLiquidityUsd) {
    this.totalLiquidityUsd = totalLiquidityUsd;
  }

  /**
   * All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.
   **/
  @ApiModelProperty(value = "All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.")
  public String getActiveLiquidity() {
    return activeLiquidity;
  }
  public void setActiveLiquidity(String activeLiquidity) {
    this.activeLiquidity = activeLiquidity;
  }

  /**
   * All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.
   **/
  @ApiModelProperty(value = "All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.")
  public String getActiveLiquidityUsd() {
    return activeLiquidityUsd;
  }
  public void setActiveLiquidityUsd(String activeLiquidityUsd) {
    this.activeLiquidityUsd = activeLiquidityUsd;
  }

  /**
   * All protocol-side value locked in token amounts that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All protocol-side value locked in token amounts that remains uncollected and unused in the pool.")
  public List<String> getUncollectedProtocolSideTokenAmounts() {
    return uncollectedProtocolSideTokenAmounts;
  }
  public void setUncollectedProtocolSideTokenAmounts(List<String> uncollectedProtocolSideTokenAmounts) {
    this.uncollectedProtocolSideTokenAmounts = uncollectedProtocolSideTokenAmounts;
  }

  /**
   * All protocol-side value locking in USD that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All protocol-side value locking in USD that remains uncollected and unused in the pool.")
  public List<String> getUncollectedProtocolSideValuesUsd() {
    return uncollectedProtocolSideValuesUsd;
  }
  public void setUncollectedProtocolSideValuesUsd(List<String> uncollectedProtocolSideValuesUsd) {
    this.uncollectedProtocolSideValuesUsd = uncollectedProtocolSideValuesUsd;
  }

  /**
   * All supply-side value locked in token amounts that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All supply-side value locked in token amounts that remains uncollected and unused in the pool.")
  public List<String> getUncollectedSupplySideTokenAmounts() {
    return uncollectedSupplySideTokenAmounts;
  }
  public void setUncollectedSupplySideTokenAmounts(List<String> uncollectedSupplySideTokenAmounts) {
    this.uncollectedSupplySideTokenAmounts = uncollectedSupplySideTokenAmounts;
  }

  /**
   * All supply-side value locked in USD that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All supply-side value locked in USD that remains uncollected and unused in the pool.")
  public List<String> getUncollectedSupplySideValuesUsd() {
    return uncollectedSupplySideValuesUsd;
  }
  public void setUncollectedSupplySideValuesUsd(List<String> uncollectedSupplySideValuesUsd) {
    this.uncollectedSupplySideValuesUsd = uncollectedSupplySideValuesUsd;
  }

  /**
   * All revenue generated by the liquidity pool, accrued to the supply side.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool, accrued to the supply side.")
  public String getCumulativeSupplySideRevenueUsd() {
    return cumulativeSupplySideRevenueUsd;
  }
  public void setCumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
  }

  /**
   * Daily revenue generated by the liquidity pool, accrued to the supply side.
   **/
  @ApiModelProperty(value = "Daily revenue generated by the liquidity pool, accrued to the supply side.")
  public String getDailySupplySideRevenueUsd() {
    return dailySupplySideRevenueUsd;
  }
  public void setDailySupplySideRevenueUsd(String dailySupplySideRevenueUsd) {
    this.dailySupplySideRevenueUsd = dailySupplySideRevenueUsd;
  }

  /**
   * All revenue generated by the liquidity pool, accrued to the protocol.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool, accrued to the protocol.")
  public String getCumulativeProtocolSideRevenueUsd() {
    return cumulativeProtocolSideRevenueUsd;
  }
  public void setCumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
  }

  /**
   * Daily revenue generated by the liquidity pool, accrued to the protocol.
   **/
  @ApiModelProperty(value = "Daily revenue generated by the liquidity pool, accrued to the protocol.")
  public String getDailyProtocolSideRevenueUsd() {
    return dailyProtocolSideRevenueUsd;
  }
  public void setDailyProtocolSideRevenueUsd(String dailyProtocolSideRevenueUsd) {
    this.dailyProtocolSideRevenueUsd = dailyProtocolSideRevenueUsd;
  }

  /**
   * All revenue generated by the liquidity pool.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool.")
  public String getCumulativeTotalRevenueUsd() {
    return cumulativeTotalRevenueUsd;
  }
  public void setCumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
  }

  /**
   * Daily revenue generated by the liquidity pool.
   **/
  @ApiModelProperty(value = "Daily revenue generated by the liquidity pool.")
  public String getDailyTotalRevenueUsd() {
    return dailyTotalRevenueUsd;
  }
  public void setDailyTotalRevenueUsd(String dailyTotalRevenueUsd) {
    this.dailyTotalRevenueUsd = dailyTotalRevenueUsd;
  }

  /**
   * All historical trade volume occurred in this pool, in USD.
   **/
  @ApiModelProperty(value = "All historical trade volume occurred in this pool, in USD.")
  public String getCumulativeVolumeUsd() {
    return cumulativeVolumeUsd;
  }
  public void setCumulativeVolumeUsd(String cumulativeVolumeUsd) {
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
  }

  /**
   * All trade volume occurred in a given day, in USD.
   **/
  @ApiModelProperty(value = "All trade volume occurred in a given day, in USD.")
  public String getDailyVolumeUsd() {
    return dailyVolumeUsd;
  }
  public void setDailyVolumeUsd(String dailyVolumeUsd) {
    this.dailyVolumeUsd = dailyVolumeUsd;
  }

  /**
   * All trade volume , in native amount. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume , in native amount. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getCumulativeVolumeByTokenAmount() {
    return cumulativeVolumeByTokenAmount;
  }
  public void setCumulativeVolumeByTokenAmount(List<String> cumulativeVolumeByTokenAmount) {
    this.cumulativeVolumeByTokenAmount = cumulativeVolumeByTokenAmount;
  }

  /**
   * All trade volume occurred in a given day for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume occurred in a given day for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getDailyVolumeByTokenAmount() {
    return dailyVolumeByTokenAmount;
  }
  public void setDailyVolumeByTokenAmount(List<String> dailyVolumeByTokenAmount) {
    this.dailyVolumeByTokenAmount = dailyVolumeByTokenAmount;
  }

  /**
   * All trade volume, in USD. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume, in USD. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getCumulativeVolumeByTokenUsd() {
    return cumulativeVolumeByTokenUsd;
  }
  public void setCumulativeVolumeByTokenUsd(List<String> cumulativeVolumeByTokenUsd) {
    this.cumulativeVolumeByTokenUsd = cumulativeVolumeByTokenUsd;
  }

  /**
   *  All trade volume occurred in a given day for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = " All trade volume occurred in a given day for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getDailyVolumeByTokenUsd() {
    return dailyVolumeByTokenUsd;
  }
  public void setDailyVolumeByTokenUsd(List<String> dailyVolumeByTokenUsd) {
    this.dailyVolumeByTokenUsd = dailyVolumeByTokenUsd;
  }

  /**
   * Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getInputTokenBalances() {
    return inputTokenBalances;
  }
  public void setInputTokenBalances(List<String> inputTokenBalances) {
    this.inputTokenBalances = inputTokenBalances;
  }

  /**
   * Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getInputTokenBalancesUsd() {
    return inputTokenBalancesUsd;
  }
  public void setInputTokenBalancesUsd(List<String> inputTokenBalancesUsd) {
    this.inputTokenBalancesUsd = inputTokenBalancesUsd;
  }

  /**
   * Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.
   **/
  @ApiModelProperty(value = "Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.")
  public List<String> getInputTokenWeights() {
    return inputTokenWeights;
  }
  public void setInputTokenWeights(List<String> inputTokenWeights) {
    this.inputTokenWeights = inputTokenWeights;
  }

  /**
   * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
   **/
  @ApiModelProperty(value = "Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.")
  public String getStakedOutputTokenAmount() {
    return stakedOutputTokenAmount;
  }
  public void setStakedOutputTokenAmount(String stakedOutputTokenAmount) {
    this.stakedOutputTokenAmount = stakedOutputTokenAmount;
  }

  /**
   * Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
   **/
  @ApiModelProperty(value = "Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.")
  public List<String> getRewardTokenEmissionsAmount() {
    return rewardTokenEmissionsAmount;
  }
  public void setRewardTokenEmissionsAmount(List<String> rewardTokenEmissionsAmount) {
    this.rewardTokenEmissionsAmount = rewardTokenEmissionsAmount;
  }

  /**
   * Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
   **/
  @ApiModelProperty(value = "Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.")
  public List<String> getRewardTokenEmissionsUsd() {
    return rewardTokenEmissionsUsd;
  }
  public void setRewardTokenEmissionsUsd(List<String> rewardTokenEmissionsUsd) {
    this.rewardTokenEmissionsUsd = rewardTokenEmissionsUsd;
  }

  /**
   * Total number of deposits (add liquidity).
   **/
  @ApiModelProperty(value = "Total number of deposits (add liquidity).")
  public Integer getCumulativeDepositCount() {
    return cumulativeDepositCount;
  }
  public void setCumulativeDepositCount(Integer cumulativeDepositCount) {
    this.cumulativeDepositCount = cumulativeDepositCount;
  }

  /**
   * Total number of deposits (add liquidity) in a day.
   **/
  @ApiModelProperty(value = "Total number of deposits (add liquidity) in a day.")
  public Integer getDailyDepositCount() {
    return dailyDepositCount;
  }
  public void setDailyDepositCount(Integer dailyDepositCount) {
    this.dailyDepositCount = dailyDepositCount;
  }

  /**
   * Total number of withdrawals (remove liquidity).
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity).")
  public Integer getCumulativeWithdrawCount() {
    return cumulativeWithdrawCount;
  }
  public void setCumulativeWithdrawCount(Integer cumulativeWithdrawCount) {
    this.cumulativeWithdrawCount = cumulativeWithdrawCount;
  }

  /**
   * Total number of withdrawals (remove liquidity) in a day.
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity) in a day.")
  public Integer getDailyWithdrawCount() {
    return dailyWithdrawCount;
  }
  public void setDailyWithdrawCount(Integer dailyWithdrawCount) {
    this.dailyWithdrawCount = dailyWithdrawCount;
  }

  /**
   * Total number of trades (swaps).
   **/
  @ApiModelProperty(value = "Total number of trades (swaps).")
  public Integer getCumulativeSwapCount() {
    return cumulativeSwapCount;
  }
  public void setCumulativeSwapCount(Integer cumulativeSwapCount) {
    this.cumulativeSwapCount = cumulativeSwapCount;
  }

  /**
   * Total number of trades (swaps) in a day.
   **/
  @ApiModelProperty(value = "Total number of trades (swaps) in a day.")
  public Integer getDailySwapCount() {
    return dailySwapCount;
  }
  public void setDailySwapCount(Integer dailySwapCount) {
    this.dailySwapCount = dailySwapCount;
  }

  /**
   * Number of positions in this market.
   **/
  @ApiModelProperty(value = "Number of positions in this market.")
  public Integer getPositionCount() {
    return positionCount;
  }
  public void setPositionCount(Integer positionCount) {
    this.positionCount = positionCount;
  }

  /**
   * Number of open positions in this market.
   **/
  @ApiModelProperty(value = "Number of open positions in this market.")
  public Integer getOpenPositionCount() {
    return openPositionCount;
  }
  public void setOpenPositionCount(Integer openPositionCount) {
    this.openPositionCount = openPositionCount;
  }

  /**
   * Number of closed positions in this market.
   **/
  @ApiModelProperty(value = "Number of closed positions in this market.")
  public Integer getClosedPositionCount() {
    return closedPositionCount;
  }
  public void setClosedPositionCount(Integer closedPositionCount) {
    this.closedPositionCount = closedPositionCount;
  }

  /**
   * Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed).
   **/
  @ApiModelProperty(value = "Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed).")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO = (PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO) o;
    return (this.entryTime == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.entryTime == null : this.entryTime.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.entryTime)) &&
        (this.recvTime == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.recvTime == null : this.recvTime.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.recvTime)) &&
        (this.blockNumber == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.blockNumber == null : this.blockNumber.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.blockNumber)) &&
        (this.block == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.block == null : this.block.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.block)) &&
        (this.id == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.id == null : this.id.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.id)) &&
        (this.day == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.day == null : this.day.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.day)) &&
        (this.protocol == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.protocol == null : this.protocol.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.protocol)) &&
        (this.pool == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.pool == null : this.pool.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.pool)) &&
        (this.tick == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.tick == null : this.tick.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.tick)) &&
        (this.totalValueLockedUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalValueLockedUsd == null : this.totalValueLockedUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalValueLockedUsd)) &&
        (this.totalLiquidity == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidity == null : this.totalLiquidity.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidity)) &&
        (this.totalLiquidityUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidityUsd == null : this.totalLiquidityUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidityUsd)) &&
        (this.activeLiquidity == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidity == null : this.activeLiquidity.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidity)) &&
        (this.activeLiquidityUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidityUsd == null : this.activeLiquidityUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidityUsd)) &&
        (this.uncollectedProtocolSideTokenAmounts == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideTokenAmounts == null : this.uncollectedProtocolSideTokenAmounts.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideTokenAmounts)) &&
        (this.uncollectedProtocolSideValuesUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideValuesUsd == null : this.uncollectedProtocolSideValuesUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideValuesUsd)) &&
        (this.uncollectedSupplySideTokenAmounts == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideTokenAmounts == null : this.uncollectedSupplySideTokenAmounts.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideTokenAmounts)) &&
        (this.uncollectedSupplySideValuesUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideValuesUsd == null : this.uncollectedSupplySideValuesUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideValuesUsd)) &&
        (this.cumulativeSupplySideRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSupplySideRevenueUsd == null : this.cumulativeSupplySideRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSupplySideRevenueUsd)) &&
        (this.dailySupplySideRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySupplySideRevenueUsd == null : this.dailySupplySideRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySupplySideRevenueUsd)) &&
        (this.cumulativeProtocolSideRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeProtocolSideRevenueUsd == null : this.cumulativeProtocolSideRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeProtocolSideRevenueUsd)) &&
        (this.dailyProtocolSideRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyProtocolSideRevenueUsd == null : this.dailyProtocolSideRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyProtocolSideRevenueUsd)) &&
        (this.cumulativeTotalRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeTotalRevenueUsd == null : this.cumulativeTotalRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeTotalRevenueUsd)) &&
        (this.dailyTotalRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyTotalRevenueUsd == null : this.dailyTotalRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyTotalRevenueUsd)) &&
        (this.cumulativeVolumeUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeUsd == null : this.cumulativeVolumeUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeUsd)) &&
        (this.dailyVolumeUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeUsd == null : this.dailyVolumeUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeUsd)) &&
        (this.cumulativeVolumeByTokenAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenAmount == null : this.cumulativeVolumeByTokenAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenAmount)) &&
        (this.dailyVolumeByTokenAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenAmount == null : this.dailyVolumeByTokenAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenAmount)) &&
        (this.cumulativeVolumeByTokenUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenUsd == null : this.cumulativeVolumeByTokenUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenUsd)) &&
        (this.dailyVolumeByTokenUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenUsd == null : this.dailyVolumeByTokenUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenUsd)) &&
        (this.inputTokenBalances == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalances == null : this.inputTokenBalances.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalances)) &&
        (this.inputTokenBalancesUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalancesUsd == null : this.inputTokenBalancesUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalancesUsd)) &&
        (this.inputTokenWeights == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenWeights == null : this.inputTokenWeights.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenWeights)) &&
        (this.stakedOutputTokenAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.stakedOutputTokenAmount == null : this.stakedOutputTokenAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.stakedOutputTokenAmount)) &&
        (this.rewardTokenEmissionsAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsAmount == null : this.rewardTokenEmissionsAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsAmount)) &&
        (this.rewardTokenEmissionsUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsUsd == null : this.rewardTokenEmissionsUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsUsd)) &&
        (this.cumulativeDepositCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeDepositCount == null : this.cumulativeDepositCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeDepositCount)) &&
        (this.dailyDepositCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyDepositCount == null : this.dailyDepositCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyDepositCount)) &&
        (this.cumulativeWithdrawCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeWithdrawCount == null : this.cumulativeWithdrawCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeWithdrawCount)) &&
        (this.dailyWithdrawCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyWithdrawCount == null : this.dailyWithdrawCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyWithdrawCount)) &&
        (this.cumulativeSwapCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSwapCount == null : this.cumulativeSwapCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSwapCount)) &&
        (this.dailySwapCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySwapCount == null : this.dailySwapCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySwapCount)) &&
        (this.positionCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.positionCount == null : this.positionCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.positionCount)) &&
        (this.openPositionCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.openPositionCount == null : this.openPositionCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.openPositionCount)) &&
        (this.closedPositionCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.closedPositionCount == null : this.closedPositionCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.closedPositionCount)) &&
        (this.timestamp == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.timestamp == null : this.timestamp.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.timestamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.block == null ? 0: this.block.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.day == null ? 0: this.day.hashCode());
    result = 31 * result + (this.protocol == null ? 0: this.protocol.hashCode());
    result = 31 * result + (this.pool == null ? 0: this.pool.hashCode());
    result = 31 * result + (this.tick == null ? 0: this.tick.hashCode());
    result = 31 * result + (this.totalValueLockedUsd == null ? 0: this.totalValueLockedUsd.hashCode());
    result = 31 * result + (this.totalLiquidity == null ? 0: this.totalLiquidity.hashCode());
    result = 31 * result + (this.totalLiquidityUsd == null ? 0: this.totalLiquidityUsd.hashCode());
    result = 31 * result + (this.activeLiquidity == null ? 0: this.activeLiquidity.hashCode());
    result = 31 * result + (this.activeLiquidityUsd == null ? 0: this.activeLiquidityUsd.hashCode());
    result = 31 * result + (this.uncollectedProtocolSideTokenAmounts == null ? 0: this.uncollectedProtocolSideTokenAmounts.hashCode());
    result = 31 * result + (this.uncollectedProtocolSideValuesUsd == null ? 0: this.uncollectedProtocolSideValuesUsd.hashCode());
    result = 31 * result + (this.uncollectedSupplySideTokenAmounts == null ? 0: this.uncollectedSupplySideTokenAmounts.hashCode());
    result = 31 * result + (this.uncollectedSupplySideValuesUsd == null ? 0: this.uncollectedSupplySideValuesUsd.hashCode());
    result = 31 * result + (this.cumulativeSupplySideRevenueUsd == null ? 0: this.cumulativeSupplySideRevenueUsd.hashCode());
    result = 31 * result + (this.dailySupplySideRevenueUsd == null ? 0: this.dailySupplySideRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeProtocolSideRevenueUsd == null ? 0: this.cumulativeProtocolSideRevenueUsd.hashCode());
    result = 31 * result + (this.dailyProtocolSideRevenueUsd == null ? 0: this.dailyProtocolSideRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeTotalRevenueUsd == null ? 0: this.cumulativeTotalRevenueUsd.hashCode());
    result = 31 * result + (this.dailyTotalRevenueUsd == null ? 0: this.dailyTotalRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeVolumeUsd == null ? 0: this.cumulativeVolumeUsd.hashCode());
    result = 31 * result + (this.dailyVolumeUsd == null ? 0: this.dailyVolumeUsd.hashCode());
    result = 31 * result + (this.cumulativeVolumeByTokenAmount == null ? 0: this.cumulativeVolumeByTokenAmount.hashCode());
    result = 31 * result + (this.dailyVolumeByTokenAmount == null ? 0: this.dailyVolumeByTokenAmount.hashCode());
    result = 31 * result + (this.cumulativeVolumeByTokenUsd == null ? 0: this.cumulativeVolumeByTokenUsd.hashCode());
    result = 31 * result + (this.dailyVolumeByTokenUsd == null ? 0: this.dailyVolumeByTokenUsd.hashCode());
    result = 31 * result + (this.inputTokenBalances == null ? 0: this.inputTokenBalances.hashCode());
    result = 31 * result + (this.inputTokenBalancesUsd == null ? 0: this.inputTokenBalancesUsd.hashCode());
    result = 31 * result + (this.inputTokenWeights == null ? 0: this.inputTokenWeights.hashCode());
    result = 31 * result + (this.stakedOutputTokenAmount == null ? 0: this.stakedOutputTokenAmount.hashCode());
    result = 31 * result + (this.rewardTokenEmissionsAmount == null ? 0: this.rewardTokenEmissionsAmount.hashCode());
    result = 31 * result + (this.rewardTokenEmissionsUsd == null ? 0: this.rewardTokenEmissionsUsd.hashCode());
    result = 31 * result + (this.cumulativeDepositCount == null ? 0: this.cumulativeDepositCount.hashCode());
    result = 31 * result + (this.dailyDepositCount == null ? 0: this.dailyDepositCount.hashCode());
    result = 31 * result + (this.cumulativeWithdrawCount == null ? 0: this.cumulativeWithdrawCount.hashCode());
    result = 31 * result + (this.dailyWithdrawCount == null ? 0: this.dailyWithdrawCount.hashCode());
    result = 31 * result + (this.cumulativeSwapCount == null ? 0: this.cumulativeSwapCount.hashCode());
    result = 31 * result + (this.dailySwapCount == null ? 0: this.dailySwapCount.hashCode());
    result = 31 * result + (this.positionCount == null ? 0: this.positionCount.hashCode());
    result = 31 * result + (this.openPositionCount == null ? 0: this.openPositionCount.hashCode());
    result = 31 * result + (this.closedPositionCount == null ? 0: this.closedPositionCount.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  block: ").append(block).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  day: ").append(day).append("\n");
    sb.append("  protocol: ").append(protocol).append("\n");
    sb.append("  pool: ").append(pool).append("\n");
    sb.append("  tick: ").append(tick).append("\n");
    sb.append("  totalValueLockedUsd: ").append(totalValueLockedUsd).append("\n");
    sb.append("  totalLiquidity: ").append(totalLiquidity).append("\n");
    sb.append("  totalLiquidityUsd: ").append(totalLiquidityUsd).append("\n");
    sb.append("  activeLiquidity: ").append(activeLiquidity).append("\n");
    sb.append("  activeLiquidityUsd: ").append(activeLiquidityUsd).append("\n");
    sb.append("  uncollectedProtocolSideTokenAmounts: ").append(uncollectedProtocolSideTokenAmounts).append("\n");
    sb.append("  uncollectedProtocolSideValuesUsd: ").append(uncollectedProtocolSideValuesUsd).append("\n");
    sb.append("  uncollectedSupplySideTokenAmounts: ").append(uncollectedSupplySideTokenAmounts).append("\n");
    sb.append("  uncollectedSupplySideValuesUsd: ").append(uncollectedSupplySideValuesUsd).append("\n");
    sb.append("  cumulativeSupplySideRevenueUsd: ").append(cumulativeSupplySideRevenueUsd).append("\n");
    sb.append("  dailySupplySideRevenueUsd: ").append(dailySupplySideRevenueUsd).append("\n");
    sb.append("  cumulativeProtocolSideRevenueUsd: ").append(cumulativeProtocolSideRevenueUsd).append("\n");
    sb.append("  dailyProtocolSideRevenueUsd: ").append(dailyProtocolSideRevenueUsd).append("\n");
    sb.append("  cumulativeTotalRevenueUsd: ").append(cumulativeTotalRevenueUsd).append("\n");
    sb.append("  dailyTotalRevenueUsd: ").append(dailyTotalRevenueUsd).append("\n");
    sb.append("  cumulativeVolumeUsd: ").append(cumulativeVolumeUsd).append("\n");
    sb.append("  dailyVolumeUsd: ").append(dailyVolumeUsd).append("\n");
    sb.append("  cumulativeVolumeByTokenAmount: ").append(cumulativeVolumeByTokenAmount).append("\n");
    sb.append("  dailyVolumeByTokenAmount: ").append(dailyVolumeByTokenAmount).append("\n");
    sb.append("  cumulativeVolumeByTokenUsd: ").append(cumulativeVolumeByTokenUsd).append("\n");
    sb.append("  dailyVolumeByTokenUsd: ").append(dailyVolumeByTokenUsd).append("\n");
    sb.append("  inputTokenBalances: ").append(inputTokenBalances).append("\n");
    sb.append("  inputTokenBalancesUsd: ").append(inputTokenBalancesUsd).append("\n");
    sb.append("  inputTokenWeights: ").append(inputTokenWeights).append("\n");
    sb.append("  stakedOutputTokenAmount: ").append(stakedOutputTokenAmount).append("\n");
    sb.append("  rewardTokenEmissionsAmount: ").append(rewardTokenEmissionsAmount).append("\n");
    sb.append("  rewardTokenEmissionsUsd: ").append(rewardTokenEmissionsUsd).append("\n");
    sb.append("  cumulativeDepositCount: ").append(cumulativeDepositCount).append("\n");
    sb.append("  dailyDepositCount: ").append(dailyDepositCount).append("\n");
    sb.append("  cumulativeWithdrawCount: ").append(cumulativeWithdrawCount).append("\n");
    sb.append("  dailyWithdrawCount: ").append(dailyWithdrawCount).append("\n");
    sb.append("  cumulativeSwapCount: ").append(cumulativeSwapCount).append("\n");
    sb.append("  dailySwapCount: ").append(dailySwapCount).append("\n");
    sb.append("  positionCount: ").append(positionCount).append("\n");
    sb.append("  openPositionCount: ").append(openPositionCount).append("\n");
    sb.append("  closedPositionCount: ").append(closedPositionCount).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
