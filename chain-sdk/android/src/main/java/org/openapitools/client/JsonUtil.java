/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonParseException;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Date;
import org.openapitools.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
    gsonBuilder.registerTypeAdapter(Date.class, new JsonDeserializer<Date>() {
      public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {
        return new Date(json.getAsJsonPrimitive().getAsLong());
      }
    });
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CRYPTOPUNKSBidDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSBidDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSCollectionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSCollectionDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSCollectionDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSCollectionDailySnapshotDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSDataSourcesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSDataSourcesDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSItemDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSMarketPlaceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSMarketPlaceDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSMarketplaceDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSMarketplaceDailySnapshotDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSTradeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSTradeDTO>>(){}.getType();
    }
    
    if ("CRYPTOPUNKSUserDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CRYPTOPUNKSUserDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMAccountDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMActiveAccountDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMDepositDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMDexAmmProtocolDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMFinancialsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityGaugeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMLiquidityGaugeDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMLiquidityPoolDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMLiquidityPoolFeeDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLpTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMLpTokenDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMRewardTokenDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMSwapDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMTokenDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMUsageMetricsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<CURVEFINANCEETHEREUMWithdrawDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMAccountDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMActiveAccountDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMDepositDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMDexAmmProtocolDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMFinancialsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMLiquidityPoolAmountDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMLiquidityPoolDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMLiquidityPoolFeeDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMPositionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMPositionDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMPositionSnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMPositionSnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMRewardTokenDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMSwapDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTickDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMTickDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTickDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMTickDailySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTickHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMTickHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMTokenDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMTokenWhiteListDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTokenWhiteListSymbolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMTokenWhiteListSymbolDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<PANCAKESWAPV3ETHEREUMWithdrawDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMAccountDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMActiveAccountDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMDepositDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMDexAmmProtocolDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMFinancialsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMLiquidityPoolAmountDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMLiquidityPoolDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMLiquidityPoolFeeDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMPositionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMPositionDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMPositionSnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMPositionSnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMRewardTokenDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMSwapDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTickDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMTickDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTickDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMTickDailySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTickHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMTickHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMTokenDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMTokenWhiteListDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTokenWhiteListSymbolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMTokenWhiteListSymbolDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<SUSHISWAPV3ETHEREUMWithdrawDTO>>(){}.getType();
    }
    
    if ("TransactionsETradeAggressiveSide".equalsIgnoreCase(className)) {
      return new TypeToken<List<TransactionsETradeAggressiveSide>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMAccountDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMActiveAccountDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMDepositDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMDexAmmProtocolDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMLiquidityPoolAmountDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMLiquidityPoolDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMLiquidityPoolFeeDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMLiquidityPoolHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefAddressToPidDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMMasterChefAddressToPidDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMMasterChefDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefRewarderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMMasterChefRewarderDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefStakingPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMMasterChefStakingPoolDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMRewardTokenDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMRewarderProbeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMRewarderProbeDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMSwapDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMTokenDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMTokenWhiteListDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMTransferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMTransferDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMUsageMetricsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV2ETHEREUMWithdrawDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMAccountDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMActiveAccountDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMDepositDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMDexAmmProtocolDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMFinancialsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMLiquidityPoolAmountDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMLiquidityPoolDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMLiquidityPoolFeeDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMPositionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMPositionDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMPositionSnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMPositionSnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMRewardTokenDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMSwapDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTickDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMTickDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTickDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMTickDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTickHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMTickHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMTokenDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMTokenWhiteListDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTokenWhiteListSymbolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMTokenWhiteListSymbolDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<List<UNISWAPV3ETHEREUMWithdrawDTO>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("CRYPTOPUNKSBidDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSBidDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSCollectionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSCollectionDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSCollectionDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSCollectionDailySnapshotDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSDataSourcesDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSDataSourcesDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSItemDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSItemDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSMarketPlaceDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSMarketPlaceDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSMarketplaceDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSMarketplaceDailySnapshotDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSTradeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSTradeDTO>(){}.getType();
    }
    
    if ("CRYPTOPUNKSUserDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CRYPTOPUNKSUserDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMAccountDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMActiveAccountDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMDepositDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMDexAmmProtocolDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMFinancialsDailySnapshotDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityGaugeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMLiquidityGaugeDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMLiquidityPoolDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMLiquidityPoolDailySnapshotDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMLiquidityPoolFeeDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMLpTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMLpTokenDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMRewardTokenDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMSwapDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMTokenDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMUsageMetricsDailySnapshotDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMUsageMetricsHourlySnapshotDTO>(){}.getType();
    }
    
    if ("CURVEFINANCEETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<CURVEFINANCEETHEREUMWithdrawDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMAccountDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMActiveAccountDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMDepositDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMDexAmmProtocolDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMFinancialsDailySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMLiquidityPoolAmountDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMLiquidityPoolDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMLiquidityPoolFeeDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMPositionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMPositionDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMPositionSnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMPositionSnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMRewardTokenDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMSwapDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTickDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMTickDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTickDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMTickDailySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTickHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMTickHourlySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMTokenDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMTokenWhiteListDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMTokenWhiteListSymbolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMTokenWhiteListSymbolDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>(){}.getType();
    }
    
    if ("PANCAKESWAPV3ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<PANCAKESWAPV3ETHEREUMWithdrawDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMAccountDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMActiveAccountDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMDepositDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMDexAmmProtocolDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMFinancialsDailySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMLiquidityPoolAmountDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMLiquidityPoolDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMLiquidityPoolFeeDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMPositionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMPositionDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMPositionSnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMPositionSnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMRewardTokenDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMSwapDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTickDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMTickDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTickDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMTickDailySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTickHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMTickHourlySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMTokenDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMTokenWhiteListDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMTokenWhiteListSymbolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMTokenWhiteListSymbolDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>(){}.getType();
    }
    
    if ("SUSHISWAPV3ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<SUSHISWAPV3ETHEREUMWithdrawDTO>(){}.getType();
    }
    
    if ("TransactionsETradeAggressiveSide".equalsIgnoreCase(className)) {
      return new TypeToken<TransactionsETradeAggressiveSide>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMAccountDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMActiveAccountDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMDepositDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMDexAmmProtocolDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMFinancialsDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMLiquidityPoolAmountDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMLiquidityPoolDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMLiquidityPoolFeeDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMLiquidityPoolHourlySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefAddressToPidDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMMasterChefAddressToPidDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMMasterChefDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefRewarderDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMMasterChefRewarderDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMMasterChefStakingPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMMasterChefStakingPoolDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMRewardTokenDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMRewarderProbeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMRewarderProbeDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMSwapDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMTokenDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMTokenWhiteListDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMTransferDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMTransferDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMUsageMetricsDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMUsageMetricsHourlySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV2ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV2ETHEREUMWithdrawDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMAccountDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMActiveAccountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMActiveAccountDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMDepositDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMDepositDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMDexAmmProtocolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMDexAmmProtocolDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMFinancialsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMFinancialsDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolAmountDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMLiquidityPoolAmountDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMLiquidityPoolDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolFeeDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMLiquidityPoolFeeDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMPositionDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMPositionDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMPositionSnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMPositionSnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMRewardTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMRewardTokenDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMSwapDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMSwapDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTickDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMTickDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTickDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMTickDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTickHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMTickHourlySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTokenDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMTokenDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTokenWhiteListDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMTokenWhiteListDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMTokenWhiteListSymbolDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMTokenWhiteListSymbolDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMUsageMetricsDailySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMUsageMetricsHourlySnapshotDTO>(){}.getType();
    }
    
    if ("UNISWAPV3ETHEREUMWithdrawDTO".equalsIgnoreCase(className)) {
      return new TypeToken<UNISWAPV3ETHEREUMWithdrawDTO>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
