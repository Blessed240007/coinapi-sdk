/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class UNISWAPV2ETHEREUMMasterChefStakingPoolDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("pool_address")
  private String poolAddress = null;
  @SerializedName("pool_alloc_point")
  private String poolAllocPoint = null;
  @SerializedName("multiplier")
  private String multiplier = null;
  @SerializedName("last_reward_block")
  private String lastRewardBlock = null;
  @SerializedName("rewarder")
  private String rewarder = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   * (masterchef type) - (pid referenced in the masterchef contract)
   **/
  @ApiModelProperty(value = "(masterchef type) - (pid referenced in the masterchef contract)")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Staking pool to which this rewarder is associated
   **/
  @ApiModelProperty(value = "Staking pool to which this rewarder is associated")
  public String getPoolAddress() {
    return poolAddress;
  }
  public void setPoolAddress(String poolAddress) {
    this.poolAddress = poolAddress;
  }

  /**
   * Allocation point of this MasterChef Staking pool
   **/
  @ApiModelProperty(value = "Allocation point of this MasterChef Staking pool")
  public String getPoolAllocPoint() {
    return poolAllocPoint;
  }
  public void setPoolAllocPoint(String poolAllocPoint) {
    this.poolAllocPoint = poolAllocPoint;
  }

  /**
   * Reward Multiplier for a given staking pool
   **/
  @ApiModelProperty(value = "Reward Multiplier for a given staking pool")
  public String getMultiplier() {
    return multiplier;
  }
  public void setMultiplier(String multiplier) {
    this.multiplier = multiplier;
  }

  /**
   * Last block where rewards were given out
   **/
  @ApiModelProperty(value = "Last block where rewards were given out")
  public String getLastRewardBlock() {
    return lastRewardBlock;
  }
  public void setLastRewardBlock(String lastRewardBlock) {
    this.lastRewardBlock = lastRewardBlock;
  }

  /**
   * Optional address of a bonus rewarder, to give additional tokens on top of masterchefs
   **/
  @ApiModelProperty(value = "Optional address of a bonus rewarder, to give additional tokens on top of masterchefs")
  public String getRewarder() {
    return rewarder;
  }
  public void setRewarder(String rewarder) {
    this.rewarder = rewarder;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV2ETHEREUMMasterChefStakingPoolDTO uNISWAPV2ETHEREUMMasterChefStakingPoolDTO = (UNISWAPV2ETHEREUMMasterChefStakingPoolDTO) o;
    return (this.entryTime == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.entryTime == null : this.entryTime.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.entryTime)) &&
        (this.recvTime == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.recvTime == null : this.recvTime.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.recvTime)) &&
        (this.blockNumber == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.blockNumber == null : this.blockNumber.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.blockNumber)) &&
        (this.blockRange == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.blockRange == null : this.blockRange.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.blockRange)) &&
        (this.id == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.id == null : this.id.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.id)) &&
        (this.poolAddress == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.poolAddress == null : this.poolAddress.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.poolAddress)) &&
        (this.poolAllocPoint == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.poolAllocPoint == null : this.poolAllocPoint.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.poolAllocPoint)) &&
        (this.multiplier == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.multiplier == null : this.multiplier.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.multiplier)) &&
        (this.lastRewardBlock == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.lastRewardBlock == null : this.lastRewardBlock.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.lastRewardBlock)) &&
        (this.rewarder == null ? uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.rewarder == null : this.rewarder.equals(uNISWAPV2ETHEREUMMasterChefStakingPoolDTO.rewarder));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.poolAddress == null ? 0: this.poolAddress.hashCode());
    result = 31 * result + (this.poolAllocPoint == null ? 0: this.poolAllocPoint.hashCode());
    result = 31 * result + (this.multiplier == null ? 0: this.multiplier.hashCode());
    result = 31 * result + (this.lastRewardBlock == null ? 0: this.lastRewardBlock.hashCode());
    result = 31 * result + (this.rewarder == null ? 0: this.rewarder.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV2ETHEREUMMasterChefStakingPoolDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  poolAddress: ").append(poolAddress).append("\n");
    sb.append("  poolAllocPoint: ").append(poolAllocPoint).append("\n");
    sb.append("  multiplier: ").append(multiplier).append("\n");
    sb.append("  lastRewardBlock: ").append(lastRewardBlock).append("\n");
    sb.append("  rewarder: ").append(rewarder).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
