/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * Pool-level metadata.
 **/
@ApiModel(description = "Pool-level metadata.")
public class PANCAKESWAPV3ETHEREUMLiquidityPoolDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("vid")
  private Long vid = null;
  @SerializedName("block_range")
  private String blockRange = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("protocol")
  private String protocol = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("symbol")
  private String symbol = null;
  @SerializedName("liquidity_token")
  private String liquidityToken = null;
  @SerializedName("input_tokens")
  private List<String> inputTokens = null;
  @SerializedName("reward_tokens")
  private List<String> rewardTokens = null;
  @SerializedName("fees")
  private List<String> fees = null;
  @SerializedName("is_single_sided")
  private Boolean isSingleSided = null;
  @SerializedName("created_timestamp")
  private String createdTimestamp = null;
  @SerializedName("created_block_number")
  private String createdBlockNumber = null;
  @SerializedName("tick")
  private String tick = null;
  @SerializedName("total_value_locked_usd")
  private String totalValueLockedUsd = null;
  @SerializedName("total_liquidity")
  private String totalLiquidity = null;
  @SerializedName("total_liquidity_usd")
  private String totalLiquidityUsd = null;
  @SerializedName("active_liquidity")
  private String activeLiquidity = null;
  @SerializedName("active_liquidity_usd")
  private String activeLiquidityUsd = null;
  @SerializedName("uncollected_protocol_side_token_amounts")
  private List<String> uncollectedProtocolSideTokenAmounts = null;
  @SerializedName("uncollected_protocol_side_values_usd")
  private List<String> uncollectedProtocolSideValuesUsd = null;
  @SerializedName("uncollected_supply_side_token_amounts")
  private List<String> uncollectedSupplySideTokenAmounts = null;
  @SerializedName("uncollected_supply_side_values_usd")
  private List<String> uncollectedSupplySideValuesUsd = null;
  @SerializedName("cumulative_supply_side_revenue_usd")
  private String cumulativeSupplySideRevenueUsd = null;
  @SerializedName("cumulative_protocol_side_revenue_usd")
  private String cumulativeProtocolSideRevenueUsd = null;
  @SerializedName("cumulative_total_revenue_usd")
  private String cumulativeTotalRevenueUsd = null;
  @SerializedName("cumulative_volume_by_token_amount")
  private List<String> cumulativeVolumeByTokenAmount = null;
  @SerializedName("cumulative_volume_by_token_usd")
  private List<String> cumulativeVolumeByTokenUsd = null;
  @SerializedName("cumulative_volume_usd")
  private String cumulativeVolumeUsd = null;
  @SerializedName("input_token_balances")
  private List<String> inputTokenBalances = null;
  @SerializedName("input_token_balances_usd")
  private List<String> inputTokenBalancesUsd = null;
  @SerializedName("input_token_weights")
  private List<String> inputTokenWeights = null;
  @SerializedName("staked_output_token_amount")
  private String stakedOutputTokenAmount = null;
  @SerializedName("reward_token_emissions_amount")
  private List<String> rewardTokenEmissionsAmount = null;
  @SerializedName("reward_token_emissions_usd")
  private List<String> rewardTokenEmissionsUsd = null;
  @SerializedName("cumulative_deposit_count")
  private Integer cumulativeDepositCount = null;
  @SerializedName("cumulative_withdraw_count")
  private Integer cumulativeWithdrawCount = null;
  @SerializedName("cumulative_swap_count")
  private Integer cumulativeSwapCount = null;
  @SerializedName("position_count")
  private Integer positionCount = null;
  @SerializedName("open_position_count")
  private Integer openPositionCount = null;
  @SerializedName("closed_position_count")
  private Integer closedPositionCount = null;
  @SerializedName("last_snapshot_day_id")
  private Integer lastSnapshotDayId = null;
  @SerializedName("last_snapshot_hour_id")
  private Integer lastSnapshotHourId = null;
  @SerializedName("last_update_timestamp")
  private String lastUpdateTimestamp = null;
  @SerializedName("last_update_block_number")
  private String lastUpdateBlockNumber = null;
  @SerializedName("evaluated_ask")
  private Double evaluatedAsk = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * .
   **/
  @ApiModelProperty(value = ".")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }

  /**
   * Block range of the liquidity pool.
   **/
  @ApiModelProperty(value = "Block range of the liquidity pool.")
  public String getBlockRange() {
    return blockRange;
  }
  public void setBlockRange(String blockRange) {
    this.blockRange = blockRange;
  }

  /**
   * Smart contract address of the pool.
   **/
  @ApiModelProperty(value = "Smart contract address of the pool.")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Protocol this pool belongs to.
   **/
  @ApiModelProperty(value = "Protocol this pool belongs to.")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  /**
   * Name of liquidity pool (e.g. Curve.fi DAI/USDC/USDT).
   **/
  @ApiModelProperty(value = "Name of liquidity pool (e.g. Curve.fi DAI/USDC/USDT).")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Symbol of liquidity pool (e.g. 3CRV).
   **/
  @ApiModelProperty(value = "Symbol of liquidity pool (e.g. 3CRV).")
  public String getSymbol() {
    return symbol;
  }
  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  /**
   * Token that is to represent ownership of liquidity.
   **/
  @ApiModelProperty(value = "Token that is to represent ownership of liquidity.")
  public String getLiquidityToken() {
    return liquidityToken;
  }
  public void setLiquidityToken(String liquidityToken) {
    this.liquidityToken = liquidityToken;
  }

  /**
   * Tokens that need to be deposited to take a position in protocol. e.g. WETH and USDC to deposit into the WETH-USDC pool. Array to account for multi-asset pools like Curve and Balancer.
   **/
  @ApiModelProperty(value = "Tokens that need to be deposited to take a position in protocol. e.g. WETH and USDC to deposit into the WETH-USDC pool. Array to account for multi-asset pools like Curve and Balancer.")
  public List<String> getInputTokens() {
    return inputTokens;
  }
  public void setInputTokens(List<String> inputTokens) {
    this.inputTokens = inputTokens;
  }

  /**
   * Additional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon.
   **/
  @ApiModelProperty(value = "Additional tokens that are given as reward for position in a protocol, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon, usually in liquidity mining programs. e.g. SUSHI in the Onsen program, MATIC for Aave Polygon.")
  public List<String> getRewardTokens() {
    return rewardTokens;
  }
  public void setRewardTokens(List<String> rewardTokens) {
    this.rewardTokens = rewardTokens;
  }

  /**
   * Fees per trade incurred to the user. Should include all fees that apply to a pool (e.g. Curve has a trading fee AND an admin fee, which is a portion of the trading fee. Uniswap only has a trading fee and no protocol fee.).
   **/
  @ApiModelProperty(value = "Fees per trade incurred to the user. Should include all fees that apply to a pool (e.g. Curve has a trading fee AND an admin fee, which is a portion of the trading fee. Uniswap only has a trading fee and no protocol fee.).")
  public List<String> getFees() {
    return fees;
  }
  public void setFees(List<String> fees) {
    this.fees = fees;
  }

  /**
   * Specifies whether this pool is single-sided (e.g. Bancor, Platypus's Alternative Pool). The specifics of the implementation depends on the protocol.
   **/
  @ApiModelProperty(value = "Specifies whether this pool is single-sided (e.g. Bancor, Platypus's Alternative Pool). The specifics of the implementation depends on the protocol.")
  public Boolean getIsSingleSided() {
    return isSingleSided;
  }
  public void setIsSingleSided(Boolean isSingleSided) {
    this.isSingleSided = isSingleSided;
  }

  /**
   * Timestamp when the liquidity pool was created.
   **/
  @ApiModelProperty(value = "Timestamp when the liquidity pool was created.")
  public String getCreatedTimestamp() {
    return createdTimestamp;
  }
  public void setCreatedTimestamp(String createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }

  /**
   * Block number when the liquidity pool was created.
   **/
  @ApiModelProperty(value = "Block number when the liquidity pool was created.")
  public String getCreatedBlockNumber() {
    return createdBlockNumber;
  }
  public void setCreatedBlockNumber(String createdBlockNumber) {
    this.createdBlockNumber = createdBlockNumber;
  }

  /**
   * Current tick representing the price of token0/token1.
   **/
  @ApiModelProperty(value = "Current tick representing the price of token0/token1.")
  public String getTick() {
    return tick;
  }
  public void setTick(String tick) {
    this.tick = tick;
  }

  /**
   * Current TVL (Total Value Locked) of this pool in USD.
   **/
  @ApiModelProperty(value = "Current TVL (Total Value Locked) of this pool in USD.")
  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }
  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }

  /**
   * Sum of all active and non-active liquidity for this pool.
   **/
  @ApiModelProperty(value = "Sum of all active and non-active liquidity for this pool.")
  public String getTotalLiquidity() {
    return totalLiquidity;
  }
  public void setTotalLiquidity(String totalLiquidity) {
    this.totalLiquidity = totalLiquidity;
  }

  /**
   * Sum of all active and non-active liquidity in USD for this pool.
   **/
  @ApiModelProperty(value = "Sum of all active and non-active liquidity in USD for this pool.")
  public String getTotalLiquidityUsd() {
    return totalLiquidityUsd;
  }
  public void setTotalLiquidityUsd(String totalLiquidityUsd) {
    this.totalLiquidityUsd = totalLiquidityUsd;
  }

  /**
   * All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.
   **/
  @ApiModelProperty(value = "All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.")
  public String getActiveLiquidity() {
    return activeLiquidity;
  }
  public void setActiveLiquidity(String activeLiquidity) {
    this.activeLiquidity = activeLiquidity;
  }

  /**
   * All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.
   **/
  @ApiModelProperty(value = "All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.")
  public String getActiveLiquidityUsd() {
    return activeLiquidityUsd;
  }
  public void setActiveLiquidityUsd(String activeLiquidityUsd) {
    this.activeLiquidityUsd = activeLiquidityUsd;
  }

  /**
   * All protocol-side value locked in token amounts that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All protocol-side value locked in token amounts that remains uncollected and unused in the pool.")
  public List<String> getUncollectedProtocolSideTokenAmounts() {
    return uncollectedProtocolSideTokenAmounts;
  }
  public void setUncollectedProtocolSideTokenAmounts(List<String> uncollectedProtocolSideTokenAmounts) {
    this.uncollectedProtocolSideTokenAmounts = uncollectedProtocolSideTokenAmounts;
  }

  /**
   * All protocol-side value locking in USD that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All protocol-side value locking in USD that remains uncollected and unused in the pool.")
  public List<String> getUncollectedProtocolSideValuesUsd() {
    return uncollectedProtocolSideValuesUsd;
  }
  public void setUncollectedProtocolSideValuesUsd(List<String> uncollectedProtocolSideValuesUsd) {
    this.uncollectedProtocolSideValuesUsd = uncollectedProtocolSideValuesUsd;
  }

  /**
   * All supply-side value locked in token amounts that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All supply-side value locked in token amounts that remains uncollected and unused in the pool.")
  public List<String> getUncollectedSupplySideTokenAmounts() {
    return uncollectedSupplySideTokenAmounts;
  }
  public void setUncollectedSupplySideTokenAmounts(List<String> uncollectedSupplySideTokenAmounts) {
    this.uncollectedSupplySideTokenAmounts = uncollectedSupplySideTokenAmounts;
  }

  /**
   * All supply-side value locked in USD that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All supply-side value locked in USD that remains uncollected and unused in the pool.")
  public List<String> getUncollectedSupplySideValuesUsd() {
    return uncollectedSupplySideValuesUsd;
  }
  public void setUncollectedSupplySideValuesUsd(List<String> uncollectedSupplySideValuesUsd) {
    this.uncollectedSupplySideValuesUsd = uncollectedSupplySideValuesUsd;
  }

  /**
   * All revenue generated by the liquidity pool, accrued to the supply side.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool, accrued to the supply side.")
  public String getCumulativeSupplySideRevenueUsd() {
    return cumulativeSupplySideRevenueUsd;
  }
  public void setCumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
  }

  /**
   * All revenue generated by the liquidity pool, accrued to the protocol.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool, accrued to the protocol.")
  public String getCumulativeProtocolSideRevenueUsd() {
    return cumulativeProtocolSideRevenueUsd;
  }
  public void setCumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
  }

  /**
   *  All revenue generated by the liquidity pool.
   **/
  @ApiModelProperty(value = " All revenue generated by the liquidity pool.")
  public String getCumulativeTotalRevenueUsd() {
    return cumulativeTotalRevenueUsd;
  }
  public void setCumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
  }

  /**
   * All trade volume occurred for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume occurred for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getCumulativeVolumeByTokenAmount() {
    return cumulativeVolumeByTokenAmount;
  }
  public void setCumulativeVolumeByTokenAmount(List<String> cumulativeVolumeByTokenAmount) {
    this.cumulativeVolumeByTokenAmount = cumulativeVolumeByTokenAmount;
  }

  /**
   * All trade volume occurred for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume occurred for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getCumulativeVolumeByTokenUsd() {
    return cumulativeVolumeByTokenUsd;
  }
  public void setCumulativeVolumeByTokenUsd(List<String> cumulativeVolumeByTokenUsd) {
    this.cumulativeVolumeByTokenUsd = cumulativeVolumeByTokenUsd;
  }

  /**
   * All trade volume occurred for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume occurred for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.")
  public String getCumulativeVolumeUsd() {
    return cumulativeVolumeUsd;
  }
  public void setCumulativeVolumeUsd(String cumulativeVolumeUsd) {
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
  }

  /**
   * Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getInputTokenBalances() {
    return inputTokenBalances;
  }
  public void setInputTokenBalances(List<String> inputTokenBalances) {
    this.inputTokenBalances = inputTokenBalances;
  }

  /**
   * Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getInputTokenBalancesUsd() {
    return inputTokenBalancesUsd;
  }
  public void setInputTokenBalancesUsd(List<String> inputTokenBalancesUsd) {
    this.inputTokenBalancesUsd = inputTokenBalancesUsd;
  }

  /**
   * Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.
   **/
  @ApiModelProperty(value = "Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.")
  public List<String> getInputTokenWeights() {
    return inputTokenWeights;
  }
  public void setInputTokenWeights(List<String> inputTokenWeights) {
    this.inputTokenWeights = inputTokenWeights;
  }

  /**
   * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
   **/
  @ApiModelProperty(value = "Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.")
  public String getStakedOutputTokenAmount() {
    return stakedOutputTokenAmount;
  }
  public void setStakedOutputTokenAmount(String stakedOutputTokenAmount) {
    this.stakedOutputTokenAmount = stakedOutputTokenAmount;
  }

  /**
   * Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
   **/
  @ApiModelProperty(value = "Per-block reward token emission as of the current block normalized to a day, in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.")
  public List<String> getRewardTokenEmissionsAmount() {
    return rewardTokenEmissionsAmount;
  }
  public void setRewardTokenEmissionsAmount(List<String> rewardTokenEmissionsAmount) {
    this.rewardTokenEmissionsAmount = rewardTokenEmissionsAmount;
  }

  /**
   * Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
   **/
  @ApiModelProperty(value = "Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.")
  public List<String> getRewardTokenEmissionsUsd() {
    return rewardTokenEmissionsUsd;
  }
  public void setRewardTokenEmissionsUsd(List<String> rewardTokenEmissionsUsd) {
    this.rewardTokenEmissionsUsd = rewardTokenEmissionsUsd;
  }

  /**
   * Total number of deposits (add liquidity).
   **/
  @ApiModelProperty(value = "Total number of deposits (add liquidity).")
  public Integer getCumulativeDepositCount() {
    return cumulativeDepositCount;
  }
  public void setCumulativeDepositCount(Integer cumulativeDepositCount) {
    this.cumulativeDepositCount = cumulativeDepositCount;
  }

  /**
   * Total number of withdrawals (remove liquidity).
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity).")
  public Integer getCumulativeWithdrawCount() {
    return cumulativeWithdrawCount;
  }
  public void setCumulativeWithdrawCount(Integer cumulativeWithdrawCount) {
    this.cumulativeWithdrawCount = cumulativeWithdrawCount;
  }

  /**
   * Total number of trades (swaps).
   **/
  @ApiModelProperty(value = "Total number of trades (swaps).")
  public Integer getCumulativeSwapCount() {
    return cumulativeSwapCount;
  }
  public void setCumulativeSwapCount(Integer cumulativeSwapCount) {
    this.cumulativeSwapCount = cumulativeSwapCount;
  }

  /**
   * Number of positions in this market.
   **/
  @ApiModelProperty(value = "Number of positions in this market.")
  public Integer getPositionCount() {
    return positionCount;
  }
  public void setPositionCount(Integer positionCount) {
    this.positionCount = positionCount;
  }

  /**
   * Number of open positions in this market.
   **/
  @ApiModelProperty(value = "Number of open positions in this market.")
  public Integer getOpenPositionCount() {
    return openPositionCount;
  }
  public void setOpenPositionCount(Integer openPositionCount) {
    this.openPositionCount = openPositionCount;
  }

  /**
   * Number of closed positions in this market.
   **/
  @ApiModelProperty(value = "Number of closed positions in this market.")
  public Integer getClosedPositionCount() {
    return closedPositionCount;
  }
  public void setClosedPositionCount(Integer closedPositionCount) {
    this.closedPositionCount = closedPositionCount;
  }

  /**
   * Day ID of the most recent daily snapshot.
   **/
  @ApiModelProperty(value = "Day ID of the most recent daily snapshot.")
  public Integer getLastSnapshotDayId() {
    return lastSnapshotDayId;
  }
  public void setLastSnapshotDayId(Integer lastSnapshotDayId) {
    this.lastSnapshotDayId = lastSnapshotDayId;
  }

  /**
   * Hour ID of the most recent hourly snapshot.
   **/
  @ApiModelProperty(value = "Hour ID of the most recent hourly snapshot.")
  public Integer getLastSnapshotHourId() {
    return lastSnapshotHourId;
  }
  public void setLastSnapshotHourId(Integer lastSnapshotHourId) {
    this.lastSnapshotHourId = lastSnapshotHourId;
  }

  /**
   * Timestamp of the last time this entity was updated.
   **/
  @ApiModelProperty(value = "Timestamp of the last time this entity was updated.")
  public String getLastUpdateTimestamp() {
    return lastUpdateTimestamp;
  }
  public void setLastUpdateTimestamp(String lastUpdateTimestamp) {
    this.lastUpdateTimestamp = lastUpdateTimestamp;
  }

  /**
   * Block number of the last time this entity was updated.
   **/
  @ApiModelProperty(value = "Block number of the last time this entity was updated.")
  public String getLastUpdateBlockNumber() {
    return lastUpdateBlockNumber;
  }
  public void setLastUpdateBlockNumber(String lastUpdateBlockNumber) {
    this.lastUpdateBlockNumber = lastUpdateBlockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Double getEvaluatedAsk() {
    return evaluatedAsk;
  }
  public void setEvaluatedAsk(Double evaluatedAsk) {
    this.evaluatedAsk = evaluatedAsk;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PANCAKESWAPV3ETHEREUMLiquidityPoolDTO pANCAKESWAPV3ETHEREUMLiquidityPoolDTO = (PANCAKESWAPV3ETHEREUMLiquidityPoolDTO) o;
    return (this.entryTime == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.entryTime == null : this.entryTime.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.entryTime)) &&
        (this.recvTime == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.recvTime == null : this.recvTime.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.recvTime)) &&
        (this.blockNumber == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.blockNumber == null : this.blockNumber.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.blockNumber)) &&
        (this.vid == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.vid == null : this.vid.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.vid)) &&
        (this.blockRange == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.blockRange == null : this.blockRange.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.blockRange)) &&
        (this.id == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.id == null : this.id.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.id)) &&
        (this.protocol == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.protocol == null : this.protocol.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.protocol)) &&
        (this.name == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.name == null : this.name.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.name)) &&
        (this.symbol == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.symbol == null : this.symbol.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.symbol)) &&
        (this.liquidityToken == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.liquidityToken == null : this.liquidityToken.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.liquidityToken)) &&
        (this.inputTokens == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokens == null : this.inputTokens.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokens)) &&
        (this.rewardTokens == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.rewardTokens == null : this.rewardTokens.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.rewardTokens)) &&
        (this.fees == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.fees == null : this.fees.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.fees)) &&
        (this.isSingleSided == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.isSingleSided == null : this.isSingleSided.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.isSingleSided)) &&
        (this.createdTimestamp == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.createdTimestamp == null : this.createdTimestamp.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.createdTimestamp)) &&
        (this.createdBlockNumber == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.createdBlockNumber == null : this.createdBlockNumber.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.createdBlockNumber)) &&
        (this.tick == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.tick == null : this.tick.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.tick)) &&
        (this.totalValueLockedUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.totalValueLockedUsd == null : this.totalValueLockedUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.totalValueLockedUsd)) &&
        (this.totalLiquidity == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.totalLiquidity == null : this.totalLiquidity.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.totalLiquidity)) &&
        (this.totalLiquidityUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.totalLiquidityUsd == null : this.totalLiquidityUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.totalLiquidityUsd)) &&
        (this.activeLiquidity == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.activeLiquidity == null : this.activeLiquidity.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.activeLiquidity)) &&
        (this.activeLiquidityUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.activeLiquidityUsd == null : this.activeLiquidityUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.activeLiquidityUsd)) &&
        (this.uncollectedProtocolSideTokenAmounts == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedProtocolSideTokenAmounts == null : this.uncollectedProtocolSideTokenAmounts.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedProtocolSideTokenAmounts)) &&
        (this.uncollectedProtocolSideValuesUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedProtocolSideValuesUsd == null : this.uncollectedProtocolSideValuesUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedProtocolSideValuesUsd)) &&
        (this.uncollectedSupplySideTokenAmounts == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedSupplySideTokenAmounts == null : this.uncollectedSupplySideTokenAmounts.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedSupplySideTokenAmounts)) &&
        (this.uncollectedSupplySideValuesUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedSupplySideValuesUsd == null : this.uncollectedSupplySideValuesUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.uncollectedSupplySideValuesUsd)) &&
        (this.cumulativeSupplySideRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeSupplySideRevenueUsd == null : this.cumulativeSupplySideRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeSupplySideRevenueUsd)) &&
        (this.cumulativeProtocolSideRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeProtocolSideRevenueUsd == null : this.cumulativeProtocolSideRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeProtocolSideRevenueUsd)) &&
        (this.cumulativeTotalRevenueUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeTotalRevenueUsd == null : this.cumulativeTotalRevenueUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeTotalRevenueUsd)) &&
        (this.cumulativeVolumeByTokenAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeVolumeByTokenAmount == null : this.cumulativeVolumeByTokenAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeVolumeByTokenAmount)) &&
        (this.cumulativeVolumeByTokenUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeVolumeByTokenUsd == null : this.cumulativeVolumeByTokenUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeVolumeByTokenUsd)) &&
        (this.cumulativeVolumeUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeVolumeUsd == null : this.cumulativeVolumeUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeVolumeUsd)) &&
        (this.inputTokenBalances == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokenBalances == null : this.inputTokenBalances.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokenBalances)) &&
        (this.inputTokenBalancesUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokenBalancesUsd == null : this.inputTokenBalancesUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokenBalancesUsd)) &&
        (this.inputTokenWeights == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokenWeights == null : this.inputTokenWeights.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.inputTokenWeights)) &&
        (this.stakedOutputTokenAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.stakedOutputTokenAmount == null : this.stakedOutputTokenAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.stakedOutputTokenAmount)) &&
        (this.rewardTokenEmissionsAmount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.rewardTokenEmissionsAmount == null : this.rewardTokenEmissionsAmount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.rewardTokenEmissionsAmount)) &&
        (this.rewardTokenEmissionsUsd == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.rewardTokenEmissionsUsd == null : this.rewardTokenEmissionsUsd.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.rewardTokenEmissionsUsd)) &&
        (this.cumulativeDepositCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeDepositCount == null : this.cumulativeDepositCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeDepositCount)) &&
        (this.cumulativeWithdrawCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeWithdrawCount == null : this.cumulativeWithdrawCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeWithdrawCount)) &&
        (this.cumulativeSwapCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeSwapCount == null : this.cumulativeSwapCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.cumulativeSwapCount)) &&
        (this.positionCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.positionCount == null : this.positionCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.positionCount)) &&
        (this.openPositionCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.openPositionCount == null : this.openPositionCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.openPositionCount)) &&
        (this.closedPositionCount == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.closedPositionCount == null : this.closedPositionCount.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.closedPositionCount)) &&
        (this.lastSnapshotDayId == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastSnapshotDayId == null : this.lastSnapshotDayId.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastSnapshotDayId)) &&
        (this.lastSnapshotHourId == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastSnapshotHourId == null : this.lastSnapshotHourId.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastSnapshotHourId)) &&
        (this.lastUpdateTimestamp == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastUpdateTimestamp == null : this.lastUpdateTimestamp.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastUpdateTimestamp)) &&
        (this.lastUpdateBlockNumber == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastUpdateBlockNumber == null : this.lastUpdateBlockNumber.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.lastUpdateBlockNumber)) &&
        (this.evaluatedAsk == null ? pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.evaluatedAsk == null : this.evaluatedAsk.equals(pANCAKESWAPV3ETHEREUMLiquidityPoolDTO.evaluatedAsk));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    result = 31 * result + (this.blockRange == null ? 0: this.blockRange.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.protocol == null ? 0: this.protocol.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.symbol == null ? 0: this.symbol.hashCode());
    result = 31 * result + (this.liquidityToken == null ? 0: this.liquidityToken.hashCode());
    result = 31 * result + (this.inputTokens == null ? 0: this.inputTokens.hashCode());
    result = 31 * result + (this.rewardTokens == null ? 0: this.rewardTokens.hashCode());
    result = 31 * result + (this.fees == null ? 0: this.fees.hashCode());
    result = 31 * result + (this.isSingleSided == null ? 0: this.isSingleSided.hashCode());
    result = 31 * result + (this.createdTimestamp == null ? 0: this.createdTimestamp.hashCode());
    result = 31 * result + (this.createdBlockNumber == null ? 0: this.createdBlockNumber.hashCode());
    result = 31 * result + (this.tick == null ? 0: this.tick.hashCode());
    result = 31 * result + (this.totalValueLockedUsd == null ? 0: this.totalValueLockedUsd.hashCode());
    result = 31 * result + (this.totalLiquidity == null ? 0: this.totalLiquidity.hashCode());
    result = 31 * result + (this.totalLiquidityUsd == null ? 0: this.totalLiquidityUsd.hashCode());
    result = 31 * result + (this.activeLiquidity == null ? 0: this.activeLiquidity.hashCode());
    result = 31 * result + (this.activeLiquidityUsd == null ? 0: this.activeLiquidityUsd.hashCode());
    result = 31 * result + (this.uncollectedProtocolSideTokenAmounts == null ? 0: this.uncollectedProtocolSideTokenAmounts.hashCode());
    result = 31 * result + (this.uncollectedProtocolSideValuesUsd == null ? 0: this.uncollectedProtocolSideValuesUsd.hashCode());
    result = 31 * result + (this.uncollectedSupplySideTokenAmounts == null ? 0: this.uncollectedSupplySideTokenAmounts.hashCode());
    result = 31 * result + (this.uncollectedSupplySideValuesUsd == null ? 0: this.uncollectedSupplySideValuesUsd.hashCode());
    result = 31 * result + (this.cumulativeSupplySideRevenueUsd == null ? 0: this.cumulativeSupplySideRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeProtocolSideRevenueUsd == null ? 0: this.cumulativeProtocolSideRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeTotalRevenueUsd == null ? 0: this.cumulativeTotalRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeVolumeByTokenAmount == null ? 0: this.cumulativeVolumeByTokenAmount.hashCode());
    result = 31 * result + (this.cumulativeVolumeByTokenUsd == null ? 0: this.cumulativeVolumeByTokenUsd.hashCode());
    result = 31 * result + (this.cumulativeVolumeUsd == null ? 0: this.cumulativeVolumeUsd.hashCode());
    result = 31 * result + (this.inputTokenBalances == null ? 0: this.inputTokenBalances.hashCode());
    result = 31 * result + (this.inputTokenBalancesUsd == null ? 0: this.inputTokenBalancesUsd.hashCode());
    result = 31 * result + (this.inputTokenWeights == null ? 0: this.inputTokenWeights.hashCode());
    result = 31 * result + (this.stakedOutputTokenAmount == null ? 0: this.stakedOutputTokenAmount.hashCode());
    result = 31 * result + (this.rewardTokenEmissionsAmount == null ? 0: this.rewardTokenEmissionsAmount.hashCode());
    result = 31 * result + (this.rewardTokenEmissionsUsd == null ? 0: this.rewardTokenEmissionsUsd.hashCode());
    result = 31 * result + (this.cumulativeDepositCount == null ? 0: this.cumulativeDepositCount.hashCode());
    result = 31 * result + (this.cumulativeWithdrawCount == null ? 0: this.cumulativeWithdrawCount.hashCode());
    result = 31 * result + (this.cumulativeSwapCount == null ? 0: this.cumulativeSwapCount.hashCode());
    result = 31 * result + (this.positionCount == null ? 0: this.positionCount.hashCode());
    result = 31 * result + (this.openPositionCount == null ? 0: this.openPositionCount.hashCode());
    result = 31 * result + (this.closedPositionCount == null ? 0: this.closedPositionCount.hashCode());
    result = 31 * result + (this.lastSnapshotDayId == null ? 0: this.lastSnapshotDayId.hashCode());
    result = 31 * result + (this.lastSnapshotHourId == null ? 0: this.lastSnapshotHourId.hashCode());
    result = 31 * result + (this.lastUpdateTimestamp == null ? 0: this.lastUpdateTimestamp.hashCode());
    result = 31 * result + (this.lastUpdateBlockNumber == null ? 0: this.lastUpdateBlockNumber.hashCode());
    result = 31 * result + (this.evaluatedAsk == null ? 0: this.evaluatedAsk.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class PANCAKESWAPV3ETHEREUMLiquidityPoolDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("  blockRange: ").append(blockRange).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  protocol: ").append(protocol).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  symbol: ").append(symbol).append("\n");
    sb.append("  liquidityToken: ").append(liquidityToken).append("\n");
    sb.append("  inputTokens: ").append(inputTokens).append("\n");
    sb.append("  rewardTokens: ").append(rewardTokens).append("\n");
    sb.append("  fees: ").append(fees).append("\n");
    sb.append("  isSingleSided: ").append(isSingleSided).append("\n");
    sb.append("  createdTimestamp: ").append(createdTimestamp).append("\n");
    sb.append("  createdBlockNumber: ").append(createdBlockNumber).append("\n");
    sb.append("  tick: ").append(tick).append("\n");
    sb.append("  totalValueLockedUsd: ").append(totalValueLockedUsd).append("\n");
    sb.append("  totalLiquidity: ").append(totalLiquidity).append("\n");
    sb.append("  totalLiquidityUsd: ").append(totalLiquidityUsd).append("\n");
    sb.append("  activeLiquidity: ").append(activeLiquidity).append("\n");
    sb.append("  activeLiquidityUsd: ").append(activeLiquidityUsd).append("\n");
    sb.append("  uncollectedProtocolSideTokenAmounts: ").append(uncollectedProtocolSideTokenAmounts).append("\n");
    sb.append("  uncollectedProtocolSideValuesUsd: ").append(uncollectedProtocolSideValuesUsd).append("\n");
    sb.append("  uncollectedSupplySideTokenAmounts: ").append(uncollectedSupplySideTokenAmounts).append("\n");
    sb.append("  uncollectedSupplySideValuesUsd: ").append(uncollectedSupplySideValuesUsd).append("\n");
    sb.append("  cumulativeSupplySideRevenueUsd: ").append(cumulativeSupplySideRevenueUsd).append("\n");
    sb.append("  cumulativeProtocolSideRevenueUsd: ").append(cumulativeProtocolSideRevenueUsd).append("\n");
    sb.append("  cumulativeTotalRevenueUsd: ").append(cumulativeTotalRevenueUsd).append("\n");
    sb.append("  cumulativeVolumeByTokenAmount: ").append(cumulativeVolumeByTokenAmount).append("\n");
    sb.append("  cumulativeVolumeByTokenUsd: ").append(cumulativeVolumeByTokenUsd).append("\n");
    sb.append("  cumulativeVolumeUsd: ").append(cumulativeVolumeUsd).append("\n");
    sb.append("  inputTokenBalances: ").append(inputTokenBalances).append("\n");
    sb.append("  inputTokenBalancesUsd: ").append(inputTokenBalancesUsd).append("\n");
    sb.append("  inputTokenWeights: ").append(inputTokenWeights).append("\n");
    sb.append("  stakedOutputTokenAmount: ").append(stakedOutputTokenAmount).append("\n");
    sb.append("  rewardTokenEmissionsAmount: ").append(rewardTokenEmissionsAmount).append("\n");
    sb.append("  rewardTokenEmissionsUsd: ").append(rewardTokenEmissionsUsd).append("\n");
    sb.append("  cumulativeDepositCount: ").append(cumulativeDepositCount).append("\n");
    sb.append("  cumulativeWithdrawCount: ").append(cumulativeWithdrawCount).append("\n");
    sb.append("  cumulativeSwapCount: ").append(cumulativeSwapCount).append("\n");
    sb.append("  positionCount: ").append(positionCount).append("\n");
    sb.append("  openPositionCount: ").append(openPositionCount).append("\n");
    sb.append("  closedPositionCount: ").append(closedPositionCount).append("\n");
    sb.append("  lastSnapshotDayId: ").append(lastSnapshotDayId).append("\n");
    sb.append("  lastSnapshotHourId: ").append(lastSnapshotHourId).append("\n");
    sb.append("  lastUpdateTimestamp: ").append(lastUpdateTimestamp).append("\n");
    sb.append("  lastUpdateBlockNumber: ").append(lastUpdateBlockNumber).append("\n");
    sb.append("  evaluatedAsk: ").append(evaluatedAsk).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
