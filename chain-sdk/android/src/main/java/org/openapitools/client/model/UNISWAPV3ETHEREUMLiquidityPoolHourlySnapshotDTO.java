/**
 * On Chain Dapps - REST API
 *  This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

/**
 * 
 **/
@ApiModel(description = "")
public class UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO {
  
  @SerializedName("entry_time")
  private Date entryTime = null;
  @SerializedName("recv_time")
  private Date recvTime = null;
  @SerializedName("block_number")
  private Long blockNumber = null;
  @SerializedName("vid")
  private Long vid = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("hour")
  private Integer hour = null;
  @SerializedName("protocol")
  private String protocol = null;
  @SerializedName("pool")
  private String pool = null;
  @SerializedName("tick")
  private String tick = null;
  @SerializedName("total_value_locked_usd")
  private String totalValueLockedUsd = null;
  @SerializedName("total_liquidity")
  private String totalLiquidity = null;
  @SerializedName("total_liquidity_usd")
  private String totalLiquidityUsd = null;
  @SerializedName("active_liquidity")
  private String activeLiquidity = null;
  @SerializedName("active_liquidity_usd")
  private String activeLiquidityUsd = null;
  @SerializedName("uncollected_protocol_side_token_amounts")
  private List<String> uncollectedProtocolSideTokenAmounts = null;
  @SerializedName("uncollected_protocol_side_values_usd")
  private List<String> uncollectedProtocolSideValuesUsd = null;
  @SerializedName("uncollected_supply_side_token_amounts")
  private List<String> uncollectedSupplySideTokenAmounts = null;
  @SerializedName("uncollected_supply_side_values_usd")
  private List<String> uncollectedSupplySideValuesUsd = null;
  @SerializedName("cumulative_supply_side_revenue_usd")
  private String cumulativeSupplySideRevenueUsd = null;
  @SerializedName("hourly_supply_side_revenue_usd")
  private String hourlySupplySideRevenueUsd = null;
  @SerializedName("cumulative_protocol_side_revenue_usd")
  private String cumulativeProtocolSideRevenueUsd = null;
  @SerializedName("hourly_protocol_side_revenue_usd")
  private String hourlyProtocolSideRevenueUsd = null;
  @SerializedName("cumulative_total_revenue_usd")
  private String cumulativeTotalRevenueUsd = null;
  @SerializedName("hourly_total_revenue_usd")
  private String hourlyTotalRevenueUsd = null;
  @SerializedName("cumulative_volume_usd")
  private String cumulativeVolumeUsd = null;
  @SerializedName("hourly_volume_usd")
  private String hourlyVolumeUsd = null;
  @SerializedName("cumulative_volume_by_token_amount")
  private List<String> cumulativeVolumeByTokenAmount = null;
  @SerializedName("hourly_volume_by_token_amount")
  private List<String> hourlyVolumeByTokenAmount = null;
  @SerializedName("cumulative_volume_by_token_usd")
  private List<String> cumulativeVolumeByTokenUsd = null;
  @SerializedName("hourly_volume_by_token_usd")
  private List<String> hourlyVolumeByTokenUsd = null;
  @SerializedName("input_token_balances")
  private List<String> inputTokenBalances = null;
  @SerializedName("input_token_balances_usd")
  private List<String> inputTokenBalancesUsd = null;
  @SerializedName("input_token_weights")
  private List<String> inputTokenWeights = null;
  @SerializedName("staked_output_token_amount")
  private String stakedOutputTokenAmount = null;
  @SerializedName("reward_token_emissions_amount")
  private List<String> rewardTokenEmissionsAmount = null;
  @SerializedName("reward_token_emissions_usd")
  private List<String> rewardTokenEmissionsUsd = null;
  @SerializedName("cumulative_deposit_count")
  private Integer cumulativeDepositCount = null;
  @SerializedName("hourly_deposit_count")
  private Integer hourlyDepositCount = null;
  @SerializedName("cumulative_withdraw_count")
  private Integer cumulativeWithdrawCount = null;
  @SerializedName("hourly_withdraw_count")
  private Integer hourlyWithdrawCount = null;
  @SerializedName("cumulative_swap_count")
  private Integer cumulativeSwapCount = null;
  @SerializedName("hourly_swap_count")
  private Integer hourlySwapCount = null;
  @SerializedName("position_count")
  private Integer positionCount = null;
  @SerializedName("open_position_count")
  private Integer openPositionCount = null;
  @SerializedName("closed_position_count")
  private Integer closedPositionCount = null;
  @SerializedName("timestamp")
  private String timestamp = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getEntryTime() {
    return entryTime;
  }
  public void setEntryTime(Date entryTime) {
    this.entryTime = entryTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getRecvTime() {
    return recvTime;
  }
  public void setRecvTime(Date recvTime) {
    this.recvTime = recvTime;
  }

  /**
   * Number of block in which entity was recorded.
   **/
  @ApiModelProperty(value = "Number of block in which entity was recorded.")
  public Long getBlockNumber() {
    return blockNumber;
  }
  public void setBlockNumber(Long blockNumber) {
    this.blockNumber = blockNumber;
  }

  /**
   * 
   **/
  @ApiModelProperty(value = "")
  public Long getVid() {
    return vid;
  }
  public void setVid(Long vid) {
    this.vid = vid;
  }

  /**
   * (Smart contract address of the pool)-( # of hours since Unix epoch time)
   **/
  @ApiModelProperty(value = "(Smart contract address of the pool)-( # of hours since Unix epoch time)")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * Number of hours since Unix epoch time
   **/
  @ApiModelProperty(value = "Number of hours since Unix epoch time")
  public Integer getHour() {
    return hour;
  }
  public void setHour(Integer hour) {
    this.hour = hour;
  }

  /**
   * The protocol this snapshot belongs to
   **/
  @ApiModelProperty(value = "The protocol this snapshot belongs to")
  public String getProtocol() {
    return protocol;
  }
  public void setProtocol(String protocol) {
    this.protocol = protocol;
  }

  /**
   * The pool this snapshot belongs to
   **/
  @ApiModelProperty(value = "The pool this snapshot belongs to")
  public String getPool() {
    return pool;
  }
  public void setPool(String pool) {
    this.pool = pool;
  }

  /**
   * Current tick representing the price of token0/token1
   **/
  @ApiModelProperty(value = "Current tick representing the price of token0/token1")
  public String getTick() {
    return tick;
  }
  public void setTick(String tick) {
    this.tick = tick;
  }

  /**
   * Current TVL (Total Value Locked) of this pool
   **/
  @ApiModelProperty(value = "Current TVL (Total Value Locked) of this pool")
  public String getTotalValueLockedUsd() {
    return totalValueLockedUsd;
  }
  public void setTotalValueLockedUsd(String totalValueLockedUsd) {
    this.totalValueLockedUsd = totalValueLockedUsd;
  }

  /**
   * The sum of all active and non-active liquidity for this pool.
   **/
  @ApiModelProperty(value = "The sum of all active and non-active liquidity for this pool.")
  public String getTotalLiquidity() {
    return totalLiquidity;
  }
  public void setTotalLiquidity(String totalLiquidity) {
    this.totalLiquidity = totalLiquidity;
  }

  /**
   * The sum of all active and non-active liquidity in USD for this pool.
   **/
  @ApiModelProperty(value = "The sum of all active and non-active liquidity in USD for this pool.")
  public String getTotalLiquidityUsd() {
    return totalLiquidityUsd;
  }
  public void setTotalLiquidityUsd(String totalLiquidityUsd) {
    this.totalLiquidityUsd = totalLiquidityUsd;
  }

  /**
   * All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pool's current tick.
   **/
  @ApiModelProperty(value = "All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pool's current tick.")
  public String getActiveLiquidity() {
    return activeLiquidity;
  }
  public void setActiveLiquidity(String activeLiquidity) {
    this.activeLiquidity = activeLiquidity;
  }

  /**
   * All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pool's current tick.
   **/
  @ApiModelProperty(value = "All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pool's current tick.")
  public String getActiveLiquidityUsd() {
    return activeLiquidityUsd;
  }
  public void setActiveLiquidityUsd(String activeLiquidityUsd) {
    this.activeLiquidityUsd = activeLiquidityUsd;
  }

  /**
   * All protocol-side value locked in token amounts that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All protocol-side value locked in token amounts that remains uncollected and unused in the pool.")
  public List<String> getUncollectedProtocolSideTokenAmounts() {
    return uncollectedProtocolSideTokenAmounts;
  }
  public void setUncollectedProtocolSideTokenAmounts(List<String> uncollectedProtocolSideTokenAmounts) {
    this.uncollectedProtocolSideTokenAmounts = uncollectedProtocolSideTokenAmounts;
  }

  /**
   * All protocol-side value locking in USD that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All protocol-side value locking in USD that remains uncollected and unused in the pool.")
  public List<String> getUncollectedProtocolSideValuesUsd() {
    return uncollectedProtocolSideValuesUsd;
  }
  public void setUncollectedProtocolSideValuesUsd(List<String> uncollectedProtocolSideValuesUsd) {
    this.uncollectedProtocolSideValuesUsd = uncollectedProtocolSideValuesUsd;
  }

  /**
   * All supply-side value locked in token amounts that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All supply-side value locked in token amounts that remains uncollected and unused in the pool.")
  public List<String> getUncollectedSupplySideTokenAmounts() {
    return uncollectedSupplySideTokenAmounts;
  }
  public void setUncollectedSupplySideTokenAmounts(List<String> uncollectedSupplySideTokenAmounts) {
    this.uncollectedSupplySideTokenAmounts = uncollectedSupplySideTokenAmounts;
  }

  /**
   * All supply-side value locked in USD that remains uncollected and unused in the pool.
   **/
  @ApiModelProperty(value = "All supply-side value locked in USD that remains uncollected and unused in the pool.")
  public List<String> getUncollectedSupplySideValuesUsd() {
    return uncollectedSupplySideValuesUsd;
  }
  public void setUncollectedSupplySideValuesUsd(List<String> uncollectedSupplySideValuesUsd) {
    this.uncollectedSupplySideValuesUsd = uncollectedSupplySideValuesUsd;
  }

  /**
   * All revenue generated by the liquidity pool, accrued to the supply side.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool, accrued to the supply side.")
  public String getCumulativeSupplySideRevenueUsd() {
    return cumulativeSupplySideRevenueUsd;
  }
  public void setCumulativeSupplySideRevenueUsd(String cumulativeSupplySideRevenueUsd) {
    this.cumulativeSupplySideRevenueUsd = cumulativeSupplySideRevenueUsd;
  }

  /**
   * Hourly revenue generated by the liquidity pool, accrued to the supply side.
   **/
  @ApiModelProperty(value = "Hourly revenue generated by the liquidity pool, accrued to the supply side.")
  public String getHourlySupplySideRevenueUsd() {
    return hourlySupplySideRevenueUsd;
  }
  public void setHourlySupplySideRevenueUsd(String hourlySupplySideRevenueUsd) {
    this.hourlySupplySideRevenueUsd = hourlySupplySideRevenueUsd;
  }

  /**
   * All revenue generated by the liquidity pool, accrued to the protocol.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool, accrued to the protocol.")
  public String getCumulativeProtocolSideRevenueUsd() {
    return cumulativeProtocolSideRevenueUsd;
  }
  public void setCumulativeProtocolSideRevenueUsd(String cumulativeProtocolSideRevenueUsd) {
    this.cumulativeProtocolSideRevenueUsd = cumulativeProtocolSideRevenueUsd;
  }

  /**
   * Hourly revenue generated by the liquidity pool, accrued to the protocol.
   **/
  @ApiModelProperty(value = "Hourly revenue generated by the liquidity pool, accrued to the protocol.")
  public String getHourlyProtocolSideRevenueUsd() {
    return hourlyProtocolSideRevenueUsd;
  }
  public void setHourlyProtocolSideRevenueUsd(String hourlyProtocolSideRevenueUsd) {
    this.hourlyProtocolSideRevenueUsd = hourlyProtocolSideRevenueUsd;
  }

  /**
   * All revenue generated by the liquidity pool.
   **/
  @ApiModelProperty(value = "All revenue generated by the liquidity pool.")
  public String getCumulativeTotalRevenueUsd() {
    return cumulativeTotalRevenueUsd;
  }
  public void setCumulativeTotalRevenueUsd(String cumulativeTotalRevenueUsd) {
    this.cumulativeTotalRevenueUsd = cumulativeTotalRevenueUsd;
  }

  /**
   * Hourly revenue generated by the liquidity pool.
   **/
  @ApiModelProperty(value = "Hourly revenue generated by the liquidity pool.")
  public String getHourlyTotalRevenueUsd() {
    return hourlyTotalRevenueUsd;
  }
  public void setHourlyTotalRevenueUsd(String hourlyTotalRevenueUsd) {
    this.hourlyTotalRevenueUsd = hourlyTotalRevenueUsd;
  }

  /**
   * All historical trade volume occurred in this pool, in USD.
   **/
  @ApiModelProperty(value = "All historical trade volume occurred in this pool, in USD.")
  public String getCumulativeVolumeUsd() {
    return cumulativeVolumeUsd;
  }
  public void setCumulativeVolumeUsd(String cumulativeVolumeUsd) {
    this.cumulativeVolumeUsd = cumulativeVolumeUsd;
  }

  /**
   * All trade volume occurred in a given hour, in USD.
   **/
  @ApiModelProperty(value = "All trade volume occurred in a given hour, in USD.")
  public String getHourlyVolumeUsd() {
    return hourlyVolumeUsd;
  }
  public void setHourlyVolumeUsd(String hourlyVolumeUsd) {
    this.hourlyVolumeUsd = hourlyVolumeUsd;
  }

  /**
   * All trade volume, in native amount. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume, in native amount. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getCumulativeVolumeByTokenAmount() {
    return cumulativeVolumeByTokenAmount;
  }
  public void setCumulativeVolumeByTokenAmount(List<String> cumulativeVolumeByTokenAmount) {
    this.cumulativeVolumeByTokenAmount = cumulativeVolumeByTokenAmount;
  }

  /**
   * All trade volume occurred in a given hour for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume occurred in a given hour for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getHourlyVolumeByTokenAmount() {
    return hourlyVolumeByTokenAmount;
  }
  public void setHourlyVolumeByTokenAmount(List<String> hourlyVolumeByTokenAmount) {
    this.hourlyVolumeByTokenAmount = hourlyVolumeByTokenAmount;
  }

  /**
   * All trade volume, in USD. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume, in USD. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getCumulativeVolumeByTokenUsd() {
    return cumulativeVolumeByTokenUsd;
  }
  public void setCumulativeVolumeByTokenUsd(List<String> cumulativeVolumeByTokenUsd) {
    this.cumulativeVolumeByTokenUsd = cumulativeVolumeByTokenUsd;
  }

  /**
   * All trade volume occurred in a given hour for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "All trade volume occurred in a given hour for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getHourlyVolumeByTokenUsd() {
    return hourlyVolumeByTokenUsd;
  }
  public void setHourlyVolumeByTokenUsd(List<String> hourlyVolumeByTokenUsd) {
    this.hourlyVolumeByTokenUsd = hourlyVolumeByTokenUsd;
  }

  /**
   * Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getInputTokenBalances() {
    return inputTokenBalances;
  }
  public void setInputTokenBalances(List<String> inputTokenBalances) {
    this.inputTokenBalances = inputTokenBalances;
  }

  /**
   * Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.
   **/
  @ApiModelProperty(value = "Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.")
  public List<String> getInputTokenBalancesUsd() {
    return inputTokenBalancesUsd;
  }
  public void setInputTokenBalancesUsd(List<String> inputTokenBalancesUsd) {
    this.inputTokenBalancesUsd = inputTokenBalancesUsd;
  }

  /**
   * Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.
   **/
  @ApiModelProperty(value = "Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.")
  public List<String> getInputTokenWeights() {
    return inputTokenWeights;
  }
  public void setInputTokenWeights(List<String> inputTokenWeights) {
    this.inputTokenWeights = inputTokenWeights;
  }

  /**
   * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
   **/
  @ApiModelProperty(value = "Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.")
  public String getStakedOutputTokenAmount() {
    return stakedOutputTokenAmount;
  }
  public void setStakedOutputTokenAmount(String stakedOutputTokenAmount) {
    this.stakedOutputTokenAmount = stakedOutputTokenAmount;
  }

  /**
   * Per-block reward token emission as of the current block normalized to a day (not hour), in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
   **/
  @ApiModelProperty(value = "Per-block reward token emission as of the current block normalized to a day (not hour), in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.")
  public List<String> getRewardTokenEmissionsAmount() {
    return rewardTokenEmissionsAmount;
  }
  public void setRewardTokenEmissionsAmount(List<String> rewardTokenEmissionsAmount) {
    this.rewardTokenEmissionsAmount = rewardTokenEmissionsAmount;
  }

  /**
   * Per-block reward token emission as of the current block normalized to a day (not hour), in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
   **/
  @ApiModelProperty(value = "Per-block reward token emission as of the current block normalized to a day (not hour), in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.")
  public List<String> getRewardTokenEmissionsUsd() {
    return rewardTokenEmissionsUsd;
  }
  public void setRewardTokenEmissionsUsd(List<String> rewardTokenEmissionsUsd) {
    this.rewardTokenEmissionsUsd = rewardTokenEmissionsUsd;
  }

  /**
   * Total number of deposits (add liquidity)
   **/
  @ApiModelProperty(value = "Total number of deposits (add liquidity)")
  public Integer getCumulativeDepositCount() {
    return cumulativeDepositCount;
  }
  public void setCumulativeDepositCount(Integer cumulativeDepositCount) {
    this.cumulativeDepositCount = cumulativeDepositCount;
  }

  /**
   * Total number of deposits (add liquidity) in an hour
   **/
  @ApiModelProperty(value = "Total number of deposits (add liquidity) in an hour")
  public Integer getHourlyDepositCount() {
    return hourlyDepositCount;
  }
  public void setHourlyDepositCount(Integer hourlyDepositCount) {
    this.hourlyDepositCount = hourlyDepositCount;
  }

  /**
   * Total number of withdrawals (remove liquidity)
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity)")
  public Integer getCumulativeWithdrawCount() {
    return cumulativeWithdrawCount;
  }
  public void setCumulativeWithdrawCount(Integer cumulativeWithdrawCount) {
    this.cumulativeWithdrawCount = cumulativeWithdrawCount;
  }

  /**
   * Total number of withdrawals (remove liquidity) in an hour
   **/
  @ApiModelProperty(value = "Total number of withdrawals (remove liquidity) in an hour")
  public Integer getHourlyWithdrawCount() {
    return hourlyWithdrawCount;
  }
  public void setHourlyWithdrawCount(Integer hourlyWithdrawCount) {
    this.hourlyWithdrawCount = hourlyWithdrawCount;
  }

  /**
   * Total number of trades (swaps)
   **/
  @ApiModelProperty(value = "Total number of trades (swaps)")
  public Integer getCumulativeSwapCount() {
    return cumulativeSwapCount;
  }
  public void setCumulativeSwapCount(Integer cumulativeSwapCount) {
    this.cumulativeSwapCount = cumulativeSwapCount;
  }

  /**
   * Total number of trades (swaps) in an hour
   **/
  @ApiModelProperty(value = "Total number of trades (swaps) in an hour")
  public Integer getHourlySwapCount() {
    return hourlySwapCount;
  }
  public void setHourlySwapCount(Integer hourlySwapCount) {
    this.hourlySwapCount = hourlySwapCount;
  }

  /**
   * Number of positions in this market
   **/
  @ApiModelProperty(value = "Number of positions in this market")
  public Integer getPositionCount() {
    return positionCount;
  }
  public void setPositionCount(Integer positionCount) {
    this.positionCount = positionCount;
  }

  /**
   * Number of open positions in this market
   **/
  @ApiModelProperty(value = "Number of open positions in this market")
  public Integer getOpenPositionCount() {
    return openPositionCount;
  }
  public void setOpenPositionCount(Integer openPositionCount) {
    this.openPositionCount = openPositionCount;
  }

  /**
   * Number of closed positions in this market
   **/
  @ApiModelProperty(value = "Number of closed positions in this market")
  public Integer getClosedPositionCount() {
    return closedPositionCount;
  }
  public void setClosedPositionCount(Integer closedPositionCount) {
    this.closedPositionCount = closedPositionCount;
  }

  /**
   * Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed)
   **/
  @ApiModelProperty(value = "Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed)")
  public String getTimestamp() {
    return timestamp;
  }
  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO = (UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) o;
    return (this.entryTime == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.entryTime == null : this.entryTime.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.entryTime)) &&
        (this.recvTime == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.recvTime == null : this.recvTime.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.recvTime)) &&
        (this.blockNumber == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.blockNumber == null : this.blockNumber.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.blockNumber)) &&
        (this.vid == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.vid == null : this.vid.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.vid)) &&
        (this.id == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.id == null : this.id.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.id)) &&
        (this.hour == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hour == null : this.hour.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hour)) &&
        (this.protocol == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.protocol == null : this.protocol.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.protocol)) &&
        (this.pool == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.pool == null : this.pool.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.pool)) &&
        (this.tick == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.tick == null : this.tick.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.tick)) &&
        (this.totalValueLockedUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.totalValueLockedUsd == null : this.totalValueLockedUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.totalValueLockedUsd)) &&
        (this.totalLiquidity == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.totalLiquidity == null : this.totalLiquidity.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.totalLiquidity)) &&
        (this.totalLiquidityUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.totalLiquidityUsd == null : this.totalLiquidityUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.totalLiquidityUsd)) &&
        (this.activeLiquidity == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.activeLiquidity == null : this.activeLiquidity.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.activeLiquidity)) &&
        (this.activeLiquidityUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.activeLiquidityUsd == null : this.activeLiquidityUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.activeLiquidityUsd)) &&
        (this.uncollectedProtocolSideTokenAmounts == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedProtocolSideTokenAmounts == null : this.uncollectedProtocolSideTokenAmounts.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedProtocolSideTokenAmounts)) &&
        (this.uncollectedProtocolSideValuesUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedProtocolSideValuesUsd == null : this.uncollectedProtocolSideValuesUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedProtocolSideValuesUsd)) &&
        (this.uncollectedSupplySideTokenAmounts == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedSupplySideTokenAmounts == null : this.uncollectedSupplySideTokenAmounts.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedSupplySideTokenAmounts)) &&
        (this.uncollectedSupplySideValuesUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedSupplySideValuesUsd == null : this.uncollectedSupplySideValuesUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.uncollectedSupplySideValuesUsd)) &&
        (this.cumulativeSupplySideRevenueUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeSupplySideRevenueUsd == null : this.cumulativeSupplySideRevenueUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeSupplySideRevenueUsd)) &&
        (this.hourlySupplySideRevenueUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlySupplySideRevenueUsd == null : this.hourlySupplySideRevenueUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlySupplySideRevenueUsd)) &&
        (this.cumulativeProtocolSideRevenueUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeProtocolSideRevenueUsd == null : this.cumulativeProtocolSideRevenueUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeProtocolSideRevenueUsd)) &&
        (this.hourlyProtocolSideRevenueUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyProtocolSideRevenueUsd == null : this.hourlyProtocolSideRevenueUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyProtocolSideRevenueUsd)) &&
        (this.cumulativeTotalRevenueUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeTotalRevenueUsd == null : this.cumulativeTotalRevenueUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeTotalRevenueUsd)) &&
        (this.hourlyTotalRevenueUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyTotalRevenueUsd == null : this.hourlyTotalRevenueUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyTotalRevenueUsd)) &&
        (this.cumulativeVolumeUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeVolumeUsd == null : this.cumulativeVolumeUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeVolumeUsd)) &&
        (this.hourlyVolumeUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyVolumeUsd == null : this.hourlyVolumeUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyVolumeUsd)) &&
        (this.cumulativeVolumeByTokenAmount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeVolumeByTokenAmount == null : this.cumulativeVolumeByTokenAmount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeVolumeByTokenAmount)) &&
        (this.hourlyVolumeByTokenAmount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyVolumeByTokenAmount == null : this.hourlyVolumeByTokenAmount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyVolumeByTokenAmount)) &&
        (this.cumulativeVolumeByTokenUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeVolumeByTokenUsd == null : this.cumulativeVolumeByTokenUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeVolumeByTokenUsd)) &&
        (this.hourlyVolumeByTokenUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyVolumeByTokenUsd == null : this.hourlyVolumeByTokenUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyVolumeByTokenUsd)) &&
        (this.inputTokenBalances == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.inputTokenBalances == null : this.inputTokenBalances.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.inputTokenBalances)) &&
        (this.inputTokenBalancesUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.inputTokenBalancesUsd == null : this.inputTokenBalancesUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.inputTokenBalancesUsd)) &&
        (this.inputTokenWeights == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.inputTokenWeights == null : this.inputTokenWeights.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.inputTokenWeights)) &&
        (this.stakedOutputTokenAmount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.stakedOutputTokenAmount == null : this.stakedOutputTokenAmount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.stakedOutputTokenAmount)) &&
        (this.rewardTokenEmissionsAmount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.rewardTokenEmissionsAmount == null : this.rewardTokenEmissionsAmount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.rewardTokenEmissionsAmount)) &&
        (this.rewardTokenEmissionsUsd == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.rewardTokenEmissionsUsd == null : this.rewardTokenEmissionsUsd.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.rewardTokenEmissionsUsd)) &&
        (this.cumulativeDepositCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeDepositCount == null : this.cumulativeDepositCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeDepositCount)) &&
        (this.hourlyDepositCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyDepositCount == null : this.hourlyDepositCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyDepositCount)) &&
        (this.cumulativeWithdrawCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeWithdrawCount == null : this.cumulativeWithdrawCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeWithdrawCount)) &&
        (this.hourlyWithdrawCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyWithdrawCount == null : this.hourlyWithdrawCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlyWithdrawCount)) &&
        (this.cumulativeSwapCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeSwapCount == null : this.cumulativeSwapCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.cumulativeSwapCount)) &&
        (this.hourlySwapCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlySwapCount == null : this.hourlySwapCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.hourlySwapCount)) &&
        (this.positionCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.positionCount == null : this.positionCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.positionCount)) &&
        (this.openPositionCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.openPositionCount == null : this.openPositionCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.openPositionCount)) &&
        (this.closedPositionCount == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.closedPositionCount == null : this.closedPositionCount.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.closedPositionCount)) &&
        (this.timestamp == null ? uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.timestamp == null : this.timestamp.equals(uNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO.timestamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.entryTime == null ? 0: this.entryTime.hashCode());
    result = 31 * result + (this.recvTime == null ? 0: this.recvTime.hashCode());
    result = 31 * result + (this.blockNumber == null ? 0: this.blockNumber.hashCode());
    result = 31 * result + (this.vid == null ? 0: this.vid.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.hour == null ? 0: this.hour.hashCode());
    result = 31 * result + (this.protocol == null ? 0: this.protocol.hashCode());
    result = 31 * result + (this.pool == null ? 0: this.pool.hashCode());
    result = 31 * result + (this.tick == null ? 0: this.tick.hashCode());
    result = 31 * result + (this.totalValueLockedUsd == null ? 0: this.totalValueLockedUsd.hashCode());
    result = 31 * result + (this.totalLiquidity == null ? 0: this.totalLiquidity.hashCode());
    result = 31 * result + (this.totalLiquidityUsd == null ? 0: this.totalLiquidityUsd.hashCode());
    result = 31 * result + (this.activeLiquidity == null ? 0: this.activeLiquidity.hashCode());
    result = 31 * result + (this.activeLiquidityUsd == null ? 0: this.activeLiquidityUsd.hashCode());
    result = 31 * result + (this.uncollectedProtocolSideTokenAmounts == null ? 0: this.uncollectedProtocolSideTokenAmounts.hashCode());
    result = 31 * result + (this.uncollectedProtocolSideValuesUsd == null ? 0: this.uncollectedProtocolSideValuesUsd.hashCode());
    result = 31 * result + (this.uncollectedSupplySideTokenAmounts == null ? 0: this.uncollectedSupplySideTokenAmounts.hashCode());
    result = 31 * result + (this.uncollectedSupplySideValuesUsd == null ? 0: this.uncollectedSupplySideValuesUsd.hashCode());
    result = 31 * result + (this.cumulativeSupplySideRevenueUsd == null ? 0: this.cumulativeSupplySideRevenueUsd.hashCode());
    result = 31 * result + (this.hourlySupplySideRevenueUsd == null ? 0: this.hourlySupplySideRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeProtocolSideRevenueUsd == null ? 0: this.cumulativeProtocolSideRevenueUsd.hashCode());
    result = 31 * result + (this.hourlyProtocolSideRevenueUsd == null ? 0: this.hourlyProtocolSideRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeTotalRevenueUsd == null ? 0: this.cumulativeTotalRevenueUsd.hashCode());
    result = 31 * result + (this.hourlyTotalRevenueUsd == null ? 0: this.hourlyTotalRevenueUsd.hashCode());
    result = 31 * result + (this.cumulativeVolumeUsd == null ? 0: this.cumulativeVolumeUsd.hashCode());
    result = 31 * result + (this.hourlyVolumeUsd == null ? 0: this.hourlyVolumeUsd.hashCode());
    result = 31 * result + (this.cumulativeVolumeByTokenAmount == null ? 0: this.cumulativeVolumeByTokenAmount.hashCode());
    result = 31 * result + (this.hourlyVolumeByTokenAmount == null ? 0: this.hourlyVolumeByTokenAmount.hashCode());
    result = 31 * result + (this.cumulativeVolumeByTokenUsd == null ? 0: this.cumulativeVolumeByTokenUsd.hashCode());
    result = 31 * result + (this.hourlyVolumeByTokenUsd == null ? 0: this.hourlyVolumeByTokenUsd.hashCode());
    result = 31 * result + (this.inputTokenBalances == null ? 0: this.inputTokenBalances.hashCode());
    result = 31 * result + (this.inputTokenBalancesUsd == null ? 0: this.inputTokenBalancesUsd.hashCode());
    result = 31 * result + (this.inputTokenWeights == null ? 0: this.inputTokenWeights.hashCode());
    result = 31 * result + (this.stakedOutputTokenAmount == null ? 0: this.stakedOutputTokenAmount.hashCode());
    result = 31 * result + (this.rewardTokenEmissionsAmount == null ? 0: this.rewardTokenEmissionsAmount.hashCode());
    result = 31 * result + (this.rewardTokenEmissionsUsd == null ? 0: this.rewardTokenEmissionsUsd.hashCode());
    result = 31 * result + (this.cumulativeDepositCount == null ? 0: this.cumulativeDepositCount.hashCode());
    result = 31 * result + (this.hourlyDepositCount == null ? 0: this.hourlyDepositCount.hashCode());
    result = 31 * result + (this.cumulativeWithdrawCount == null ? 0: this.cumulativeWithdrawCount.hashCode());
    result = 31 * result + (this.hourlyWithdrawCount == null ? 0: this.hourlyWithdrawCount.hashCode());
    result = 31 * result + (this.cumulativeSwapCount == null ? 0: this.cumulativeSwapCount.hashCode());
    result = 31 * result + (this.hourlySwapCount == null ? 0: this.hourlySwapCount.hashCode());
    result = 31 * result + (this.positionCount == null ? 0: this.positionCount.hashCode());
    result = 31 * result + (this.openPositionCount == null ? 0: this.openPositionCount.hashCode());
    result = 31 * result + (this.closedPositionCount == null ? 0: this.closedPositionCount.hashCode());
    result = 31 * result + (this.timestamp == null ? 0: this.timestamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO {\n");
    
    sb.append("  entryTime: ").append(entryTime).append("\n");
    sb.append("  recvTime: ").append(recvTime).append("\n");
    sb.append("  blockNumber: ").append(blockNumber).append("\n");
    sb.append("  vid: ").append(vid).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  hour: ").append(hour).append("\n");
    sb.append("  protocol: ").append(protocol).append("\n");
    sb.append("  pool: ").append(pool).append("\n");
    sb.append("  tick: ").append(tick).append("\n");
    sb.append("  totalValueLockedUsd: ").append(totalValueLockedUsd).append("\n");
    sb.append("  totalLiquidity: ").append(totalLiquidity).append("\n");
    sb.append("  totalLiquidityUsd: ").append(totalLiquidityUsd).append("\n");
    sb.append("  activeLiquidity: ").append(activeLiquidity).append("\n");
    sb.append("  activeLiquidityUsd: ").append(activeLiquidityUsd).append("\n");
    sb.append("  uncollectedProtocolSideTokenAmounts: ").append(uncollectedProtocolSideTokenAmounts).append("\n");
    sb.append("  uncollectedProtocolSideValuesUsd: ").append(uncollectedProtocolSideValuesUsd).append("\n");
    sb.append("  uncollectedSupplySideTokenAmounts: ").append(uncollectedSupplySideTokenAmounts).append("\n");
    sb.append("  uncollectedSupplySideValuesUsd: ").append(uncollectedSupplySideValuesUsd).append("\n");
    sb.append("  cumulativeSupplySideRevenueUsd: ").append(cumulativeSupplySideRevenueUsd).append("\n");
    sb.append("  hourlySupplySideRevenueUsd: ").append(hourlySupplySideRevenueUsd).append("\n");
    sb.append("  cumulativeProtocolSideRevenueUsd: ").append(cumulativeProtocolSideRevenueUsd).append("\n");
    sb.append("  hourlyProtocolSideRevenueUsd: ").append(hourlyProtocolSideRevenueUsd).append("\n");
    sb.append("  cumulativeTotalRevenueUsd: ").append(cumulativeTotalRevenueUsd).append("\n");
    sb.append("  hourlyTotalRevenueUsd: ").append(hourlyTotalRevenueUsd).append("\n");
    sb.append("  cumulativeVolumeUsd: ").append(cumulativeVolumeUsd).append("\n");
    sb.append("  hourlyVolumeUsd: ").append(hourlyVolumeUsd).append("\n");
    sb.append("  cumulativeVolumeByTokenAmount: ").append(cumulativeVolumeByTokenAmount).append("\n");
    sb.append("  hourlyVolumeByTokenAmount: ").append(hourlyVolumeByTokenAmount).append("\n");
    sb.append("  cumulativeVolumeByTokenUsd: ").append(cumulativeVolumeByTokenUsd).append("\n");
    sb.append("  hourlyVolumeByTokenUsd: ").append(hourlyVolumeByTokenUsd).append("\n");
    sb.append("  inputTokenBalances: ").append(inputTokenBalances).append("\n");
    sb.append("  inputTokenBalancesUsd: ").append(inputTokenBalancesUsd).append("\n");
    sb.append("  inputTokenWeights: ").append(inputTokenWeights).append("\n");
    sb.append("  stakedOutputTokenAmount: ").append(stakedOutputTokenAmount).append("\n");
    sb.append("  rewardTokenEmissionsAmount: ").append(rewardTokenEmissionsAmount).append("\n");
    sb.append("  rewardTokenEmissionsUsd: ").append(rewardTokenEmissionsUsd).append("\n");
    sb.append("  cumulativeDepositCount: ").append(cumulativeDepositCount).append("\n");
    sb.append("  hourlyDepositCount: ").append(hourlyDepositCount).append("\n");
    sb.append("  cumulativeWithdrawCount: ").append(cumulativeWithdrawCount).append("\n");
    sb.append("  hourlyWithdrawCount: ").append(hourlyWithdrawCount).append("\n");
    sb.append("  cumulativeSwapCount: ").append(cumulativeSwapCount).append("\n");
    sb.append("  hourlySwapCount: ").append(hourlySwapCount).append("\n");
    sb.append("  positionCount: ").append(positionCount).append("\n");
    sb.append("  openPositionCount: ").append(openPositionCount).append("\n");
    sb.append("  closedPositionCount: ").append(closedPositionCount).append("\n");
    sb.append("  timestamp: ").append(timestamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
