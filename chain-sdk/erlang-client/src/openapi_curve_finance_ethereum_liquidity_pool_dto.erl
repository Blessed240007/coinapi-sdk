-module(openapi_curve_finance_ethereum_liquidity_pool_dto).

-export([encode/1]).

-export_type([openapi_curve_finance_ethereum_liquidity_pool_dto/0]).

-type openapi_curve_finance_ethereum_liquidity_pool_dto() ::
    #{ 'entry_time' => openapi_date_time:openapi_date_time(),
       'recv_time' => openapi_date_time:openapi_date_time(),
       'block_number' => integer(),
       'vid' => integer(),
       'id' => binary(),
       'protocol' => binary(),
       'name' => binary(),
       'symbol' => binary(),
       'input_tokens' => list(),
       'input_tokens_ordered' => list(),
       'output_token' => binary(),
       'reward_tokens' => list(),
       'fees' => list(),
       'is_single_sided' => boolean(),
       'created_timestamp' => binary(),
       'created_block_number' => binary(),
       'total_value_locked_usd' => binary(),
       'cumulative_supply_side_revenue_usd' => binary(),
       'cumulative_protocol_side_revenue_usd' => binary(),
       'cumulative_total_revenue_usd' => binary(),
       'cumulative_volume_usd' => binary(),
       'input_token_balances' => list(),
       'input_token_weights' => list(),
       'output_token_supply' => binary(),
       'output_token_price_usd' => binary(),
       'staked_output_token_amount' => binary(),
       'reward_token_emissions_amount' => list(),
       'reward_token_emissions_usd' => list(),
       'registry_address' => binary(),
       'gauge_address' => binary(),
       'evaluated_ask' => float()
     }.

encode(#{ 'entry_time' := EntryTime,
          'recv_time' := RecvTime,
          'block_number' := BlockNumber,
          'vid' := Vid,
          'id' := Id,
          'protocol' := Protocol,
          'name' := Name,
          'symbol' := Symbol,
          'input_tokens' := InputTokens,
          'input_tokens_ordered' := InputTokensOrdered,
          'output_token' := OutputToken,
          'reward_tokens' := RewardTokens,
          'fees' := Fees,
          'is_single_sided' := IsSingleSided,
          'created_timestamp' := CreatedTimestamp,
          'created_block_number' := CreatedBlockNumber,
          'total_value_locked_usd' := TotalValueLockedUsd,
          'cumulative_supply_side_revenue_usd' := CumulativeSupplySideRevenueUsd,
          'cumulative_protocol_side_revenue_usd' := CumulativeProtocolSideRevenueUsd,
          'cumulative_total_revenue_usd' := CumulativeTotalRevenueUsd,
          'cumulative_volume_usd' := CumulativeVolumeUsd,
          'input_token_balances' := InputTokenBalances,
          'input_token_weights' := InputTokenWeights,
          'output_token_supply' := OutputTokenSupply,
          'output_token_price_usd' := OutputTokenPriceUsd,
          'staked_output_token_amount' := StakedOutputTokenAmount,
          'reward_token_emissions_amount' := RewardTokenEmissionsAmount,
          'reward_token_emissions_usd' := RewardTokenEmissionsUsd,
          'registry_address' := RegistryAddress,
          'gauge_address' := GaugeAddress,
          'evaluated_ask' := EvaluatedAsk
        }) ->
    #{ 'entry_time' => EntryTime,
       'recv_time' => RecvTime,
       'block_number' => BlockNumber,
       'vid' => Vid,
       'id' => Id,
       'protocol' => Protocol,
       'name' => Name,
       'symbol' => Symbol,
       'input_tokens' => InputTokens,
       'input_tokens_ordered' => InputTokensOrdered,
       'output_token' => OutputToken,
       'reward_tokens' => RewardTokens,
       'fees' => Fees,
       'is_single_sided' => IsSingleSided,
       'created_timestamp' => CreatedTimestamp,
       'created_block_number' => CreatedBlockNumber,
       'total_value_locked_usd' => TotalValueLockedUsd,
       'cumulative_supply_side_revenue_usd' => CumulativeSupplySideRevenueUsd,
       'cumulative_protocol_side_revenue_usd' => CumulativeProtocolSideRevenueUsd,
       'cumulative_total_revenue_usd' => CumulativeTotalRevenueUsd,
       'cumulative_volume_usd' => CumulativeVolumeUsd,
       'input_token_balances' => InputTokenBalances,
       'input_token_weights' => InputTokenWeights,
       'output_token_supply' => OutputTokenSupply,
       'output_token_price_usd' => OutputTokenPriceUsd,
       'staked_output_token_amount' => StakedOutputTokenAmount,
       'reward_token_emissions_amount' => RewardTokenEmissionsAmount,
       'reward_token_emissions_usd' => RewardTokenEmissionsUsd,
       'registry_address' => RegistryAddress,
       'gauge_address' => GaugeAddress,
       'evaluated_ask' => EvaluatedAsk
     }.
