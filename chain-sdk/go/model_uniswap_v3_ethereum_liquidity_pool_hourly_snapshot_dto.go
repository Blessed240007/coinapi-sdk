/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO{}

// UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO 
type UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// 
	Vid *int64 `json:"vid,omitempty"`
	// (Smart contract address of the pool)-( # of hours since Unix epoch time)
	Id NullableString `json:"id,omitempty"`
	// Number of hours since Unix epoch time
	Hour *int32 `json:"hour,omitempty"`
	// The protocol this snapshot belongs to
	Protocol NullableString `json:"protocol,omitempty"`
	// The pool this snapshot belongs to
	Pool NullableString `json:"pool,omitempty"`
	// Current tick representing the price of token0/token1
	Tick NullableString `json:"tick,omitempty"`
	// Current TVL (Total Value Locked) of this pool
	TotalValueLockedUsd NullableString `json:"total_value_locked_usd,omitempty"`
	// The sum of all active and non-active liquidity for this pool.
	TotalLiquidity NullableString `json:"total_liquidity,omitempty"`
	// The sum of all active and non-active liquidity in USD for this pool.
	TotalLiquidityUsd NullableString `json:"total_liquidity_usd,omitempty"`
	// All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pool's current tick.
	ActiveLiquidity NullableString `json:"active_liquidity,omitempty"`
	// All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pool's current tick.
	ActiveLiquidityUsd NullableString `json:"active_liquidity_usd,omitempty"`
	// All protocol-side value locked in token amounts that remains uncollected and unused in the pool.
	UncollectedProtocolSideTokenAmounts []string `json:"uncollected_protocol_side_token_amounts,omitempty"`
	// All protocol-side value locking in USD that remains uncollected and unused in the pool.
	UncollectedProtocolSideValuesUsd []string `json:"uncollected_protocol_side_values_usd,omitempty"`
	// All supply-side value locked in token amounts that remains uncollected and unused in the pool.
	UncollectedSupplySideTokenAmounts []string `json:"uncollected_supply_side_token_amounts,omitempty"`
	// All supply-side value locked in USD that remains uncollected and unused in the pool.
	UncollectedSupplySideValuesUsd []string `json:"uncollected_supply_side_values_usd,omitempty"`
	// All revenue generated by the liquidity pool, accrued to the supply side.
	CumulativeSupplySideRevenueUsd NullableString `json:"cumulative_supply_side_revenue_usd,omitempty"`
	// Hourly revenue generated by the liquidity pool, accrued to the supply side.
	HourlySupplySideRevenueUsd NullableString `json:"hourly_supply_side_revenue_usd,omitempty"`
	// All revenue generated by the liquidity pool, accrued to the protocol.
	CumulativeProtocolSideRevenueUsd NullableString `json:"cumulative_protocol_side_revenue_usd,omitempty"`
	// Hourly revenue generated by the liquidity pool, accrued to the protocol.
	HourlyProtocolSideRevenueUsd NullableString `json:"hourly_protocol_side_revenue_usd,omitempty"`
	// All revenue generated by the liquidity pool.
	CumulativeTotalRevenueUsd NullableString `json:"cumulative_total_revenue_usd,omitempty"`
	// Hourly revenue generated by the liquidity pool.
	HourlyTotalRevenueUsd NullableString `json:"hourly_total_revenue_usd,omitempty"`
	// All historical trade volume occurred in this pool, in USD.
	CumulativeVolumeUsd NullableString `json:"cumulative_volume_usd,omitempty"`
	// All trade volume occurred in a given hour, in USD.
	HourlyVolumeUsd NullableString `json:"hourly_volume_usd,omitempty"`
	// All trade volume, in native amount. The ordering should be the same as the pool's `inputTokens` field.
	CumulativeVolumeByTokenAmount []string `json:"cumulative_volume_by_token_amount,omitempty"`
	// All trade volume occurred in a given hour for a specific input token, in native amount. The ordering should be the same as the pool's `inputTokens` field.
	HourlyVolumeByTokenAmount []string `json:"hourly_volume_by_token_amount,omitempty"`
	// All trade volume, in USD. The ordering should be the same as the pool's `inputTokens` field.
	CumulativeVolumeByTokenUsd []string `json:"cumulative_volume_by_token_usd,omitempty"`
	// All trade volume occurred in a given hour for a specific input token, in USD. The ordering should be the same as the pool's `inputTokens` field.
	HourlyVolumeByTokenUsd []string `json:"hourly_volume_by_token_usd,omitempty"`
	// Amount of input tokens in the pool. The ordering should be the same as the pool's `inputTokens` field.
	InputTokenBalances []string `json:"input_token_balances,omitempty"`
	// Amount of input tokens in USD in the pool. The ordering should be the same as the pool's `inputTokens` field.
	InputTokenBalancesUsd []string `json:"input_token_balances_usd,omitempty"`
	// Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.
	InputTokenWeights []string `json:"input_token_weights,omitempty"`
	// Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
	StakedOutputTokenAmount NullableString `json:"staked_output_token_amount,omitempty"`
	// Per-block reward token emission as of the current block normalized to a day (not hour), in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
	RewardTokenEmissionsAmount []string `json:"reward_token_emissions_amount,omitempty"`
	// Per-block reward token emission as of the current block normalized to a day (not hour), in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
	RewardTokenEmissionsUsd []string `json:"reward_token_emissions_usd,omitempty"`
	// Total number of deposits (add liquidity)
	CumulativeDepositCount *int32 `json:"cumulative_deposit_count,omitempty"`
	// Total number of deposits (add liquidity) in an hour
	HourlyDepositCount *int32 `json:"hourly_deposit_count,omitempty"`
	// Total number of withdrawals (remove liquidity)
	CumulativeWithdrawCount *int32 `json:"cumulative_withdraw_count,omitempty"`
	// Total number of withdrawals (remove liquidity) in an hour
	HourlyWithdrawCount *int32 `json:"hourly_withdraw_count,omitempty"`
	// Total number of trades (swaps)
	CumulativeSwapCount *int32 `json:"cumulative_swap_count,omitempty"`
	// Total number of trades (swaps) in an hour
	HourlySwapCount *int32 `json:"hourly_swap_count,omitempty"`
	// Number of positions in this market
	PositionCount *int32 `json:"position_count,omitempty"`
	// Number of open positions in this market
	OpenPositionCount *int32 `json:"open_position_count,omitempty"`
	// Number of closed positions in this market
	ClosedPositionCount *int32 `json:"closed_position_count,omitempty"`
	// Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed)
	Timestamp NullableString `json:"timestamp,omitempty"`
}

// NewUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO instantiates a new UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO() *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO {
	this := UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO{}
	return &this
}

// NewUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTOWithDefaults instantiates a new UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTOWithDefaults() *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO {
	this := UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetVid(v int64) {
	o.Vid = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetId() {
	o.Id.Unset()
}

// GetHour returns the Hour field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHour() int32 {
	if o == nil || IsNil(o.Hour) {
		var ret int32
		return ret
	}
	return *o.Hour
}

// GetHourOk returns a tuple with the Hour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourOk() (*int32, bool) {
	if o == nil || IsNil(o.Hour) {
		return nil, false
	}
	return o.Hour, true
}

// HasHour returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHour() bool {
	if o != nil && !IsNil(o.Hour) {
		return true
	}

	return false
}

// SetHour gets a reference to the given int32 and assigns it to the Hour field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHour(v int32) {
	o.Hour = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetProtocol() string {
	if o == nil || IsNil(o.Protocol.Get()) {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetPool returns the Pool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetPool() string {
	if o == nil || IsNil(o.Pool.Get()) {
		var ret string
		return ret
	}
	return *o.Pool.Get()
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetPoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pool.Get(), o.Pool.IsSet()
}

// HasPool returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasPool() bool {
	if o != nil && o.Pool.IsSet() {
		return true
	}

	return false
}

// SetPool gets a reference to the given NullableString and assigns it to the Pool field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetPool(v string) {
	o.Pool.Set(&v)
}
// SetPoolNil sets the value for Pool to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetPoolNil() {
	o.Pool.Set(nil)
}

// UnsetPool ensures that no value is present for Pool, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetPool() {
	o.Pool.Unset()
}

// GetTick returns the Tick field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTick() string {
	if o == nil || IsNil(o.Tick.Get()) {
		var ret string
		return ret
	}
	return *o.Tick.Get()
}

// GetTickOk returns a tuple with the Tick field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTickOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tick.Get(), o.Tick.IsSet()
}

// HasTick returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasTick() bool {
	if o != nil && o.Tick.IsSet() {
		return true
	}

	return false
}

// SetTick gets a reference to the given NullableString and assigns it to the Tick field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTick(v string) {
	o.Tick.Set(&v)
}
// SetTickNil sets the value for Tick to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTickNil() {
	o.Tick.Set(nil)
}

// UnsetTick ensures that no value is present for Tick, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTick() {
	o.Tick.Unset()
}

// GetTotalValueLockedUsd returns the TotalValueLockedUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalValueLockedUsd() string {
	if o == nil || IsNil(o.TotalValueLockedUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsd.Get()
}

// GetTotalValueLockedUsdOk returns a tuple with the TotalValueLockedUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalValueLockedUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsd.Get(), o.TotalValueLockedUsd.IsSet()
}

// HasTotalValueLockedUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasTotalValueLockedUsd() bool {
	if o != nil && o.TotalValueLockedUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsd gets a reference to the given NullableString and assigns it to the TotalValueLockedUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalValueLockedUsd(v string) {
	o.TotalValueLockedUsd.Set(&v)
}
// SetTotalValueLockedUsdNil sets the value for TotalValueLockedUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalValueLockedUsdNil() {
	o.TotalValueLockedUsd.Set(nil)
}

// UnsetTotalValueLockedUsd ensures that no value is present for TotalValueLockedUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTotalValueLockedUsd() {
	o.TotalValueLockedUsd.Unset()
}

// GetTotalLiquidity returns the TotalLiquidity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalLiquidity() string {
	if o == nil || IsNil(o.TotalLiquidity.Get()) {
		var ret string
		return ret
	}
	return *o.TotalLiquidity.Get()
}

// GetTotalLiquidityOk returns a tuple with the TotalLiquidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalLiquidityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalLiquidity.Get(), o.TotalLiquidity.IsSet()
}

// HasTotalLiquidity returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasTotalLiquidity() bool {
	if o != nil && o.TotalLiquidity.IsSet() {
		return true
	}

	return false
}

// SetTotalLiquidity gets a reference to the given NullableString and assigns it to the TotalLiquidity field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalLiquidity(v string) {
	o.TotalLiquidity.Set(&v)
}
// SetTotalLiquidityNil sets the value for TotalLiquidity to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalLiquidityNil() {
	o.TotalLiquidity.Set(nil)
}

// UnsetTotalLiquidity ensures that no value is present for TotalLiquidity, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTotalLiquidity() {
	o.TotalLiquidity.Unset()
}

// GetTotalLiquidityUsd returns the TotalLiquidityUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalLiquidityUsd() string {
	if o == nil || IsNil(o.TotalLiquidityUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalLiquidityUsd.Get()
}

// GetTotalLiquidityUsdOk returns a tuple with the TotalLiquidityUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalLiquidityUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalLiquidityUsd.Get(), o.TotalLiquidityUsd.IsSet()
}

// HasTotalLiquidityUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasTotalLiquidityUsd() bool {
	if o != nil && o.TotalLiquidityUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalLiquidityUsd gets a reference to the given NullableString and assigns it to the TotalLiquidityUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalLiquidityUsd(v string) {
	o.TotalLiquidityUsd.Set(&v)
}
// SetTotalLiquidityUsdNil sets the value for TotalLiquidityUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalLiquidityUsdNil() {
	o.TotalLiquidityUsd.Set(nil)
}

// UnsetTotalLiquidityUsd ensures that no value is present for TotalLiquidityUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTotalLiquidityUsd() {
	o.TotalLiquidityUsd.Unset()
}

// GetActiveLiquidity returns the ActiveLiquidity field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetActiveLiquidity() string {
	if o == nil || IsNil(o.ActiveLiquidity.Get()) {
		var ret string
		return ret
	}
	return *o.ActiveLiquidity.Get()
}

// GetActiveLiquidityOk returns a tuple with the ActiveLiquidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetActiveLiquidityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveLiquidity.Get(), o.ActiveLiquidity.IsSet()
}

// HasActiveLiquidity returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasActiveLiquidity() bool {
	if o != nil && o.ActiveLiquidity.IsSet() {
		return true
	}

	return false
}

// SetActiveLiquidity gets a reference to the given NullableString and assigns it to the ActiveLiquidity field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetActiveLiquidity(v string) {
	o.ActiveLiquidity.Set(&v)
}
// SetActiveLiquidityNil sets the value for ActiveLiquidity to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetActiveLiquidityNil() {
	o.ActiveLiquidity.Set(nil)
}

// UnsetActiveLiquidity ensures that no value is present for ActiveLiquidity, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetActiveLiquidity() {
	o.ActiveLiquidity.Unset()
}

// GetActiveLiquidityUsd returns the ActiveLiquidityUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetActiveLiquidityUsd() string {
	if o == nil || IsNil(o.ActiveLiquidityUsd.Get()) {
		var ret string
		return ret
	}
	return *o.ActiveLiquidityUsd.Get()
}

// GetActiveLiquidityUsdOk returns a tuple with the ActiveLiquidityUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetActiveLiquidityUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveLiquidityUsd.Get(), o.ActiveLiquidityUsd.IsSet()
}

// HasActiveLiquidityUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasActiveLiquidityUsd() bool {
	if o != nil && o.ActiveLiquidityUsd.IsSet() {
		return true
	}

	return false
}

// SetActiveLiquidityUsd gets a reference to the given NullableString and assigns it to the ActiveLiquidityUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetActiveLiquidityUsd(v string) {
	o.ActiveLiquidityUsd.Set(&v)
}
// SetActiveLiquidityUsdNil sets the value for ActiveLiquidityUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetActiveLiquidityUsdNil() {
	o.ActiveLiquidityUsd.Set(nil)
}

// UnsetActiveLiquidityUsd ensures that no value is present for ActiveLiquidityUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetActiveLiquidityUsd() {
	o.ActiveLiquidityUsd.Unset()
}

// GetUncollectedProtocolSideTokenAmounts returns the UncollectedProtocolSideTokenAmounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedProtocolSideTokenAmounts() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UncollectedProtocolSideTokenAmounts
}

// GetUncollectedProtocolSideTokenAmountsOk returns a tuple with the UncollectedProtocolSideTokenAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedProtocolSideTokenAmountsOk() ([]string, bool) {
	if o == nil || IsNil(o.UncollectedProtocolSideTokenAmounts) {
		return nil, false
	}
	return o.UncollectedProtocolSideTokenAmounts, true
}

// HasUncollectedProtocolSideTokenAmounts returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasUncollectedProtocolSideTokenAmounts() bool {
	if o != nil && IsNil(o.UncollectedProtocolSideTokenAmounts) {
		return true
	}

	return false
}

// SetUncollectedProtocolSideTokenAmounts gets a reference to the given []string and assigns it to the UncollectedProtocolSideTokenAmounts field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetUncollectedProtocolSideTokenAmounts(v []string) {
	o.UncollectedProtocolSideTokenAmounts = v
}

// GetUncollectedProtocolSideValuesUsd returns the UncollectedProtocolSideValuesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedProtocolSideValuesUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UncollectedProtocolSideValuesUsd
}

// GetUncollectedProtocolSideValuesUsdOk returns a tuple with the UncollectedProtocolSideValuesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedProtocolSideValuesUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.UncollectedProtocolSideValuesUsd) {
		return nil, false
	}
	return o.UncollectedProtocolSideValuesUsd, true
}

// HasUncollectedProtocolSideValuesUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasUncollectedProtocolSideValuesUsd() bool {
	if o != nil && IsNil(o.UncollectedProtocolSideValuesUsd) {
		return true
	}

	return false
}

// SetUncollectedProtocolSideValuesUsd gets a reference to the given []string and assigns it to the UncollectedProtocolSideValuesUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetUncollectedProtocolSideValuesUsd(v []string) {
	o.UncollectedProtocolSideValuesUsd = v
}

// GetUncollectedSupplySideTokenAmounts returns the UncollectedSupplySideTokenAmounts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedSupplySideTokenAmounts() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UncollectedSupplySideTokenAmounts
}

// GetUncollectedSupplySideTokenAmountsOk returns a tuple with the UncollectedSupplySideTokenAmounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedSupplySideTokenAmountsOk() ([]string, bool) {
	if o == nil || IsNil(o.UncollectedSupplySideTokenAmounts) {
		return nil, false
	}
	return o.UncollectedSupplySideTokenAmounts, true
}

// HasUncollectedSupplySideTokenAmounts returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasUncollectedSupplySideTokenAmounts() bool {
	if o != nil && IsNil(o.UncollectedSupplySideTokenAmounts) {
		return true
	}

	return false
}

// SetUncollectedSupplySideTokenAmounts gets a reference to the given []string and assigns it to the UncollectedSupplySideTokenAmounts field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetUncollectedSupplySideTokenAmounts(v []string) {
	o.UncollectedSupplySideTokenAmounts = v
}

// GetUncollectedSupplySideValuesUsd returns the UncollectedSupplySideValuesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedSupplySideValuesUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UncollectedSupplySideValuesUsd
}

// GetUncollectedSupplySideValuesUsdOk returns a tuple with the UncollectedSupplySideValuesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetUncollectedSupplySideValuesUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.UncollectedSupplySideValuesUsd) {
		return nil, false
	}
	return o.UncollectedSupplySideValuesUsd, true
}

// HasUncollectedSupplySideValuesUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasUncollectedSupplySideValuesUsd() bool {
	if o != nil && IsNil(o.UncollectedSupplySideValuesUsd) {
		return true
	}

	return false
}

// SetUncollectedSupplySideValuesUsd gets a reference to the given []string and assigns it to the UncollectedSupplySideValuesUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetUncollectedSupplySideValuesUsd(v []string) {
	o.UncollectedSupplySideValuesUsd = v
}

// GetCumulativeSupplySideRevenueUsd returns the CumulativeSupplySideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeSupplySideRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeSupplySideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeSupplySideRevenueUsd.Get()
}

// GetCumulativeSupplySideRevenueUsdOk returns a tuple with the CumulativeSupplySideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeSupplySideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeSupplySideRevenueUsd.Get(), o.CumulativeSupplySideRevenueUsd.IsSet()
}

// HasCumulativeSupplySideRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeSupplySideRevenueUsd() bool {
	if o != nil && o.CumulativeSupplySideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeSupplySideRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeSupplySideRevenueUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeSupplySideRevenueUsd(v string) {
	o.CumulativeSupplySideRevenueUsd.Set(&v)
}
// SetCumulativeSupplySideRevenueUsdNil sets the value for CumulativeSupplySideRevenueUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeSupplySideRevenueUsdNil() {
	o.CumulativeSupplySideRevenueUsd.Set(nil)
}

// UnsetCumulativeSupplySideRevenueUsd ensures that no value is present for CumulativeSupplySideRevenueUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeSupplySideRevenueUsd() {
	o.CumulativeSupplySideRevenueUsd.Unset()
}

// GetHourlySupplySideRevenueUsd returns the HourlySupplySideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlySupplySideRevenueUsd() string {
	if o == nil || IsNil(o.HourlySupplySideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlySupplySideRevenueUsd.Get()
}

// GetHourlySupplySideRevenueUsdOk returns a tuple with the HourlySupplySideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlySupplySideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlySupplySideRevenueUsd.Get(), o.HourlySupplySideRevenueUsd.IsSet()
}

// HasHourlySupplySideRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlySupplySideRevenueUsd() bool {
	if o != nil && o.HourlySupplySideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlySupplySideRevenueUsd gets a reference to the given NullableString and assigns it to the HourlySupplySideRevenueUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlySupplySideRevenueUsd(v string) {
	o.HourlySupplySideRevenueUsd.Set(&v)
}
// SetHourlySupplySideRevenueUsdNil sets the value for HourlySupplySideRevenueUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlySupplySideRevenueUsdNil() {
	o.HourlySupplySideRevenueUsd.Set(nil)
}

// UnsetHourlySupplySideRevenueUsd ensures that no value is present for HourlySupplySideRevenueUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlySupplySideRevenueUsd() {
	o.HourlySupplySideRevenueUsd.Unset()
}

// GetCumulativeProtocolSideRevenueUsd returns the CumulativeProtocolSideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeProtocolSideRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeProtocolSideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeProtocolSideRevenueUsd.Get()
}

// GetCumulativeProtocolSideRevenueUsdOk returns a tuple with the CumulativeProtocolSideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeProtocolSideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeProtocolSideRevenueUsd.Get(), o.CumulativeProtocolSideRevenueUsd.IsSet()
}

// HasCumulativeProtocolSideRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeProtocolSideRevenueUsd() bool {
	if o != nil && o.CumulativeProtocolSideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeProtocolSideRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeProtocolSideRevenueUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeProtocolSideRevenueUsd(v string) {
	o.CumulativeProtocolSideRevenueUsd.Set(&v)
}
// SetCumulativeProtocolSideRevenueUsdNil sets the value for CumulativeProtocolSideRevenueUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeProtocolSideRevenueUsdNil() {
	o.CumulativeProtocolSideRevenueUsd.Set(nil)
}

// UnsetCumulativeProtocolSideRevenueUsd ensures that no value is present for CumulativeProtocolSideRevenueUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeProtocolSideRevenueUsd() {
	o.CumulativeProtocolSideRevenueUsd.Unset()
}

// GetHourlyProtocolSideRevenueUsd returns the HourlyProtocolSideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyProtocolSideRevenueUsd() string {
	if o == nil || IsNil(o.HourlyProtocolSideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyProtocolSideRevenueUsd.Get()
}

// GetHourlyProtocolSideRevenueUsdOk returns a tuple with the HourlyProtocolSideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyProtocolSideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyProtocolSideRevenueUsd.Get(), o.HourlyProtocolSideRevenueUsd.IsSet()
}

// HasHourlyProtocolSideRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyProtocolSideRevenueUsd() bool {
	if o != nil && o.HourlyProtocolSideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyProtocolSideRevenueUsd gets a reference to the given NullableString and assigns it to the HourlyProtocolSideRevenueUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyProtocolSideRevenueUsd(v string) {
	o.HourlyProtocolSideRevenueUsd.Set(&v)
}
// SetHourlyProtocolSideRevenueUsdNil sets the value for HourlyProtocolSideRevenueUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyProtocolSideRevenueUsdNil() {
	o.HourlyProtocolSideRevenueUsd.Set(nil)
}

// UnsetHourlyProtocolSideRevenueUsd ensures that no value is present for HourlyProtocolSideRevenueUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlyProtocolSideRevenueUsd() {
	o.HourlyProtocolSideRevenueUsd.Unset()
}

// GetCumulativeTotalRevenueUsd returns the CumulativeTotalRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeTotalRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeTotalRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeTotalRevenueUsd.Get()
}

// GetCumulativeTotalRevenueUsdOk returns a tuple with the CumulativeTotalRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeTotalRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeTotalRevenueUsd.Get(), o.CumulativeTotalRevenueUsd.IsSet()
}

// HasCumulativeTotalRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeTotalRevenueUsd() bool {
	if o != nil && o.CumulativeTotalRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeTotalRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeTotalRevenueUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeTotalRevenueUsd(v string) {
	o.CumulativeTotalRevenueUsd.Set(&v)
}
// SetCumulativeTotalRevenueUsdNil sets the value for CumulativeTotalRevenueUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeTotalRevenueUsdNil() {
	o.CumulativeTotalRevenueUsd.Set(nil)
}

// UnsetCumulativeTotalRevenueUsd ensures that no value is present for CumulativeTotalRevenueUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeTotalRevenueUsd() {
	o.CumulativeTotalRevenueUsd.Unset()
}

// GetHourlyTotalRevenueUsd returns the HourlyTotalRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyTotalRevenueUsd() string {
	if o == nil || IsNil(o.HourlyTotalRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyTotalRevenueUsd.Get()
}

// GetHourlyTotalRevenueUsdOk returns a tuple with the HourlyTotalRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyTotalRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyTotalRevenueUsd.Get(), o.HourlyTotalRevenueUsd.IsSet()
}

// HasHourlyTotalRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyTotalRevenueUsd() bool {
	if o != nil && o.HourlyTotalRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyTotalRevenueUsd gets a reference to the given NullableString and assigns it to the HourlyTotalRevenueUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyTotalRevenueUsd(v string) {
	o.HourlyTotalRevenueUsd.Set(&v)
}
// SetHourlyTotalRevenueUsdNil sets the value for HourlyTotalRevenueUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyTotalRevenueUsdNil() {
	o.HourlyTotalRevenueUsd.Set(nil)
}

// UnsetHourlyTotalRevenueUsd ensures that no value is present for HourlyTotalRevenueUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlyTotalRevenueUsd() {
	o.HourlyTotalRevenueUsd.Unset()
}

// GetCumulativeVolumeUsd returns the CumulativeVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeUsd() string {
	if o == nil || IsNil(o.CumulativeVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeVolumeUsd.Get()
}

// GetCumulativeVolumeUsdOk returns a tuple with the CumulativeVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeVolumeUsd.Get(), o.CumulativeVolumeUsd.IsSet()
}

// HasCumulativeVolumeUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeVolumeUsd() bool {
	if o != nil && o.CumulativeVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeVolumeUsd gets a reference to the given NullableString and assigns it to the CumulativeVolumeUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeVolumeUsd(v string) {
	o.CumulativeVolumeUsd.Set(&v)
}
// SetCumulativeVolumeUsdNil sets the value for CumulativeVolumeUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeVolumeUsdNil() {
	o.CumulativeVolumeUsd.Set(nil)
}

// UnsetCumulativeVolumeUsd ensures that no value is present for CumulativeVolumeUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeVolumeUsd() {
	o.CumulativeVolumeUsd.Unset()
}

// GetHourlyVolumeUsd returns the HourlyVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeUsd() string {
	if o == nil || IsNil(o.HourlyVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyVolumeUsd.Get()
}

// GetHourlyVolumeUsdOk returns a tuple with the HourlyVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyVolumeUsd.Get(), o.HourlyVolumeUsd.IsSet()
}

// HasHourlyVolumeUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyVolumeUsd() bool {
	if o != nil && o.HourlyVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyVolumeUsd gets a reference to the given NullableString and assigns it to the HourlyVolumeUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeUsd(v string) {
	o.HourlyVolumeUsd.Set(&v)
}
// SetHourlyVolumeUsdNil sets the value for HourlyVolumeUsd to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeUsdNil() {
	o.HourlyVolumeUsd.Set(nil)
}

// UnsetHourlyVolumeUsd ensures that no value is present for HourlyVolumeUsd, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlyVolumeUsd() {
	o.HourlyVolumeUsd.Unset()
}

// GetCumulativeVolumeByTokenAmount returns the CumulativeVolumeByTokenAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeByTokenAmount() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CumulativeVolumeByTokenAmount
}

// GetCumulativeVolumeByTokenAmountOk returns a tuple with the CumulativeVolumeByTokenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeByTokenAmountOk() ([]string, bool) {
	if o == nil || IsNil(o.CumulativeVolumeByTokenAmount) {
		return nil, false
	}
	return o.CumulativeVolumeByTokenAmount, true
}

// HasCumulativeVolumeByTokenAmount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeVolumeByTokenAmount() bool {
	if o != nil && IsNil(o.CumulativeVolumeByTokenAmount) {
		return true
	}

	return false
}

// SetCumulativeVolumeByTokenAmount gets a reference to the given []string and assigns it to the CumulativeVolumeByTokenAmount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeVolumeByTokenAmount(v []string) {
	o.CumulativeVolumeByTokenAmount = v
}

// GetHourlyVolumeByTokenAmount returns the HourlyVolumeByTokenAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenAmount() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HourlyVolumeByTokenAmount
}

// GetHourlyVolumeByTokenAmountOk returns a tuple with the HourlyVolumeByTokenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenAmountOk() ([]string, bool) {
	if o == nil || IsNil(o.HourlyVolumeByTokenAmount) {
		return nil, false
	}
	return o.HourlyVolumeByTokenAmount, true
}

// HasHourlyVolumeByTokenAmount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyVolumeByTokenAmount() bool {
	if o != nil && IsNil(o.HourlyVolumeByTokenAmount) {
		return true
	}

	return false
}

// SetHourlyVolumeByTokenAmount gets a reference to the given []string and assigns it to the HourlyVolumeByTokenAmount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeByTokenAmount(v []string) {
	o.HourlyVolumeByTokenAmount = v
}

// GetCumulativeVolumeByTokenUsd returns the CumulativeVolumeByTokenUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeByTokenUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CumulativeVolumeByTokenUsd
}

// GetCumulativeVolumeByTokenUsdOk returns a tuple with the CumulativeVolumeByTokenUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeByTokenUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.CumulativeVolumeByTokenUsd) {
		return nil, false
	}
	return o.CumulativeVolumeByTokenUsd, true
}

// HasCumulativeVolumeByTokenUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeVolumeByTokenUsd() bool {
	if o != nil && IsNil(o.CumulativeVolumeByTokenUsd) {
		return true
	}

	return false
}

// SetCumulativeVolumeByTokenUsd gets a reference to the given []string and assigns it to the CumulativeVolumeByTokenUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeVolumeByTokenUsd(v []string) {
	o.CumulativeVolumeByTokenUsd = v
}

// GetHourlyVolumeByTokenUsd returns the HourlyVolumeByTokenUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HourlyVolumeByTokenUsd
}

// GetHourlyVolumeByTokenUsdOk returns a tuple with the HourlyVolumeByTokenUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.HourlyVolumeByTokenUsd) {
		return nil, false
	}
	return o.HourlyVolumeByTokenUsd, true
}

// HasHourlyVolumeByTokenUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyVolumeByTokenUsd() bool {
	if o != nil && IsNil(o.HourlyVolumeByTokenUsd) {
		return true
	}

	return false
}

// SetHourlyVolumeByTokenUsd gets a reference to the given []string and assigns it to the HourlyVolumeByTokenUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeByTokenUsd(v []string) {
	o.HourlyVolumeByTokenUsd = v
}

// GetInputTokenBalances returns the InputTokenBalances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenBalances() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenBalances
}

// GetInputTokenBalancesOk returns a tuple with the InputTokenBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenBalancesOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenBalances) {
		return nil, false
	}
	return o.InputTokenBalances, true
}

// HasInputTokenBalances returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasInputTokenBalances() bool {
	if o != nil && IsNil(o.InputTokenBalances) {
		return true
	}

	return false
}

// SetInputTokenBalances gets a reference to the given []string and assigns it to the InputTokenBalances field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetInputTokenBalances(v []string) {
	o.InputTokenBalances = v
}

// GetInputTokenBalancesUsd returns the InputTokenBalancesUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenBalancesUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenBalancesUsd
}

// GetInputTokenBalancesUsdOk returns a tuple with the InputTokenBalancesUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenBalancesUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenBalancesUsd) {
		return nil, false
	}
	return o.InputTokenBalancesUsd, true
}

// HasInputTokenBalancesUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasInputTokenBalancesUsd() bool {
	if o != nil && IsNil(o.InputTokenBalancesUsd) {
		return true
	}

	return false
}

// SetInputTokenBalancesUsd gets a reference to the given []string and assigns it to the InputTokenBalancesUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetInputTokenBalancesUsd(v []string) {
	o.InputTokenBalancesUsd = v
}

// GetInputTokenWeights returns the InputTokenWeights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenWeights() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenWeights
}

// GetInputTokenWeightsOk returns a tuple with the InputTokenWeights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenWeightsOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenWeights) {
		return nil, false
	}
	return o.InputTokenWeights, true
}

// HasInputTokenWeights returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasInputTokenWeights() bool {
	if o != nil && IsNil(o.InputTokenWeights) {
		return true
	}

	return false
}

// SetInputTokenWeights gets a reference to the given []string and assigns it to the InputTokenWeights field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetInputTokenWeights(v []string) {
	o.InputTokenWeights = v
}

// GetStakedOutputTokenAmount returns the StakedOutputTokenAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetStakedOutputTokenAmount() string {
	if o == nil || IsNil(o.StakedOutputTokenAmount.Get()) {
		var ret string
		return ret
	}
	return *o.StakedOutputTokenAmount.Get()
}

// GetStakedOutputTokenAmountOk returns a tuple with the StakedOutputTokenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetStakedOutputTokenAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StakedOutputTokenAmount.Get(), o.StakedOutputTokenAmount.IsSet()
}

// HasStakedOutputTokenAmount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasStakedOutputTokenAmount() bool {
	if o != nil && o.StakedOutputTokenAmount.IsSet() {
		return true
	}

	return false
}

// SetStakedOutputTokenAmount gets a reference to the given NullableString and assigns it to the StakedOutputTokenAmount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetStakedOutputTokenAmount(v string) {
	o.StakedOutputTokenAmount.Set(&v)
}
// SetStakedOutputTokenAmountNil sets the value for StakedOutputTokenAmount to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetStakedOutputTokenAmountNil() {
	o.StakedOutputTokenAmount.Set(nil)
}

// UnsetStakedOutputTokenAmount ensures that no value is present for StakedOutputTokenAmount, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetStakedOutputTokenAmount() {
	o.StakedOutputTokenAmount.Unset()
}

// GetRewardTokenEmissionsAmount returns the RewardTokenEmissionsAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsAmount() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokenEmissionsAmount
}

// GetRewardTokenEmissionsAmountOk returns a tuple with the RewardTokenEmissionsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsAmountOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokenEmissionsAmount) {
		return nil, false
	}
	return o.RewardTokenEmissionsAmount, true
}

// HasRewardTokenEmissionsAmount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasRewardTokenEmissionsAmount() bool {
	if o != nil && IsNil(o.RewardTokenEmissionsAmount) {
		return true
	}

	return false
}

// SetRewardTokenEmissionsAmount gets a reference to the given []string and assigns it to the RewardTokenEmissionsAmount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetRewardTokenEmissionsAmount(v []string) {
	o.RewardTokenEmissionsAmount = v
}

// GetRewardTokenEmissionsUsd returns the RewardTokenEmissionsUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokenEmissionsUsd
}

// GetRewardTokenEmissionsUsdOk returns a tuple with the RewardTokenEmissionsUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokenEmissionsUsd) {
		return nil, false
	}
	return o.RewardTokenEmissionsUsd, true
}

// HasRewardTokenEmissionsUsd returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasRewardTokenEmissionsUsd() bool {
	if o != nil && IsNil(o.RewardTokenEmissionsUsd) {
		return true
	}

	return false
}

// SetRewardTokenEmissionsUsd gets a reference to the given []string and assigns it to the RewardTokenEmissionsUsd field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetRewardTokenEmissionsUsd(v []string) {
	o.RewardTokenEmissionsUsd = v
}

// GetCumulativeDepositCount returns the CumulativeDepositCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeDepositCount() int32 {
	if o == nil || IsNil(o.CumulativeDepositCount) {
		var ret int32
		return ret
	}
	return *o.CumulativeDepositCount
}

// GetCumulativeDepositCountOk returns a tuple with the CumulativeDepositCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeDepositCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CumulativeDepositCount) {
		return nil, false
	}
	return o.CumulativeDepositCount, true
}

// HasCumulativeDepositCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeDepositCount() bool {
	if o != nil && !IsNil(o.CumulativeDepositCount) {
		return true
	}

	return false
}

// SetCumulativeDepositCount gets a reference to the given int32 and assigns it to the CumulativeDepositCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeDepositCount(v int32) {
	o.CumulativeDepositCount = &v
}

// GetHourlyDepositCount returns the HourlyDepositCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyDepositCount() int32 {
	if o == nil || IsNil(o.HourlyDepositCount) {
		var ret int32
		return ret
	}
	return *o.HourlyDepositCount
}

// GetHourlyDepositCountOk returns a tuple with the HourlyDepositCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyDepositCountOk() (*int32, bool) {
	if o == nil || IsNil(o.HourlyDepositCount) {
		return nil, false
	}
	return o.HourlyDepositCount, true
}

// HasHourlyDepositCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyDepositCount() bool {
	if o != nil && !IsNil(o.HourlyDepositCount) {
		return true
	}

	return false
}

// SetHourlyDepositCount gets a reference to the given int32 and assigns it to the HourlyDepositCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyDepositCount(v int32) {
	o.HourlyDepositCount = &v
}

// GetCumulativeWithdrawCount returns the CumulativeWithdrawCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeWithdrawCount() int32 {
	if o == nil || IsNil(o.CumulativeWithdrawCount) {
		var ret int32
		return ret
	}
	return *o.CumulativeWithdrawCount
}

// GetCumulativeWithdrawCountOk returns a tuple with the CumulativeWithdrawCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeWithdrawCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CumulativeWithdrawCount) {
		return nil, false
	}
	return o.CumulativeWithdrawCount, true
}

// HasCumulativeWithdrawCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeWithdrawCount() bool {
	if o != nil && !IsNil(o.CumulativeWithdrawCount) {
		return true
	}

	return false
}

// SetCumulativeWithdrawCount gets a reference to the given int32 and assigns it to the CumulativeWithdrawCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeWithdrawCount(v int32) {
	o.CumulativeWithdrawCount = &v
}

// GetHourlyWithdrawCount returns the HourlyWithdrawCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyWithdrawCount() int32 {
	if o == nil || IsNil(o.HourlyWithdrawCount) {
		var ret int32
		return ret
	}
	return *o.HourlyWithdrawCount
}

// GetHourlyWithdrawCountOk returns a tuple with the HourlyWithdrawCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyWithdrawCountOk() (*int32, bool) {
	if o == nil || IsNil(o.HourlyWithdrawCount) {
		return nil, false
	}
	return o.HourlyWithdrawCount, true
}

// HasHourlyWithdrawCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyWithdrawCount() bool {
	if o != nil && !IsNil(o.HourlyWithdrawCount) {
		return true
	}

	return false
}

// SetHourlyWithdrawCount gets a reference to the given int32 and assigns it to the HourlyWithdrawCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyWithdrawCount(v int32) {
	o.HourlyWithdrawCount = &v
}

// GetCumulativeSwapCount returns the CumulativeSwapCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeSwapCount() int32 {
	if o == nil || IsNil(o.CumulativeSwapCount) {
		var ret int32
		return ret
	}
	return *o.CumulativeSwapCount
}

// GetCumulativeSwapCountOk returns a tuple with the CumulativeSwapCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeSwapCountOk() (*int32, bool) {
	if o == nil || IsNil(o.CumulativeSwapCount) {
		return nil, false
	}
	return o.CumulativeSwapCount, true
}

// HasCumulativeSwapCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeSwapCount() bool {
	if o != nil && !IsNil(o.CumulativeSwapCount) {
		return true
	}

	return false
}

// SetCumulativeSwapCount gets a reference to the given int32 and assigns it to the CumulativeSwapCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeSwapCount(v int32) {
	o.CumulativeSwapCount = &v
}

// GetHourlySwapCount returns the HourlySwapCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlySwapCount() int32 {
	if o == nil || IsNil(o.HourlySwapCount) {
		var ret int32
		return ret
	}
	return *o.HourlySwapCount
}

// GetHourlySwapCountOk returns a tuple with the HourlySwapCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlySwapCountOk() (*int32, bool) {
	if o == nil || IsNil(o.HourlySwapCount) {
		return nil, false
	}
	return o.HourlySwapCount, true
}

// HasHourlySwapCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlySwapCount() bool {
	if o != nil && !IsNil(o.HourlySwapCount) {
		return true
	}

	return false
}

// SetHourlySwapCount gets a reference to the given int32 and assigns it to the HourlySwapCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlySwapCount(v int32) {
	o.HourlySwapCount = &v
}

// GetPositionCount returns the PositionCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetPositionCount() int32 {
	if o == nil || IsNil(o.PositionCount) {
		var ret int32
		return ret
	}
	return *o.PositionCount
}

// GetPositionCountOk returns a tuple with the PositionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetPositionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PositionCount) {
		return nil, false
	}
	return o.PositionCount, true
}

// HasPositionCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasPositionCount() bool {
	if o != nil && !IsNil(o.PositionCount) {
		return true
	}

	return false
}

// SetPositionCount gets a reference to the given int32 and assigns it to the PositionCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetPositionCount(v int32) {
	o.PositionCount = &v
}

// GetOpenPositionCount returns the OpenPositionCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetOpenPositionCount() int32 {
	if o == nil || IsNil(o.OpenPositionCount) {
		var ret int32
		return ret
	}
	return *o.OpenPositionCount
}

// GetOpenPositionCountOk returns a tuple with the OpenPositionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetOpenPositionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.OpenPositionCount) {
		return nil, false
	}
	return o.OpenPositionCount, true
}

// HasOpenPositionCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasOpenPositionCount() bool {
	if o != nil && !IsNil(o.OpenPositionCount) {
		return true
	}

	return false
}

// SetOpenPositionCount gets a reference to the given int32 and assigns it to the OpenPositionCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetOpenPositionCount(v int32) {
	o.OpenPositionCount = &v
}

// GetClosedPositionCount returns the ClosedPositionCount field value if set, zero value otherwise.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetClosedPositionCount() int32 {
	if o == nil || IsNil(o.ClosedPositionCount) {
		var ret int32
		return ret
	}
	return *o.ClosedPositionCount
}

// GetClosedPositionCountOk returns a tuple with the ClosedPositionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetClosedPositionCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ClosedPositionCount) {
		return nil, false
	}
	return o.ClosedPositionCount, true
}

// HasClosedPositionCount returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasClosedPositionCount() bool {
	if o != nil && !IsNil(o.ClosedPositionCount) {
		return true
	}

	return false
}

// SetClosedPositionCount gets a reference to the given int32 and assigns it to the ClosedPositionCount field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetClosedPositionCount(v int32) {
	o.ClosedPositionCount = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret string
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableString and assigns it to the Timestamp field.
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTimestamp(v string) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTimestamp() {
	o.Timestamp.Unset()
}

func (o UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.Hour) {
		toSerialize["hour"] = o.Hour
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.Pool.IsSet() {
		toSerialize["pool"] = o.Pool.Get()
	}
	if o.Tick.IsSet() {
		toSerialize["tick"] = o.Tick.Get()
	}
	if o.TotalValueLockedUsd.IsSet() {
		toSerialize["total_value_locked_usd"] = o.TotalValueLockedUsd.Get()
	}
	if o.TotalLiquidity.IsSet() {
		toSerialize["total_liquidity"] = o.TotalLiquidity.Get()
	}
	if o.TotalLiquidityUsd.IsSet() {
		toSerialize["total_liquidity_usd"] = o.TotalLiquidityUsd.Get()
	}
	if o.ActiveLiquidity.IsSet() {
		toSerialize["active_liquidity"] = o.ActiveLiquidity.Get()
	}
	if o.ActiveLiquidityUsd.IsSet() {
		toSerialize["active_liquidity_usd"] = o.ActiveLiquidityUsd.Get()
	}
	if o.UncollectedProtocolSideTokenAmounts != nil {
		toSerialize["uncollected_protocol_side_token_amounts"] = o.UncollectedProtocolSideTokenAmounts
	}
	if o.UncollectedProtocolSideValuesUsd != nil {
		toSerialize["uncollected_protocol_side_values_usd"] = o.UncollectedProtocolSideValuesUsd
	}
	if o.UncollectedSupplySideTokenAmounts != nil {
		toSerialize["uncollected_supply_side_token_amounts"] = o.UncollectedSupplySideTokenAmounts
	}
	if o.UncollectedSupplySideValuesUsd != nil {
		toSerialize["uncollected_supply_side_values_usd"] = o.UncollectedSupplySideValuesUsd
	}
	if o.CumulativeSupplySideRevenueUsd.IsSet() {
		toSerialize["cumulative_supply_side_revenue_usd"] = o.CumulativeSupplySideRevenueUsd.Get()
	}
	if o.HourlySupplySideRevenueUsd.IsSet() {
		toSerialize["hourly_supply_side_revenue_usd"] = o.HourlySupplySideRevenueUsd.Get()
	}
	if o.CumulativeProtocolSideRevenueUsd.IsSet() {
		toSerialize["cumulative_protocol_side_revenue_usd"] = o.CumulativeProtocolSideRevenueUsd.Get()
	}
	if o.HourlyProtocolSideRevenueUsd.IsSet() {
		toSerialize["hourly_protocol_side_revenue_usd"] = o.HourlyProtocolSideRevenueUsd.Get()
	}
	if o.CumulativeTotalRevenueUsd.IsSet() {
		toSerialize["cumulative_total_revenue_usd"] = o.CumulativeTotalRevenueUsd.Get()
	}
	if o.HourlyTotalRevenueUsd.IsSet() {
		toSerialize["hourly_total_revenue_usd"] = o.HourlyTotalRevenueUsd.Get()
	}
	if o.CumulativeVolumeUsd.IsSet() {
		toSerialize["cumulative_volume_usd"] = o.CumulativeVolumeUsd.Get()
	}
	if o.HourlyVolumeUsd.IsSet() {
		toSerialize["hourly_volume_usd"] = o.HourlyVolumeUsd.Get()
	}
	if o.CumulativeVolumeByTokenAmount != nil {
		toSerialize["cumulative_volume_by_token_amount"] = o.CumulativeVolumeByTokenAmount
	}
	if o.HourlyVolumeByTokenAmount != nil {
		toSerialize["hourly_volume_by_token_amount"] = o.HourlyVolumeByTokenAmount
	}
	if o.CumulativeVolumeByTokenUsd != nil {
		toSerialize["cumulative_volume_by_token_usd"] = o.CumulativeVolumeByTokenUsd
	}
	if o.HourlyVolumeByTokenUsd != nil {
		toSerialize["hourly_volume_by_token_usd"] = o.HourlyVolumeByTokenUsd
	}
	if o.InputTokenBalances != nil {
		toSerialize["input_token_balances"] = o.InputTokenBalances
	}
	if o.InputTokenBalancesUsd != nil {
		toSerialize["input_token_balances_usd"] = o.InputTokenBalancesUsd
	}
	if o.InputTokenWeights != nil {
		toSerialize["input_token_weights"] = o.InputTokenWeights
	}
	if o.StakedOutputTokenAmount.IsSet() {
		toSerialize["staked_output_token_amount"] = o.StakedOutputTokenAmount.Get()
	}
	if o.RewardTokenEmissionsAmount != nil {
		toSerialize["reward_token_emissions_amount"] = o.RewardTokenEmissionsAmount
	}
	if o.RewardTokenEmissionsUsd != nil {
		toSerialize["reward_token_emissions_usd"] = o.RewardTokenEmissionsUsd
	}
	if !IsNil(o.CumulativeDepositCount) {
		toSerialize["cumulative_deposit_count"] = o.CumulativeDepositCount
	}
	if !IsNil(o.HourlyDepositCount) {
		toSerialize["hourly_deposit_count"] = o.HourlyDepositCount
	}
	if !IsNil(o.CumulativeWithdrawCount) {
		toSerialize["cumulative_withdraw_count"] = o.CumulativeWithdrawCount
	}
	if !IsNil(o.HourlyWithdrawCount) {
		toSerialize["hourly_withdraw_count"] = o.HourlyWithdrawCount
	}
	if !IsNil(o.CumulativeSwapCount) {
		toSerialize["cumulative_swap_count"] = o.CumulativeSwapCount
	}
	if !IsNil(o.HourlySwapCount) {
		toSerialize["hourly_swap_count"] = o.HourlySwapCount
	}
	if !IsNil(o.PositionCount) {
		toSerialize["position_count"] = o.PositionCount
	}
	if !IsNil(o.OpenPositionCount) {
		toSerialize["open_position_count"] = o.OpenPositionCount
	}
	if !IsNil(o.ClosedPositionCount) {
		toSerialize["closed_position_count"] = o.ClosedPositionCount
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	return toSerialize, nil
}

type NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO struct {
	value *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO
	isSet bool
}

func (v NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) Get() *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO {
	return v.value
}

func (v *NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) Set(val *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO(val *UNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) *NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO {
	return &NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO{value: val, isSet: true}
}

func (v NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUNISWAPV3ETHEREUMLiquidityPoolHourlySnapshotDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


