/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO{}

// CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO 
type CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// 
	BlockRange NullableString `json:"block_range,omitempty"`
	// (smart contract address of the pool)-(# of hours since unix epoch time)
	Id NullableString `json:"id,omitempty"`
	// The protocol this snapshot belongs to
	Protocol NullableString `json:"protocol,omitempty"`
	// The pool this snapshot belongs to
	Pool NullableString `json:"pool,omitempty"`
	// Timestamp of this snapshot
	Timestamp NullableString `json:"timestamp,omitempty"`
	// Current TVL (Total Value Locked) of this pool
	TotalValueLockedUsd NullableString `json:"total_value_locked_usd,omitempty"`
	// All revenue generated by the liquidity pool, accrued to the supply side.
	CumulativeSupplySideRevenueUsd NullableString `json:"cumulative_supply_side_revenue_usd,omitempty"`
	// Hourly revenue generated by the liquidity pool, accrued to the supply side.
	HourlySupplySideRevenueUsd NullableString `json:"hourly_supply_side_revenue_usd,omitempty"`
	// All revenue generated by the liquidity pool, accrued to the protocol.
	CumulativeProtocolSideRevenueUsd NullableString `json:"cumulative_protocol_side_revenue_usd,omitempty"`
	// Hourly revenue generated by the liquidity pool, accrued to the protocol.
	HourlyProtocolSideRevenueUsd NullableString `json:"hourly_protocol_side_revenue_usd,omitempty"`
	// All revenue generated by the liquidity pool.
	CumulativeTotalRevenueUsd NullableString `json:"cumulative_total_revenue_usd,omitempty"`
	// Hourly revenue generated by the liquidity pool.
	HourlyTotalRevenueUsd NullableString `json:"hourly_total_revenue_usd,omitempty"`
	// All trade volume occurred in a given hour, in USD
	HourlyVolumeUsd NullableString `json:"hourly_volume_usd,omitempty"`
	// All trade volume occurred in a given hour for a specific input token, in native amount. The ordering should be the same as the pool's 'inputTokens' field.
	HourlyVolumeByTokenAmount []string `json:"hourly_volume_by_token_amount,omitempty"`
	// All trade volume occurred in a given hour for a specific input token, in USD. The ordering should be the same as the pool's 'inputTokens' field.
	HourlyVolumeByTokenUsd []string `json:"hourly_volume_by_token_usd,omitempty"`
	// All historical trade volume occurred in this pool, in USD
	CumulativeVolumeUsd NullableString `json:"cumulative_volume_usd,omitempty"`
	// Amount of input tokens in the pool. The ordering should be the same as the pool's 'inputTokens' field.
	InputTokenBalances []string `json:"input_token_balances,omitempty"`
	// Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool
	InputTokenWeights []string `json:"input_token_weights,omitempty"`
	// Total supply of output token. Note that certain DEXes don't have an output token (e.g. Bancor)
	OutputTokenSupply NullableString `json:"output_token_supply,omitempty"`
	// Price per share of output token in USD
	OutputTokenPriceUsd NullableString `json:"output_token_price_usd,omitempty"`
	// Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
	StakedOutputTokenAmount NullableString `json:"staked_output_token_amount,omitempty"`
	// Per-block reward token emission as of the current block normalized to a day (not hour), in token's native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
	RewardTokenEmissionsAmount []string `json:"reward_token_emissions_amount,omitempty"`
	// Per-block reward token emission as of the current block normalized to a day (not hour), in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
	RewardTokenEmissionsUsd []string `json:"reward_token_emissions_usd,omitempty"`
}

// NewCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO instantiates a new CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO() *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO {
	this := CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO{}
	return &this
}

// NewCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTOWithDefaults instantiates a new CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTOWithDefaults() *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO {
	this := CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetBlockRange returns the BlockRange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetBlockRange() string {
	if o == nil || IsNil(o.BlockRange.Get()) {
		var ret string
		return ret
	}
	return *o.BlockRange.Get()
}

// GetBlockRangeOk returns a tuple with the BlockRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetBlockRangeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockRange.Get(), o.BlockRange.IsSet()
}

// HasBlockRange returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasBlockRange() bool {
	if o != nil && o.BlockRange.IsSet() {
		return true
	}

	return false
}

// SetBlockRange gets a reference to the given NullableString and assigns it to the BlockRange field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetBlockRange(v string) {
	o.BlockRange.Set(&v)
}
// SetBlockRangeNil sets the value for BlockRange to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetBlockRangeNil() {
	o.BlockRange.Set(nil)
}

// UnsetBlockRange ensures that no value is present for BlockRange, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetBlockRange() {
	o.BlockRange.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetId() {
	o.Id.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetProtocol() string {
	if o == nil || IsNil(o.Protocol.Get()) {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetPool returns the Pool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetPool() string {
	if o == nil || IsNil(o.Pool.Get()) {
		var ret string
		return ret
	}
	return *o.Pool.Get()
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetPoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pool.Get(), o.Pool.IsSet()
}

// HasPool returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasPool() bool {
	if o != nil && o.Pool.IsSet() {
		return true
	}

	return false
}

// SetPool gets a reference to the given NullableString and assigns it to the Pool field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetPool(v string) {
	o.Pool.Set(&v)
}
// SetPoolNil sets the value for Pool to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetPoolNil() {
	o.Pool.Set(nil)
}

// UnsetPool ensures that no value is present for Pool, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetPool() {
	o.Pool.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret string
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableString and assigns it to the Timestamp field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetTimestamp(v string) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetTotalValueLockedUsd returns the TotalValueLockedUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalValueLockedUsd() string {
	if o == nil || IsNil(o.TotalValueLockedUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsd.Get()
}

// GetTotalValueLockedUsdOk returns a tuple with the TotalValueLockedUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetTotalValueLockedUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsd.Get(), o.TotalValueLockedUsd.IsSet()
}

// HasTotalValueLockedUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasTotalValueLockedUsd() bool {
	if o != nil && o.TotalValueLockedUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsd gets a reference to the given NullableString and assigns it to the TotalValueLockedUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalValueLockedUsd(v string) {
	o.TotalValueLockedUsd.Set(&v)
}
// SetTotalValueLockedUsdNil sets the value for TotalValueLockedUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetTotalValueLockedUsdNil() {
	o.TotalValueLockedUsd.Set(nil)
}

// UnsetTotalValueLockedUsd ensures that no value is present for TotalValueLockedUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetTotalValueLockedUsd() {
	o.TotalValueLockedUsd.Unset()
}

// GetCumulativeSupplySideRevenueUsd returns the CumulativeSupplySideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeSupplySideRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeSupplySideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeSupplySideRevenueUsd.Get()
}

// GetCumulativeSupplySideRevenueUsdOk returns a tuple with the CumulativeSupplySideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeSupplySideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeSupplySideRevenueUsd.Get(), o.CumulativeSupplySideRevenueUsd.IsSet()
}

// HasCumulativeSupplySideRevenueUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeSupplySideRevenueUsd() bool {
	if o != nil && o.CumulativeSupplySideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeSupplySideRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeSupplySideRevenueUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeSupplySideRevenueUsd(v string) {
	o.CumulativeSupplySideRevenueUsd.Set(&v)
}
// SetCumulativeSupplySideRevenueUsdNil sets the value for CumulativeSupplySideRevenueUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeSupplySideRevenueUsdNil() {
	o.CumulativeSupplySideRevenueUsd.Set(nil)
}

// UnsetCumulativeSupplySideRevenueUsd ensures that no value is present for CumulativeSupplySideRevenueUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeSupplySideRevenueUsd() {
	o.CumulativeSupplySideRevenueUsd.Unset()
}

// GetHourlySupplySideRevenueUsd returns the HourlySupplySideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlySupplySideRevenueUsd() string {
	if o == nil || IsNil(o.HourlySupplySideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlySupplySideRevenueUsd.Get()
}

// GetHourlySupplySideRevenueUsdOk returns a tuple with the HourlySupplySideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlySupplySideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlySupplySideRevenueUsd.Get(), o.HourlySupplySideRevenueUsd.IsSet()
}

// HasHourlySupplySideRevenueUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlySupplySideRevenueUsd() bool {
	if o != nil && o.HourlySupplySideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlySupplySideRevenueUsd gets a reference to the given NullableString and assigns it to the HourlySupplySideRevenueUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlySupplySideRevenueUsd(v string) {
	o.HourlySupplySideRevenueUsd.Set(&v)
}
// SetHourlySupplySideRevenueUsdNil sets the value for HourlySupplySideRevenueUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlySupplySideRevenueUsdNil() {
	o.HourlySupplySideRevenueUsd.Set(nil)
}

// UnsetHourlySupplySideRevenueUsd ensures that no value is present for HourlySupplySideRevenueUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlySupplySideRevenueUsd() {
	o.HourlySupplySideRevenueUsd.Unset()
}

// GetCumulativeProtocolSideRevenueUsd returns the CumulativeProtocolSideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeProtocolSideRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeProtocolSideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeProtocolSideRevenueUsd.Get()
}

// GetCumulativeProtocolSideRevenueUsdOk returns a tuple with the CumulativeProtocolSideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeProtocolSideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeProtocolSideRevenueUsd.Get(), o.CumulativeProtocolSideRevenueUsd.IsSet()
}

// HasCumulativeProtocolSideRevenueUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeProtocolSideRevenueUsd() bool {
	if o != nil && o.CumulativeProtocolSideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeProtocolSideRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeProtocolSideRevenueUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeProtocolSideRevenueUsd(v string) {
	o.CumulativeProtocolSideRevenueUsd.Set(&v)
}
// SetCumulativeProtocolSideRevenueUsdNil sets the value for CumulativeProtocolSideRevenueUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeProtocolSideRevenueUsdNil() {
	o.CumulativeProtocolSideRevenueUsd.Set(nil)
}

// UnsetCumulativeProtocolSideRevenueUsd ensures that no value is present for CumulativeProtocolSideRevenueUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeProtocolSideRevenueUsd() {
	o.CumulativeProtocolSideRevenueUsd.Unset()
}

// GetHourlyProtocolSideRevenueUsd returns the HourlyProtocolSideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyProtocolSideRevenueUsd() string {
	if o == nil || IsNil(o.HourlyProtocolSideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyProtocolSideRevenueUsd.Get()
}

// GetHourlyProtocolSideRevenueUsdOk returns a tuple with the HourlyProtocolSideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyProtocolSideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyProtocolSideRevenueUsd.Get(), o.HourlyProtocolSideRevenueUsd.IsSet()
}

// HasHourlyProtocolSideRevenueUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyProtocolSideRevenueUsd() bool {
	if o != nil && o.HourlyProtocolSideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyProtocolSideRevenueUsd gets a reference to the given NullableString and assigns it to the HourlyProtocolSideRevenueUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyProtocolSideRevenueUsd(v string) {
	o.HourlyProtocolSideRevenueUsd.Set(&v)
}
// SetHourlyProtocolSideRevenueUsdNil sets the value for HourlyProtocolSideRevenueUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyProtocolSideRevenueUsdNil() {
	o.HourlyProtocolSideRevenueUsd.Set(nil)
}

// UnsetHourlyProtocolSideRevenueUsd ensures that no value is present for HourlyProtocolSideRevenueUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlyProtocolSideRevenueUsd() {
	o.HourlyProtocolSideRevenueUsd.Unset()
}

// GetCumulativeTotalRevenueUsd returns the CumulativeTotalRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeTotalRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeTotalRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeTotalRevenueUsd.Get()
}

// GetCumulativeTotalRevenueUsdOk returns a tuple with the CumulativeTotalRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeTotalRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeTotalRevenueUsd.Get(), o.CumulativeTotalRevenueUsd.IsSet()
}

// HasCumulativeTotalRevenueUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeTotalRevenueUsd() bool {
	if o != nil && o.CumulativeTotalRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeTotalRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeTotalRevenueUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeTotalRevenueUsd(v string) {
	o.CumulativeTotalRevenueUsd.Set(&v)
}
// SetCumulativeTotalRevenueUsdNil sets the value for CumulativeTotalRevenueUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeTotalRevenueUsdNil() {
	o.CumulativeTotalRevenueUsd.Set(nil)
}

// UnsetCumulativeTotalRevenueUsd ensures that no value is present for CumulativeTotalRevenueUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeTotalRevenueUsd() {
	o.CumulativeTotalRevenueUsd.Unset()
}

// GetHourlyTotalRevenueUsd returns the HourlyTotalRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyTotalRevenueUsd() string {
	if o == nil || IsNil(o.HourlyTotalRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyTotalRevenueUsd.Get()
}

// GetHourlyTotalRevenueUsdOk returns a tuple with the HourlyTotalRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyTotalRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyTotalRevenueUsd.Get(), o.HourlyTotalRevenueUsd.IsSet()
}

// HasHourlyTotalRevenueUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyTotalRevenueUsd() bool {
	if o != nil && o.HourlyTotalRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyTotalRevenueUsd gets a reference to the given NullableString and assigns it to the HourlyTotalRevenueUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyTotalRevenueUsd(v string) {
	o.HourlyTotalRevenueUsd.Set(&v)
}
// SetHourlyTotalRevenueUsdNil sets the value for HourlyTotalRevenueUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyTotalRevenueUsdNil() {
	o.HourlyTotalRevenueUsd.Set(nil)
}

// UnsetHourlyTotalRevenueUsd ensures that no value is present for HourlyTotalRevenueUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlyTotalRevenueUsd() {
	o.HourlyTotalRevenueUsd.Unset()
}

// GetHourlyVolumeUsd returns the HourlyVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeUsd() string {
	if o == nil || IsNil(o.HourlyVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.HourlyVolumeUsd.Get()
}

// GetHourlyVolumeUsdOk returns a tuple with the HourlyVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HourlyVolumeUsd.Get(), o.HourlyVolumeUsd.IsSet()
}

// HasHourlyVolumeUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyVolumeUsd() bool {
	if o != nil && o.HourlyVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetHourlyVolumeUsd gets a reference to the given NullableString and assigns it to the HourlyVolumeUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeUsd(v string) {
	o.HourlyVolumeUsd.Set(&v)
}
// SetHourlyVolumeUsdNil sets the value for HourlyVolumeUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeUsdNil() {
	o.HourlyVolumeUsd.Set(nil)
}

// UnsetHourlyVolumeUsd ensures that no value is present for HourlyVolumeUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetHourlyVolumeUsd() {
	o.HourlyVolumeUsd.Unset()
}

// GetHourlyVolumeByTokenAmount returns the HourlyVolumeByTokenAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenAmount() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HourlyVolumeByTokenAmount
}

// GetHourlyVolumeByTokenAmountOk returns a tuple with the HourlyVolumeByTokenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenAmountOk() ([]string, bool) {
	if o == nil || IsNil(o.HourlyVolumeByTokenAmount) {
		return nil, false
	}
	return o.HourlyVolumeByTokenAmount, true
}

// HasHourlyVolumeByTokenAmount returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyVolumeByTokenAmount() bool {
	if o != nil && IsNil(o.HourlyVolumeByTokenAmount) {
		return true
	}

	return false
}

// SetHourlyVolumeByTokenAmount gets a reference to the given []string and assigns it to the HourlyVolumeByTokenAmount field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeByTokenAmount(v []string) {
	o.HourlyVolumeByTokenAmount = v
}

// GetHourlyVolumeByTokenUsd returns the HourlyVolumeByTokenUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.HourlyVolumeByTokenUsd
}

// GetHourlyVolumeByTokenUsdOk returns a tuple with the HourlyVolumeByTokenUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetHourlyVolumeByTokenUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.HourlyVolumeByTokenUsd) {
		return nil, false
	}
	return o.HourlyVolumeByTokenUsd, true
}

// HasHourlyVolumeByTokenUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasHourlyVolumeByTokenUsd() bool {
	if o != nil && IsNil(o.HourlyVolumeByTokenUsd) {
		return true
	}

	return false
}

// SetHourlyVolumeByTokenUsd gets a reference to the given []string and assigns it to the HourlyVolumeByTokenUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetHourlyVolumeByTokenUsd(v []string) {
	o.HourlyVolumeByTokenUsd = v
}

// GetCumulativeVolumeUsd returns the CumulativeVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeUsd() string {
	if o == nil || IsNil(o.CumulativeVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeVolumeUsd.Get()
}

// GetCumulativeVolumeUsdOk returns a tuple with the CumulativeVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetCumulativeVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeVolumeUsd.Get(), o.CumulativeVolumeUsd.IsSet()
}

// HasCumulativeVolumeUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasCumulativeVolumeUsd() bool {
	if o != nil && o.CumulativeVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeVolumeUsd gets a reference to the given NullableString and assigns it to the CumulativeVolumeUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeVolumeUsd(v string) {
	o.CumulativeVolumeUsd.Set(&v)
}
// SetCumulativeVolumeUsdNil sets the value for CumulativeVolumeUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetCumulativeVolumeUsdNil() {
	o.CumulativeVolumeUsd.Set(nil)
}

// UnsetCumulativeVolumeUsd ensures that no value is present for CumulativeVolumeUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetCumulativeVolumeUsd() {
	o.CumulativeVolumeUsd.Unset()
}

// GetInputTokenBalances returns the InputTokenBalances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenBalances() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenBalances
}

// GetInputTokenBalancesOk returns a tuple with the InputTokenBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenBalancesOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenBalances) {
		return nil, false
	}
	return o.InputTokenBalances, true
}

// HasInputTokenBalances returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasInputTokenBalances() bool {
	if o != nil && IsNil(o.InputTokenBalances) {
		return true
	}

	return false
}

// SetInputTokenBalances gets a reference to the given []string and assigns it to the InputTokenBalances field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetInputTokenBalances(v []string) {
	o.InputTokenBalances = v
}

// GetInputTokenWeights returns the InputTokenWeights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenWeights() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenWeights
}

// GetInputTokenWeightsOk returns a tuple with the InputTokenWeights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetInputTokenWeightsOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenWeights) {
		return nil, false
	}
	return o.InputTokenWeights, true
}

// HasInputTokenWeights returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasInputTokenWeights() bool {
	if o != nil && IsNil(o.InputTokenWeights) {
		return true
	}

	return false
}

// SetInputTokenWeights gets a reference to the given []string and assigns it to the InputTokenWeights field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetInputTokenWeights(v []string) {
	o.InputTokenWeights = v
}

// GetOutputTokenSupply returns the OutputTokenSupply field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetOutputTokenSupply() string {
	if o == nil || IsNil(o.OutputTokenSupply.Get()) {
		var ret string
		return ret
	}
	return *o.OutputTokenSupply.Get()
}

// GetOutputTokenSupplyOk returns a tuple with the OutputTokenSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetOutputTokenSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputTokenSupply.Get(), o.OutputTokenSupply.IsSet()
}

// HasOutputTokenSupply returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasOutputTokenSupply() bool {
	if o != nil && o.OutputTokenSupply.IsSet() {
		return true
	}

	return false
}

// SetOutputTokenSupply gets a reference to the given NullableString and assigns it to the OutputTokenSupply field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetOutputTokenSupply(v string) {
	o.OutputTokenSupply.Set(&v)
}
// SetOutputTokenSupplyNil sets the value for OutputTokenSupply to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetOutputTokenSupplyNil() {
	o.OutputTokenSupply.Set(nil)
}

// UnsetOutputTokenSupply ensures that no value is present for OutputTokenSupply, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetOutputTokenSupply() {
	o.OutputTokenSupply.Unset()
}

// GetOutputTokenPriceUsd returns the OutputTokenPriceUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetOutputTokenPriceUsd() string {
	if o == nil || IsNil(o.OutputTokenPriceUsd.Get()) {
		var ret string
		return ret
	}
	return *o.OutputTokenPriceUsd.Get()
}

// GetOutputTokenPriceUsdOk returns a tuple with the OutputTokenPriceUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetOutputTokenPriceUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputTokenPriceUsd.Get(), o.OutputTokenPriceUsd.IsSet()
}

// HasOutputTokenPriceUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasOutputTokenPriceUsd() bool {
	if o != nil && o.OutputTokenPriceUsd.IsSet() {
		return true
	}

	return false
}

// SetOutputTokenPriceUsd gets a reference to the given NullableString and assigns it to the OutputTokenPriceUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetOutputTokenPriceUsd(v string) {
	o.OutputTokenPriceUsd.Set(&v)
}
// SetOutputTokenPriceUsdNil sets the value for OutputTokenPriceUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetOutputTokenPriceUsdNil() {
	o.OutputTokenPriceUsd.Set(nil)
}

// UnsetOutputTokenPriceUsd ensures that no value is present for OutputTokenPriceUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetOutputTokenPriceUsd() {
	o.OutputTokenPriceUsd.Unset()
}

// GetStakedOutputTokenAmount returns the StakedOutputTokenAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetStakedOutputTokenAmount() string {
	if o == nil || IsNil(o.StakedOutputTokenAmount.Get()) {
		var ret string
		return ret
	}
	return *o.StakedOutputTokenAmount.Get()
}

// GetStakedOutputTokenAmountOk returns a tuple with the StakedOutputTokenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetStakedOutputTokenAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StakedOutputTokenAmount.Get(), o.StakedOutputTokenAmount.IsSet()
}

// HasStakedOutputTokenAmount returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasStakedOutputTokenAmount() bool {
	if o != nil && o.StakedOutputTokenAmount.IsSet() {
		return true
	}

	return false
}

// SetStakedOutputTokenAmount gets a reference to the given NullableString and assigns it to the StakedOutputTokenAmount field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetStakedOutputTokenAmount(v string) {
	o.StakedOutputTokenAmount.Set(&v)
}
// SetStakedOutputTokenAmountNil sets the value for StakedOutputTokenAmount to be an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetStakedOutputTokenAmountNil() {
	o.StakedOutputTokenAmount.Set(nil)
}

// UnsetStakedOutputTokenAmount ensures that no value is present for StakedOutputTokenAmount, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnsetStakedOutputTokenAmount() {
	o.StakedOutputTokenAmount.Unset()
}

// GetRewardTokenEmissionsAmount returns the RewardTokenEmissionsAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsAmount() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokenEmissionsAmount
}

// GetRewardTokenEmissionsAmountOk returns a tuple with the RewardTokenEmissionsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsAmountOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokenEmissionsAmount) {
		return nil, false
	}
	return o.RewardTokenEmissionsAmount, true
}

// HasRewardTokenEmissionsAmount returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasRewardTokenEmissionsAmount() bool {
	if o != nil && IsNil(o.RewardTokenEmissionsAmount) {
		return true
	}

	return false
}

// SetRewardTokenEmissionsAmount gets a reference to the given []string and assigns it to the RewardTokenEmissionsAmount field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetRewardTokenEmissionsAmount(v []string) {
	o.RewardTokenEmissionsAmount = v
}

// GetRewardTokenEmissionsUsd returns the RewardTokenEmissionsUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokenEmissionsUsd
}

// GetRewardTokenEmissionsUsdOk returns a tuple with the RewardTokenEmissionsUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) GetRewardTokenEmissionsUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokenEmissionsUsd) {
		return nil, false
	}
	return o.RewardTokenEmissionsUsd, true
}

// HasRewardTokenEmissionsUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) HasRewardTokenEmissionsUsd() bool {
	if o != nil && IsNil(o.RewardTokenEmissionsUsd) {
		return true
	}

	return false
}

// SetRewardTokenEmissionsUsd gets a reference to the given []string and assigns it to the RewardTokenEmissionsUsd field.
func (o *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) SetRewardTokenEmissionsUsd(v []string) {
	o.RewardTokenEmissionsUsd = v
}

func (o CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.BlockRange.IsSet() {
		toSerialize["block_range"] = o.BlockRange.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.Pool.IsSet() {
		toSerialize["pool"] = o.Pool.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.TotalValueLockedUsd.IsSet() {
		toSerialize["total_value_locked_usd"] = o.TotalValueLockedUsd.Get()
	}
	if o.CumulativeSupplySideRevenueUsd.IsSet() {
		toSerialize["cumulative_supply_side_revenue_usd"] = o.CumulativeSupplySideRevenueUsd.Get()
	}
	if o.HourlySupplySideRevenueUsd.IsSet() {
		toSerialize["hourly_supply_side_revenue_usd"] = o.HourlySupplySideRevenueUsd.Get()
	}
	if o.CumulativeProtocolSideRevenueUsd.IsSet() {
		toSerialize["cumulative_protocol_side_revenue_usd"] = o.CumulativeProtocolSideRevenueUsd.Get()
	}
	if o.HourlyProtocolSideRevenueUsd.IsSet() {
		toSerialize["hourly_protocol_side_revenue_usd"] = o.HourlyProtocolSideRevenueUsd.Get()
	}
	if o.CumulativeTotalRevenueUsd.IsSet() {
		toSerialize["cumulative_total_revenue_usd"] = o.CumulativeTotalRevenueUsd.Get()
	}
	if o.HourlyTotalRevenueUsd.IsSet() {
		toSerialize["hourly_total_revenue_usd"] = o.HourlyTotalRevenueUsd.Get()
	}
	if o.HourlyVolumeUsd.IsSet() {
		toSerialize["hourly_volume_usd"] = o.HourlyVolumeUsd.Get()
	}
	if o.HourlyVolumeByTokenAmount != nil {
		toSerialize["hourly_volume_by_token_amount"] = o.HourlyVolumeByTokenAmount
	}
	if o.HourlyVolumeByTokenUsd != nil {
		toSerialize["hourly_volume_by_token_usd"] = o.HourlyVolumeByTokenUsd
	}
	if o.CumulativeVolumeUsd.IsSet() {
		toSerialize["cumulative_volume_usd"] = o.CumulativeVolumeUsd.Get()
	}
	if o.InputTokenBalances != nil {
		toSerialize["input_token_balances"] = o.InputTokenBalances
	}
	if o.InputTokenWeights != nil {
		toSerialize["input_token_weights"] = o.InputTokenWeights
	}
	if o.OutputTokenSupply.IsSet() {
		toSerialize["output_token_supply"] = o.OutputTokenSupply.Get()
	}
	if o.OutputTokenPriceUsd.IsSet() {
		toSerialize["output_token_price_usd"] = o.OutputTokenPriceUsd.Get()
	}
	if o.StakedOutputTokenAmount.IsSet() {
		toSerialize["staked_output_token_amount"] = o.StakedOutputTokenAmount.Get()
	}
	if o.RewardTokenEmissionsAmount != nil {
		toSerialize["reward_token_emissions_amount"] = o.RewardTokenEmissionsAmount
	}
	if o.RewardTokenEmissionsUsd != nil {
		toSerialize["reward_token_emissions_usd"] = o.RewardTokenEmissionsUsd
	}
	return toSerialize, nil
}

type NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO struct {
	value *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO
	isSet bool
}

func (v NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) Get() *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO {
	return v.value
}

func (v *NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) Set(val *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO(val *CURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) *NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO {
	return &NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO{value: val, isSet: true}
}

func (v NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCURVEFINANCEETHEREUMLiquidityPoolHourlySnapshotDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


