/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CURVEFINANCEETHEREUMSwapDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CURVEFINANCEETHEREUMSwapDTO{}

// CURVEFINANCEETHEREUMSwapDTO 
type CURVEFINANCEETHEREUMSwapDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Block number of this event
	BlockNumber NullableString `json:"block_number,omitempty"`
	// Swap-(transaction hash)-(log index)
	Id NullableString `json:"id,omitempty"`
	// Transaction hash of the transaction that emitted this event
	Hash NullableString `json:"hash,omitempty"`
	// Event log index. For transactions that don't emit event, create arbitrary index starting from 0
	LogIndex *int32 `json:"log_index,omitempty"`
	// The protocol this transaction belongs to
	Protocol NullableString `json:"protocol,omitempty"`
	// Address that received the tokens
	To NullableString `json:"to,omitempty"`
	// Address that sent the tokens
	From NullableString `json:"from,omitempty"`
	// Timestamp of this event
	Timestamp NullableString `json:"timestamp,omitempty"`
	// Token deposited into pool
	TokenIn NullableString `json:"token_in,omitempty"`
	// Amount of token deposited into pool in native units
	AmountIn NullableString `json:"amount_in,omitempty"`
	// Amount of token deposited into pool in USD
	AmountInUsd NullableString `json:"amount_in_usd,omitempty"`
	// Token withdrawn from pool
	TokenOut NullableString `json:"token_out,omitempty"`
	// Amount of token withdrawn from pool in native units
	AmountOut NullableString `json:"amount_out,omitempty"`
	// Amount of token withdrawn from pool in USD
	AmountOutUsd NullableString `json:"amount_out_usd,omitempty"`
	// The pool involving this transaction
	Pool NullableString `json:"pool,omitempty"`
	PoolId NullableString `json:"pool_id,omitempty"`
	TransactionId NullableString `json:"transaction_id,omitempty"`
	EvaluatedPrice *float64 `json:"evaluated_price,omitempty"`
	EvaluatedAmount *float64 `json:"evaluated_amount,omitempty"`
	EvaluatedAggressor *TransactionsETradeAggressiveSide `json:"evaluated_aggressor,omitempty"`
}

// NewCURVEFINANCEETHEREUMSwapDTO instantiates a new CURVEFINANCEETHEREUMSwapDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCURVEFINANCEETHEREUMSwapDTO() *CURVEFINANCEETHEREUMSwapDTO {
	this := CURVEFINANCEETHEREUMSwapDTO{}
	return &this
}

// NewCURVEFINANCEETHEREUMSwapDTOWithDefaults instantiates a new CURVEFINANCEETHEREUMSwapDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCURVEFINANCEETHEREUMSwapDTOWithDefaults() *CURVEFINANCEETHEREUMSwapDTO {
	this := CURVEFINANCEETHEREUMSwapDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetBlockNumber() string {
	if o == nil || IsNil(o.BlockNumber.Get()) {
		var ret string
		return ret
	}
	return *o.BlockNumber.Get()
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetBlockNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockNumber.Get(), o.BlockNumber.IsSet()
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasBlockNumber() bool {
	if o != nil && o.BlockNumber.IsSet() {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given NullableString and assigns it to the BlockNumber field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetBlockNumber(v string) {
	o.BlockNumber.Set(&v)
}
// SetBlockNumberNil sets the value for BlockNumber to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetBlockNumberNil() {
	o.BlockNumber.Set(nil)
}

// UnsetBlockNumber ensures that no value is present for BlockNumber, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetBlockNumber() {
	o.BlockNumber.Unset()
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetId() {
	o.Id.Unset()
}

// GetHash returns the Hash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetHash() string {
	if o == nil || IsNil(o.Hash.Get()) {
		var ret string
		return ret
	}
	return *o.Hash.Get()
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hash.Get(), o.Hash.IsSet()
}

// HasHash returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasHash() bool {
	if o != nil && o.Hash.IsSet() {
		return true
	}

	return false
}

// SetHash gets a reference to the given NullableString and assigns it to the Hash field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetHash(v string) {
	o.Hash.Set(&v)
}
// SetHashNil sets the value for Hash to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetHashNil() {
	o.Hash.Set(nil)
}

// UnsetHash ensures that no value is present for Hash, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetHash() {
	o.Hash.Unset()
}

// GetLogIndex returns the LogIndex field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetLogIndex() int32 {
	if o == nil || IsNil(o.LogIndex) {
		var ret int32
		return ret
	}
	return *o.LogIndex
}

// GetLogIndexOk returns a tuple with the LogIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetLogIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.LogIndex) {
		return nil, false
	}
	return o.LogIndex, true
}

// HasLogIndex returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasLogIndex() bool {
	if o != nil && !IsNil(o.LogIndex) {
		return true
	}

	return false
}

// SetLogIndex gets a reference to the given int32 and assigns it to the LogIndex field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetLogIndex(v int32) {
	o.LogIndex = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetProtocol() string {
	if o == nil || IsNil(o.Protocol.Get()) {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetTo returns the To field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTo() string {
	if o == nil || IsNil(o.To.Get()) {
		var ret string
		return ret
	}
	return *o.To.Get()
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.To.Get(), o.To.IsSet()
}

// HasTo returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasTo() bool {
	if o != nil && o.To.IsSet() {
		return true
	}

	return false
}

// SetTo gets a reference to the given NullableString and assigns it to the To field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTo(v string) {
	o.To.Set(&v)
}
// SetToNil sets the value for To to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetToNil() {
	o.To.Set(nil)
}

// UnsetTo ensures that no value is present for To, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetTo() {
	o.To.Unset()
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetFrom() string {
	if o == nil || IsNil(o.From.Get()) {
		var ret string
		return ret
	}
	return *o.From.Get()
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From.Get(), o.From.IsSet()
}

// HasFrom returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasFrom() bool {
	if o != nil && o.From.IsSet() {
		return true
	}

	return false
}

// SetFrom gets a reference to the given NullableString and assigns it to the From field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetFrom(v string) {
	o.From.Set(&v)
}
// SetFromNil sets the value for From to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetFromNil() {
	o.From.Set(nil)
}

// UnsetFrom ensures that no value is present for From, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetFrom() {
	o.From.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret string
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableString and assigns it to the Timestamp field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTimestamp(v string) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetTokenIn returns the TokenIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTokenIn() string {
	if o == nil || IsNil(o.TokenIn.Get()) {
		var ret string
		return ret
	}
	return *o.TokenIn.Get()
}

// GetTokenInOk returns a tuple with the TokenIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTokenInOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenIn.Get(), o.TokenIn.IsSet()
}

// HasTokenIn returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasTokenIn() bool {
	if o != nil && o.TokenIn.IsSet() {
		return true
	}

	return false
}

// SetTokenIn gets a reference to the given NullableString and assigns it to the TokenIn field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTokenIn(v string) {
	o.TokenIn.Set(&v)
}
// SetTokenInNil sets the value for TokenIn to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTokenInNil() {
	o.TokenIn.Set(nil)
}

// UnsetTokenIn ensures that no value is present for TokenIn, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetTokenIn() {
	o.TokenIn.Unset()
}

// GetAmountIn returns the AmountIn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountIn() string {
	if o == nil || IsNil(o.AmountIn.Get()) {
		var ret string
		return ret
	}
	return *o.AmountIn.Get()
}

// GetAmountInOk returns a tuple with the AmountIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountInOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountIn.Get(), o.AmountIn.IsSet()
}

// HasAmountIn returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasAmountIn() bool {
	if o != nil && o.AmountIn.IsSet() {
		return true
	}

	return false
}

// SetAmountIn gets a reference to the given NullableString and assigns it to the AmountIn field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountIn(v string) {
	o.AmountIn.Set(&v)
}
// SetAmountInNil sets the value for AmountIn to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountInNil() {
	o.AmountIn.Set(nil)
}

// UnsetAmountIn ensures that no value is present for AmountIn, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetAmountIn() {
	o.AmountIn.Unset()
}

// GetAmountInUsd returns the AmountInUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountInUsd() string {
	if o == nil || IsNil(o.AmountInUsd.Get()) {
		var ret string
		return ret
	}
	return *o.AmountInUsd.Get()
}

// GetAmountInUsdOk returns a tuple with the AmountInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountInUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountInUsd.Get(), o.AmountInUsd.IsSet()
}

// HasAmountInUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasAmountInUsd() bool {
	if o != nil && o.AmountInUsd.IsSet() {
		return true
	}

	return false
}

// SetAmountInUsd gets a reference to the given NullableString and assigns it to the AmountInUsd field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountInUsd(v string) {
	o.AmountInUsd.Set(&v)
}
// SetAmountInUsdNil sets the value for AmountInUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountInUsdNil() {
	o.AmountInUsd.Set(nil)
}

// UnsetAmountInUsd ensures that no value is present for AmountInUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetAmountInUsd() {
	o.AmountInUsd.Unset()
}

// GetTokenOut returns the TokenOut field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTokenOut() string {
	if o == nil || IsNil(o.TokenOut.Get()) {
		var ret string
		return ret
	}
	return *o.TokenOut.Get()
}

// GetTokenOutOk returns a tuple with the TokenOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTokenOutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TokenOut.Get(), o.TokenOut.IsSet()
}

// HasTokenOut returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasTokenOut() bool {
	if o != nil && o.TokenOut.IsSet() {
		return true
	}

	return false
}

// SetTokenOut gets a reference to the given NullableString and assigns it to the TokenOut field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTokenOut(v string) {
	o.TokenOut.Set(&v)
}
// SetTokenOutNil sets the value for TokenOut to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTokenOutNil() {
	o.TokenOut.Set(nil)
}

// UnsetTokenOut ensures that no value is present for TokenOut, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetTokenOut() {
	o.TokenOut.Unset()
}

// GetAmountOut returns the AmountOut field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountOut() string {
	if o == nil || IsNil(o.AmountOut.Get()) {
		var ret string
		return ret
	}
	return *o.AmountOut.Get()
}

// GetAmountOutOk returns a tuple with the AmountOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountOutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountOut.Get(), o.AmountOut.IsSet()
}

// HasAmountOut returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasAmountOut() bool {
	if o != nil && o.AmountOut.IsSet() {
		return true
	}

	return false
}

// SetAmountOut gets a reference to the given NullableString and assigns it to the AmountOut field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountOut(v string) {
	o.AmountOut.Set(&v)
}
// SetAmountOutNil sets the value for AmountOut to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountOutNil() {
	o.AmountOut.Set(nil)
}

// UnsetAmountOut ensures that no value is present for AmountOut, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetAmountOut() {
	o.AmountOut.Unset()
}

// GetAmountOutUsd returns the AmountOutUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountOutUsd() string {
	if o == nil || IsNil(o.AmountOutUsd.Get()) {
		var ret string
		return ret
	}
	return *o.AmountOutUsd.Get()
}

// GetAmountOutUsdOk returns a tuple with the AmountOutUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetAmountOutUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AmountOutUsd.Get(), o.AmountOutUsd.IsSet()
}

// HasAmountOutUsd returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasAmountOutUsd() bool {
	if o != nil && o.AmountOutUsd.IsSet() {
		return true
	}

	return false
}

// SetAmountOutUsd gets a reference to the given NullableString and assigns it to the AmountOutUsd field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountOutUsd(v string) {
	o.AmountOutUsd.Set(&v)
}
// SetAmountOutUsdNil sets the value for AmountOutUsd to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetAmountOutUsdNil() {
	o.AmountOutUsd.Set(nil)
}

// UnsetAmountOutUsd ensures that no value is present for AmountOutUsd, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetAmountOutUsd() {
	o.AmountOutUsd.Unset()
}

// GetPool returns the Pool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetPool() string {
	if o == nil || IsNil(o.Pool.Get()) {
		var ret string
		return ret
	}
	return *o.Pool.Get()
}

// GetPoolOk returns a tuple with the Pool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetPoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pool.Get(), o.Pool.IsSet()
}

// HasPool returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasPool() bool {
	if o != nil && o.Pool.IsSet() {
		return true
	}

	return false
}

// SetPool gets a reference to the given NullableString and assigns it to the Pool field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetPool(v string) {
	o.Pool.Set(&v)
}
// SetPoolNil sets the value for Pool to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetPoolNil() {
	o.Pool.Set(nil)
}

// UnsetPool ensures that no value is present for Pool, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetPool() {
	o.Pool.Unset()
}

// GetPoolId returns the PoolId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetPoolId() string {
	if o == nil || IsNil(o.PoolId.Get()) {
		var ret string
		return ret
	}
	return *o.PoolId.Get()
}

// GetPoolIdOk returns a tuple with the PoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetPoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolId.Get(), o.PoolId.IsSet()
}

// HasPoolId returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasPoolId() bool {
	if o != nil && o.PoolId.IsSet() {
		return true
	}

	return false
}

// SetPoolId gets a reference to the given NullableString and assigns it to the PoolId field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetPoolId(v string) {
	o.PoolId.Set(&v)
}
// SetPoolIdNil sets the value for PoolId to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetPoolIdNil() {
	o.PoolId.Set(nil)
}

// UnsetPoolId ensures that no value is present for PoolId, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetPoolId() {
	o.PoolId.Unset()
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId.Get()) {
		var ret string
		return ret
	}
	return *o.TransactionId.Get()
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMSwapDTO) GetTransactionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TransactionId.Get(), o.TransactionId.IsSet()
}

// HasTransactionId returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasTransactionId() bool {
	if o != nil && o.TransactionId.IsSet() {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given NullableString and assigns it to the TransactionId field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTransactionId(v string) {
	o.TransactionId.Set(&v)
}
// SetTransactionIdNil sets the value for TransactionId to be an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) SetTransactionIdNil() {
	o.TransactionId.Set(nil)
}

// UnsetTransactionId ensures that no value is present for TransactionId, not even an explicit nil
func (o *CURVEFINANCEETHEREUMSwapDTO) UnsetTransactionId() {
	o.TransactionId.Unset()
}

// GetEvaluatedPrice returns the EvaluatedPrice field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEvaluatedPrice() float64 {
	if o == nil || IsNil(o.EvaluatedPrice) {
		var ret float64
		return ret
	}
	return *o.EvaluatedPrice
}

// GetEvaluatedPriceOk returns a tuple with the EvaluatedPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEvaluatedPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.EvaluatedPrice) {
		return nil, false
	}
	return o.EvaluatedPrice, true
}

// HasEvaluatedPrice returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasEvaluatedPrice() bool {
	if o != nil && !IsNil(o.EvaluatedPrice) {
		return true
	}

	return false
}

// SetEvaluatedPrice gets a reference to the given float64 and assigns it to the EvaluatedPrice field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetEvaluatedPrice(v float64) {
	o.EvaluatedPrice = &v
}

// GetEvaluatedAmount returns the EvaluatedAmount field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEvaluatedAmount() float64 {
	if o == nil || IsNil(o.EvaluatedAmount) {
		var ret float64
		return ret
	}
	return *o.EvaluatedAmount
}

// GetEvaluatedAmountOk returns a tuple with the EvaluatedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEvaluatedAmountOk() (*float64, bool) {
	if o == nil || IsNil(o.EvaluatedAmount) {
		return nil, false
	}
	return o.EvaluatedAmount, true
}

// HasEvaluatedAmount returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasEvaluatedAmount() bool {
	if o != nil && !IsNil(o.EvaluatedAmount) {
		return true
	}

	return false
}

// SetEvaluatedAmount gets a reference to the given float64 and assigns it to the EvaluatedAmount field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetEvaluatedAmount(v float64) {
	o.EvaluatedAmount = &v
}

// GetEvaluatedAggressor returns the EvaluatedAggressor field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEvaluatedAggressor() TransactionsETradeAggressiveSide {
	if o == nil || IsNil(o.EvaluatedAggressor) {
		var ret TransactionsETradeAggressiveSide
		return ret
	}
	return *o.EvaluatedAggressor
}

// GetEvaluatedAggressorOk returns a tuple with the EvaluatedAggressor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) GetEvaluatedAggressorOk() (*TransactionsETradeAggressiveSide, bool) {
	if o == nil || IsNil(o.EvaluatedAggressor) {
		return nil, false
	}
	return o.EvaluatedAggressor, true
}

// HasEvaluatedAggressor returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMSwapDTO) HasEvaluatedAggressor() bool {
	if o != nil && !IsNil(o.EvaluatedAggressor) {
		return true
	}

	return false
}

// SetEvaluatedAggressor gets a reference to the given TransactionsETradeAggressiveSide and assigns it to the EvaluatedAggressor field.
func (o *CURVEFINANCEETHEREUMSwapDTO) SetEvaluatedAggressor(v TransactionsETradeAggressiveSide) {
	o.EvaluatedAggressor = &v
}

func (o CURVEFINANCEETHEREUMSwapDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CURVEFINANCEETHEREUMSwapDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if o.BlockNumber.IsSet() {
		toSerialize["block_number"] = o.BlockNumber.Get()
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Hash.IsSet() {
		toSerialize["hash"] = o.Hash.Get()
	}
	if !IsNil(o.LogIndex) {
		toSerialize["log_index"] = o.LogIndex
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.To.IsSet() {
		toSerialize["to"] = o.To.Get()
	}
	if o.From.IsSet() {
		toSerialize["from"] = o.From.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.TokenIn.IsSet() {
		toSerialize["token_in"] = o.TokenIn.Get()
	}
	if o.AmountIn.IsSet() {
		toSerialize["amount_in"] = o.AmountIn.Get()
	}
	if o.AmountInUsd.IsSet() {
		toSerialize["amount_in_usd"] = o.AmountInUsd.Get()
	}
	if o.TokenOut.IsSet() {
		toSerialize["token_out"] = o.TokenOut.Get()
	}
	if o.AmountOut.IsSet() {
		toSerialize["amount_out"] = o.AmountOut.Get()
	}
	if o.AmountOutUsd.IsSet() {
		toSerialize["amount_out_usd"] = o.AmountOutUsd.Get()
	}
	if o.Pool.IsSet() {
		toSerialize["pool"] = o.Pool.Get()
	}
	if o.PoolId.IsSet() {
		toSerialize["pool_id"] = o.PoolId.Get()
	}
	if o.TransactionId.IsSet() {
		toSerialize["transaction_id"] = o.TransactionId.Get()
	}
	// skip: evaluated_price is readOnly
	// skip: evaluated_amount is readOnly
	if !IsNil(o.EvaluatedAggressor) {
		toSerialize["evaluated_aggressor"] = o.EvaluatedAggressor
	}
	return toSerialize, nil
}

type NullableCURVEFINANCEETHEREUMSwapDTO struct {
	value *CURVEFINANCEETHEREUMSwapDTO
	isSet bool
}

func (v NullableCURVEFINANCEETHEREUMSwapDTO) Get() *CURVEFINANCEETHEREUMSwapDTO {
	return v.value
}

func (v *NullableCURVEFINANCEETHEREUMSwapDTO) Set(val *CURVEFINANCEETHEREUMSwapDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCURVEFINANCEETHEREUMSwapDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCURVEFINANCEETHEREUMSwapDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCURVEFINANCEETHEREUMSwapDTO(val *CURVEFINANCEETHEREUMSwapDTO) *NullableCURVEFINANCEETHEREUMSwapDTO {
	return &NullableCURVEFINANCEETHEREUMSwapDTO{value: val, isSet: true}
}

func (v NullableCURVEFINANCEETHEREUMSwapDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCURVEFINANCEETHEREUMSwapDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


