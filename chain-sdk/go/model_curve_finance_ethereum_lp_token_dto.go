/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the CURVEFINANCEETHEREUMLpTokenDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CURVEFINANCEETHEREUMLpTokenDTO{}

// CURVEFINANCEETHEREUMLpTokenDTO Entity for fetching the pool address from lpToken.
type CURVEFINANCEETHEREUMLpTokenDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// Address of the LP Token.
	Id NullableString `json:"id,omitempty"`
	// Address of the pool associated with this token.
	PoolAddress NullableString `json:"pool_address,omitempty"`
	// Address of the registry associated with this token.
	RegistryAddress NullableString `json:"registry_address,omitempty"`
}

// NewCURVEFINANCEETHEREUMLpTokenDTO instantiates a new CURVEFINANCEETHEREUMLpTokenDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCURVEFINANCEETHEREUMLpTokenDTO() *CURVEFINANCEETHEREUMLpTokenDTO {
	this := CURVEFINANCEETHEREUMLpTokenDTO{}
	return &this
}

// NewCURVEFINANCEETHEREUMLpTokenDTOWithDefaults instantiates a new CURVEFINANCEETHEREUMLpTokenDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCURVEFINANCEETHEREUMLpTokenDTOWithDefaults() *CURVEFINANCEETHEREUMLpTokenDTO {
	this := CURVEFINANCEETHEREUMLpTokenDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLpTokenDTO) UnsetId() {
	o.Id.Unset()
}

// GetPoolAddress returns the PoolAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetPoolAddress() string {
	if o == nil || IsNil(o.PoolAddress.Get()) {
		var ret string
		return ret
	}
	return *o.PoolAddress.Get()
}

// GetPoolAddressOk returns a tuple with the PoolAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetPoolAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PoolAddress.Get(), o.PoolAddress.IsSet()
}

// HasPoolAddress returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) HasPoolAddress() bool {
	if o != nil && o.PoolAddress.IsSet() {
		return true
	}

	return false
}

// SetPoolAddress gets a reference to the given NullableString and assigns it to the PoolAddress field.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetPoolAddress(v string) {
	o.PoolAddress.Set(&v)
}
// SetPoolAddressNil sets the value for PoolAddress to be an explicit nil
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetPoolAddressNil() {
	o.PoolAddress.Set(nil)
}

// UnsetPoolAddress ensures that no value is present for PoolAddress, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLpTokenDTO) UnsetPoolAddress() {
	o.PoolAddress.Unset()
}

// GetRegistryAddress returns the RegistryAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetRegistryAddress() string {
	if o == nil || IsNil(o.RegistryAddress.Get()) {
		var ret string
		return ret
	}
	return *o.RegistryAddress.Get()
}

// GetRegistryAddressOk returns a tuple with the RegistryAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CURVEFINANCEETHEREUMLpTokenDTO) GetRegistryAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegistryAddress.Get(), o.RegistryAddress.IsSet()
}

// HasRegistryAddress returns a boolean if a field has been set.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) HasRegistryAddress() bool {
	if o != nil && o.RegistryAddress.IsSet() {
		return true
	}

	return false
}

// SetRegistryAddress gets a reference to the given NullableString and assigns it to the RegistryAddress field.
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetRegistryAddress(v string) {
	o.RegistryAddress.Set(&v)
}
// SetRegistryAddressNil sets the value for RegistryAddress to be an explicit nil
func (o *CURVEFINANCEETHEREUMLpTokenDTO) SetRegistryAddressNil() {
	o.RegistryAddress.Set(nil)
}

// UnsetRegistryAddress ensures that no value is present for RegistryAddress, not even an explicit nil
func (o *CURVEFINANCEETHEREUMLpTokenDTO) UnsetRegistryAddress() {
	o.RegistryAddress.Unset()
}

func (o CURVEFINANCEETHEREUMLpTokenDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CURVEFINANCEETHEREUMLpTokenDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.PoolAddress.IsSet() {
		toSerialize["pool_address"] = o.PoolAddress.Get()
	}
	if o.RegistryAddress.IsSet() {
		toSerialize["registry_address"] = o.RegistryAddress.Get()
	}
	return toSerialize, nil
}

type NullableCURVEFINANCEETHEREUMLpTokenDTO struct {
	value *CURVEFINANCEETHEREUMLpTokenDTO
	isSet bool
}

func (v NullableCURVEFINANCEETHEREUMLpTokenDTO) Get() *CURVEFINANCEETHEREUMLpTokenDTO {
	return v.value
}

func (v *NullableCURVEFINANCEETHEREUMLpTokenDTO) Set(val *CURVEFINANCEETHEREUMLpTokenDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCURVEFINANCEETHEREUMLpTokenDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCURVEFINANCEETHEREUMLpTokenDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCURVEFINANCEETHEREUMLpTokenDTO(val *CURVEFINANCEETHEREUMLpTokenDTO) *NullableCURVEFINANCEETHEREUMLpTokenDTO {
	return &NullableCURVEFINANCEETHEREUMLpTokenDTO{value: val, isSet: true}
}

func (v NullableCURVEFINANCEETHEREUMLpTokenDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCURVEFINANCEETHEREUMLpTokenDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


