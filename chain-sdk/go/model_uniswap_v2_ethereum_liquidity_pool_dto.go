/*
On Chain Dapps - REST API

 This section will provide necessary information about the `OnChain API` protocol.  <br/><br/> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.                             

API version: v1
Contact: support@coinapi.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the UNISWAPV2ETHEREUMLiquidityPoolDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UNISWAPV2ETHEREUMLiquidityPoolDTO{}

// UNISWAPV2ETHEREUMLiquidityPoolDTO Pool-level metadata.
type UNISWAPV2ETHEREUMLiquidityPoolDTO struct {
	EntryTime *time.Time `json:"entry_time,omitempty"`
	RecvTime *time.Time `json:"recv_time,omitempty"`
	// Number of block in which entity was recorded.
	BlockNumber *int64 `json:"block_number,omitempty"`
	// .
	Vid *int64 `json:"vid,omitempty"`
	// Smart contract address of the pool
	Id NullableString `json:"id,omitempty"`
	// The protocol this pool belongs to
	Protocol NullableString `json:"protocol,omitempty"`
	// Name of liquidity pool (e.g. Curve.fi DAI/USDC/USDT)
	Name NullableString `json:"name,omitempty"`
	// Symbol of liquidity pool (e.g. 3CRV)
	Symbol NullableString `json:"symbol,omitempty"`
	// Tokens that need to be deposited to take a position in the protocol
	InputTokens []string `json:"input_tokens,omitempty"`
	// Token that is minted to track ownership of position in protocol
	OutputToken NullableString `json:"output_token,omitempty"`
	// Aditional tokens that are given as reward for position in a protocol
	RewardTokens []string `json:"reward_tokens,omitempty"`
	// Fees per trade incurred to the user
	Fees []string `json:"fees,omitempty"`
	// Whether this pool is single-sided
	IsSingleSided *bool `json:"is_single_sided,omitempty"`
	// Creation timestamp
	CreatedTimestamp NullableString `json:"created_timestamp,omitempty"`
	// Creation block number
	CreatedBlockNumber NullableString `json:"created_block_number,omitempty"`
	// Current TVL (Total Value Locked) of this pool in USD
	TotalValueLockedUsd NullableString `json:"total_value_locked_usd,omitempty"`
	// All revenue generated by the liquidity pool, accrued to the supply side
	CumulativeSupplySideRevenueUsd NullableString `json:"cumulative_supply_side_revenue_usd,omitempty"`
	// All revenue generated by the liquidity pool, accrued to the protocol
	CumulativeProtocolSideRevenueUsd NullableString `json:"cumulative_protocol_side_revenue_usd,omitempty"`
	// All revenue generated by the liquidity pool
	CumulativeTotalRevenueUsd NullableString `json:"cumulative_total_revenue_usd,omitempty"`
	// All historical trade volume occurred in this pool, in USD
	CumulativeVolumeUsd NullableString `json:"cumulative_volume_usd,omitempty"`
	// Amount of input tokens in the pool
	InputTokenBalances []string `json:"input_token_balances,omitempty"`
	// Weights of input tokens in the liquidity pool in percentage values
	InputTokenWeights []string `json:"input_token_weights,omitempty"`
	// Total supply of output token
	OutputTokenSupply NullableString `json:"output_token_supply,omitempty"`
	// Price per share of output token in USD
	OutputTokenPriceUsd NullableString `json:"output_token_price_usd,omitempty"`
	// Total supply of output tokens that are staked
	StakedOutputTokenAmount NullableString `json:"staked_output_token_amount,omitempty"`
	// Per-block reward token emission as of the current block normalized to a day, in token's native amount
	RewardTokenEmissionsAmount []string `json:"reward_token_emissions_amount,omitempty"`
	// Per-block reward token emission as of the current block normalized to a day, in USD value
	RewardTokenEmissionsUsd []string `json:"reward_token_emissions_usd,omitempty"`
	// Evaluated ask value of the liquidity pool.
	EvaluatedAsk *float64 `json:"evaluated_ask,omitempty"`
}

// NewUNISWAPV2ETHEREUMLiquidityPoolDTO instantiates a new UNISWAPV2ETHEREUMLiquidityPoolDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUNISWAPV2ETHEREUMLiquidityPoolDTO() *UNISWAPV2ETHEREUMLiquidityPoolDTO {
	this := UNISWAPV2ETHEREUMLiquidityPoolDTO{}
	return &this
}

// NewUNISWAPV2ETHEREUMLiquidityPoolDTOWithDefaults instantiates a new UNISWAPV2ETHEREUMLiquidityPoolDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUNISWAPV2ETHEREUMLiquidityPoolDTOWithDefaults() *UNISWAPV2ETHEREUMLiquidityPoolDTO {
	this := UNISWAPV2ETHEREUMLiquidityPoolDTO{}
	return &this
}

// GetEntryTime returns the EntryTime field value if set, zero value otherwise.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetEntryTime() time.Time {
	if o == nil || IsNil(o.EntryTime) {
		var ret time.Time
		return ret
	}
	return *o.EntryTime
}

// GetEntryTimeOk returns a tuple with the EntryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetEntryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EntryTime) {
		return nil, false
	}
	return o.EntryTime, true
}

// HasEntryTime returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasEntryTime() bool {
	if o != nil && !IsNil(o.EntryTime) {
		return true
	}

	return false
}

// SetEntryTime gets a reference to the given time.Time and assigns it to the EntryTime field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetEntryTime(v time.Time) {
	o.EntryTime = &v
}

// GetRecvTime returns the RecvTime field value if set, zero value otherwise.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRecvTime() time.Time {
	if o == nil || IsNil(o.RecvTime) {
		var ret time.Time
		return ret
	}
	return *o.RecvTime
}

// GetRecvTimeOk returns a tuple with the RecvTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRecvTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecvTime) {
		return nil, false
	}
	return o.RecvTime, true
}

// HasRecvTime returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasRecvTime() bool {
	if o != nil && !IsNil(o.RecvTime) {
		return true
	}

	return false
}

// SetRecvTime gets a reference to the given time.Time and assigns it to the RecvTime field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetRecvTime(v time.Time) {
	o.RecvTime = &v
}

// GetBlockNumber returns the BlockNumber field value if set, zero value otherwise.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetBlockNumber() int64 {
	if o == nil || IsNil(o.BlockNumber) {
		var ret int64
		return ret
	}
	return *o.BlockNumber
}

// GetBlockNumberOk returns a tuple with the BlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetBlockNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.BlockNumber) {
		return nil, false
	}
	return o.BlockNumber, true
}

// HasBlockNumber returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasBlockNumber() bool {
	if o != nil && !IsNil(o.BlockNumber) {
		return true
	}

	return false
}

// SetBlockNumber gets a reference to the given int64 and assigns it to the BlockNumber field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetBlockNumber(v int64) {
	o.BlockNumber = &v
}

// GetVid returns the Vid field value if set, zero value otherwise.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetVid() int64 {
	if o == nil || IsNil(o.Vid) {
		var ret int64
		return ret
	}
	return *o.Vid
}

// GetVidOk returns a tuple with the Vid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetVidOk() (*int64, bool) {
	if o == nil || IsNil(o.Vid) {
		return nil, false
	}
	return o.Vid, true
}

// HasVid returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasVid() bool {
	if o != nil && !IsNil(o.Vid) {
		return true
	}

	return false
}

// SetVid gets a reference to the given int64 and assigns it to the Vid field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetVid(v int64) {
	o.Vid = &v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetId() {
	o.Id.Unset()
}

// GetProtocol returns the Protocol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetProtocol() string {
	if o == nil || IsNil(o.Protocol.Get()) {
		var ret string
		return ret
	}
	return *o.Protocol.Get()
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Protocol.Get(), o.Protocol.IsSet()
}

// HasProtocol returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasProtocol() bool {
	if o != nil && o.Protocol.IsSet() {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given NullableString and assigns it to the Protocol field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetProtocol(v string) {
	o.Protocol.Set(&v)
}
// SetProtocolNil sets the value for Protocol to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetProtocolNil() {
	o.Protocol.Set(nil)
}

// UnsetProtocol ensures that no value is present for Protocol, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetProtocol() {
	o.Protocol.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetName() {
	o.Name.Unset()
}

// GetSymbol returns the Symbol field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetSymbol() string {
	if o == nil || IsNil(o.Symbol.Get()) {
		var ret string
		return ret
	}
	return *o.Symbol.Get()
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Symbol.Get(), o.Symbol.IsSet()
}

// HasSymbol returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasSymbol() bool {
	if o != nil && o.Symbol.IsSet() {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given NullableString and assigns it to the Symbol field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetSymbol(v string) {
	o.Symbol.Set(&v)
}
// SetSymbolNil sets the value for Symbol to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetSymbolNil() {
	o.Symbol.Set(nil)
}

// UnsetSymbol ensures that no value is present for Symbol, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetSymbol() {
	o.Symbol.Unset()
}

// GetInputTokens returns the InputTokens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetInputTokens() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokens
}

// GetInputTokensOk returns a tuple with the InputTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetInputTokensOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokens) {
		return nil, false
	}
	return o.InputTokens, true
}

// HasInputTokens returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasInputTokens() bool {
	if o != nil && IsNil(o.InputTokens) {
		return true
	}

	return false
}

// SetInputTokens gets a reference to the given []string and assigns it to the InputTokens field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetInputTokens(v []string) {
	o.InputTokens = v
}

// GetOutputToken returns the OutputToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetOutputToken() string {
	if o == nil || IsNil(o.OutputToken.Get()) {
		var ret string
		return ret
	}
	return *o.OutputToken.Get()
}

// GetOutputTokenOk returns a tuple with the OutputToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetOutputTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputToken.Get(), o.OutputToken.IsSet()
}

// HasOutputToken returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasOutputToken() bool {
	if o != nil && o.OutputToken.IsSet() {
		return true
	}

	return false
}

// SetOutputToken gets a reference to the given NullableString and assigns it to the OutputToken field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetOutputToken(v string) {
	o.OutputToken.Set(&v)
}
// SetOutputTokenNil sets the value for OutputToken to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetOutputTokenNil() {
	o.OutputToken.Set(nil)
}

// UnsetOutputToken ensures that no value is present for OutputToken, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetOutputToken() {
	o.OutputToken.Unset()
}

// GetRewardTokens returns the RewardTokens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRewardTokens() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokens
}

// GetRewardTokensOk returns a tuple with the RewardTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRewardTokensOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokens) {
		return nil, false
	}
	return o.RewardTokens, true
}

// HasRewardTokens returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasRewardTokens() bool {
	if o != nil && IsNil(o.RewardTokens) {
		return true
	}

	return false
}

// SetRewardTokens gets a reference to the given []string and assigns it to the RewardTokens field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetRewardTokens(v []string) {
	o.RewardTokens = v
}

// GetFees returns the Fees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetFees() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetFeesOk() ([]string, bool) {
	if o == nil || IsNil(o.Fees) {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasFees() bool {
	if o != nil && IsNil(o.Fees) {
		return true
	}

	return false
}

// SetFees gets a reference to the given []string and assigns it to the Fees field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetFees(v []string) {
	o.Fees = v
}

// GetIsSingleSided returns the IsSingleSided field value if set, zero value otherwise.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetIsSingleSided() bool {
	if o == nil || IsNil(o.IsSingleSided) {
		var ret bool
		return ret
	}
	return *o.IsSingleSided
}

// GetIsSingleSidedOk returns a tuple with the IsSingleSided field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetIsSingleSidedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSingleSided) {
		return nil, false
	}
	return o.IsSingleSided, true
}

// HasIsSingleSided returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasIsSingleSided() bool {
	if o != nil && !IsNil(o.IsSingleSided) {
		return true
	}

	return false
}

// SetIsSingleSided gets a reference to the given bool and assigns it to the IsSingleSided field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetIsSingleSided(v bool) {
	o.IsSingleSided = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCreatedTimestamp() string {
	if o == nil || IsNil(o.CreatedTimestamp.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedTimestamp.Get()
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedTimestamp.Get(), o.CreatedTimestamp.IsSet()
}

// HasCreatedTimestamp returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasCreatedTimestamp() bool {
	if o != nil && o.CreatedTimestamp.IsSet() {
		return true
	}

	return false
}

// SetCreatedTimestamp gets a reference to the given NullableString and assigns it to the CreatedTimestamp field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCreatedTimestamp(v string) {
	o.CreatedTimestamp.Set(&v)
}
// SetCreatedTimestampNil sets the value for CreatedTimestamp to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCreatedTimestampNil() {
	o.CreatedTimestamp.Set(nil)
}

// UnsetCreatedTimestamp ensures that no value is present for CreatedTimestamp, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetCreatedTimestamp() {
	o.CreatedTimestamp.Unset()
}

// GetCreatedBlockNumber returns the CreatedBlockNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCreatedBlockNumber() string {
	if o == nil || IsNil(o.CreatedBlockNumber.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedBlockNumber.Get()
}

// GetCreatedBlockNumberOk returns a tuple with the CreatedBlockNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCreatedBlockNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedBlockNumber.Get(), o.CreatedBlockNumber.IsSet()
}

// HasCreatedBlockNumber returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasCreatedBlockNumber() bool {
	if o != nil && o.CreatedBlockNumber.IsSet() {
		return true
	}

	return false
}

// SetCreatedBlockNumber gets a reference to the given NullableString and assigns it to the CreatedBlockNumber field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCreatedBlockNumber(v string) {
	o.CreatedBlockNumber.Set(&v)
}
// SetCreatedBlockNumberNil sets the value for CreatedBlockNumber to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCreatedBlockNumberNil() {
	o.CreatedBlockNumber.Set(nil)
}

// UnsetCreatedBlockNumber ensures that no value is present for CreatedBlockNumber, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetCreatedBlockNumber() {
	o.CreatedBlockNumber.Unset()
}

// GetTotalValueLockedUsd returns the TotalValueLockedUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetTotalValueLockedUsd() string {
	if o == nil || IsNil(o.TotalValueLockedUsd.Get()) {
		var ret string
		return ret
	}
	return *o.TotalValueLockedUsd.Get()
}

// GetTotalValueLockedUsdOk returns a tuple with the TotalValueLockedUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetTotalValueLockedUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalValueLockedUsd.Get(), o.TotalValueLockedUsd.IsSet()
}

// HasTotalValueLockedUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasTotalValueLockedUsd() bool {
	if o != nil && o.TotalValueLockedUsd.IsSet() {
		return true
	}

	return false
}

// SetTotalValueLockedUsd gets a reference to the given NullableString and assigns it to the TotalValueLockedUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetTotalValueLockedUsd(v string) {
	o.TotalValueLockedUsd.Set(&v)
}
// SetTotalValueLockedUsdNil sets the value for TotalValueLockedUsd to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetTotalValueLockedUsdNil() {
	o.TotalValueLockedUsd.Set(nil)
}

// UnsetTotalValueLockedUsd ensures that no value is present for TotalValueLockedUsd, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetTotalValueLockedUsd() {
	o.TotalValueLockedUsd.Unset()
}

// GetCumulativeSupplySideRevenueUsd returns the CumulativeSupplySideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeSupplySideRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeSupplySideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeSupplySideRevenueUsd.Get()
}

// GetCumulativeSupplySideRevenueUsdOk returns a tuple with the CumulativeSupplySideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeSupplySideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeSupplySideRevenueUsd.Get(), o.CumulativeSupplySideRevenueUsd.IsSet()
}

// HasCumulativeSupplySideRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasCumulativeSupplySideRevenueUsd() bool {
	if o != nil && o.CumulativeSupplySideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeSupplySideRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeSupplySideRevenueUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeSupplySideRevenueUsd(v string) {
	o.CumulativeSupplySideRevenueUsd.Set(&v)
}
// SetCumulativeSupplySideRevenueUsdNil sets the value for CumulativeSupplySideRevenueUsd to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeSupplySideRevenueUsdNil() {
	o.CumulativeSupplySideRevenueUsd.Set(nil)
}

// UnsetCumulativeSupplySideRevenueUsd ensures that no value is present for CumulativeSupplySideRevenueUsd, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetCumulativeSupplySideRevenueUsd() {
	o.CumulativeSupplySideRevenueUsd.Unset()
}

// GetCumulativeProtocolSideRevenueUsd returns the CumulativeProtocolSideRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeProtocolSideRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeProtocolSideRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeProtocolSideRevenueUsd.Get()
}

// GetCumulativeProtocolSideRevenueUsdOk returns a tuple with the CumulativeProtocolSideRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeProtocolSideRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeProtocolSideRevenueUsd.Get(), o.CumulativeProtocolSideRevenueUsd.IsSet()
}

// HasCumulativeProtocolSideRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasCumulativeProtocolSideRevenueUsd() bool {
	if o != nil && o.CumulativeProtocolSideRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeProtocolSideRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeProtocolSideRevenueUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeProtocolSideRevenueUsd(v string) {
	o.CumulativeProtocolSideRevenueUsd.Set(&v)
}
// SetCumulativeProtocolSideRevenueUsdNil sets the value for CumulativeProtocolSideRevenueUsd to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeProtocolSideRevenueUsdNil() {
	o.CumulativeProtocolSideRevenueUsd.Set(nil)
}

// UnsetCumulativeProtocolSideRevenueUsd ensures that no value is present for CumulativeProtocolSideRevenueUsd, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetCumulativeProtocolSideRevenueUsd() {
	o.CumulativeProtocolSideRevenueUsd.Unset()
}

// GetCumulativeTotalRevenueUsd returns the CumulativeTotalRevenueUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeTotalRevenueUsd() string {
	if o == nil || IsNil(o.CumulativeTotalRevenueUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeTotalRevenueUsd.Get()
}

// GetCumulativeTotalRevenueUsdOk returns a tuple with the CumulativeTotalRevenueUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeTotalRevenueUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeTotalRevenueUsd.Get(), o.CumulativeTotalRevenueUsd.IsSet()
}

// HasCumulativeTotalRevenueUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasCumulativeTotalRevenueUsd() bool {
	if o != nil && o.CumulativeTotalRevenueUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeTotalRevenueUsd gets a reference to the given NullableString and assigns it to the CumulativeTotalRevenueUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeTotalRevenueUsd(v string) {
	o.CumulativeTotalRevenueUsd.Set(&v)
}
// SetCumulativeTotalRevenueUsdNil sets the value for CumulativeTotalRevenueUsd to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeTotalRevenueUsdNil() {
	o.CumulativeTotalRevenueUsd.Set(nil)
}

// UnsetCumulativeTotalRevenueUsd ensures that no value is present for CumulativeTotalRevenueUsd, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetCumulativeTotalRevenueUsd() {
	o.CumulativeTotalRevenueUsd.Unset()
}

// GetCumulativeVolumeUsd returns the CumulativeVolumeUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeVolumeUsd() string {
	if o == nil || IsNil(o.CumulativeVolumeUsd.Get()) {
		var ret string
		return ret
	}
	return *o.CumulativeVolumeUsd.Get()
}

// GetCumulativeVolumeUsdOk returns a tuple with the CumulativeVolumeUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetCumulativeVolumeUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeVolumeUsd.Get(), o.CumulativeVolumeUsd.IsSet()
}

// HasCumulativeVolumeUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasCumulativeVolumeUsd() bool {
	if o != nil && o.CumulativeVolumeUsd.IsSet() {
		return true
	}

	return false
}

// SetCumulativeVolumeUsd gets a reference to the given NullableString and assigns it to the CumulativeVolumeUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeVolumeUsd(v string) {
	o.CumulativeVolumeUsd.Set(&v)
}
// SetCumulativeVolumeUsdNil sets the value for CumulativeVolumeUsd to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetCumulativeVolumeUsdNil() {
	o.CumulativeVolumeUsd.Set(nil)
}

// UnsetCumulativeVolumeUsd ensures that no value is present for CumulativeVolumeUsd, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetCumulativeVolumeUsd() {
	o.CumulativeVolumeUsd.Unset()
}

// GetInputTokenBalances returns the InputTokenBalances field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetInputTokenBalances() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenBalances
}

// GetInputTokenBalancesOk returns a tuple with the InputTokenBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetInputTokenBalancesOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenBalances) {
		return nil, false
	}
	return o.InputTokenBalances, true
}

// HasInputTokenBalances returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasInputTokenBalances() bool {
	if o != nil && IsNil(o.InputTokenBalances) {
		return true
	}

	return false
}

// SetInputTokenBalances gets a reference to the given []string and assigns it to the InputTokenBalances field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetInputTokenBalances(v []string) {
	o.InputTokenBalances = v
}

// GetInputTokenWeights returns the InputTokenWeights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetInputTokenWeights() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.InputTokenWeights
}

// GetInputTokenWeightsOk returns a tuple with the InputTokenWeights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetInputTokenWeightsOk() ([]string, bool) {
	if o == nil || IsNil(o.InputTokenWeights) {
		return nil, false
	}
	return o.InputTokenWeights, true
}

// HasInputTokenWeights returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasInputTokenWeights() bool {
	if o != nil && IsNil(o.InputTokenWeights) {
		return true
	}

	return false
}

// SetInputTokenWeights gets a reference to the given []string and assigns it to the InputTokenWeights field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetInputTokenWeights(v []string) {
	o.InputTokenWeights = v
}

// GetOutputTokenSupply returns the OutputTokenSupply field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetOutputTokenSupply() string {
	if o == nil || IsNil(o.OutputTokenSupply.Get()) {
		var ret string
		return ret
	}
	return *o.OutputTokenSupply.Get()
}

// GetOutputTokenSupplyOk returns a tuple with the OutputTokenSupply field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetOutputTokenSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputTokenSupply.Get(), o.OutputTokenSupply.IsSet()
}

// HasOutputTokenSupply returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasOutputTokenSupply() bool {
	if o != nil && o.OutputTokenSupply.IsSet() {
		return true
	}

	return false
}

// SetOutputTokenSupply gets a reference to the given NullableString and assigns it to the OutputTokenSupply field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetOutputTokenSupply(v string) {
	o.OutputTokenSupply.Set(&v)
}
// SetOutputTokenSupplyNil sets the value for OutputTokenSupply to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetOutputTokenSupplyNil() {
	o.OutputTokenSupply.Set(nil)
}

// UnsetOutputTokenSupply ensures that no value is present for OutputTokenSupply, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetOutputTokenSupply() {
	o.OutputTokenSupply.Unset()
}

// GetOutputTokenPriceUsd returns the OutputTokenPriceUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetOutputTokenPriceUsd() string {
	if o == nil || IsNil(o.OutputTokenPriceUsd.Get()) {
		var ret string
		return ret
	}
	return *o.OutputTokenPriceUsd.Get()
}

// GetOutputTokenPriceUsdOk returns a tuple with the OutputTokenPriceUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetOutputTokenPriceUsdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputTokenPriceUsd.Get(), o.OutputTokenPriceUsd.IsSet()
}

// HasOutputTokenPriceUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasOutputTokenPriceUsd() bool {
	if o != nil && o.OutputTokenPriceUsd.IsSet() {
		return true
	}

	return false
}

// SetOutputTokenPriceUsd gets a reference to the given NullableString and assigns it to the OutputTokenPriceUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetOutputTokenPriceUsd(v string) {
	o.OutputTokenPriceUsd.Set(&v)
}
// SetOutputTokenPriceUsdNil sets the value for OutputTokenPriceUsd to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetOutputTokenPriceUsdNil() {
	o.OutputTokenPriceUsd.Set(nil)
}

// UnsetOutputTokenPriceUsd ensures that no value is present for OutputTokenPriceUsd, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetOutputTokenPriceUsd() {
	o.OutputTokenPriceUsd.Unset()
}

// GetStakedOutputTokenAmount returns the StakedOutputTokenAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetStakedOutputTokenAmount() string {
	if o == nil || IsNil(o.StakedOutputTokenAmount.Get()) {
		var ret string
		return ret
	}
	return *o.StakedOutputTokenAmount.Get()
}

// GetStakedOutputTokenAmountOk returns a tuple with the StakedOutputTokenAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetStakedOutputTokenAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StakedOutputTokenAmount.Get(), o.StakedOutputTokenAmount.IsSet()
}

// HasStakedOutputTokenAmount returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasStakedOutputTokenAmount() bool {
	if o != nil && o.StakedOutputTokenAmount.IsSet() {
		return true
	}

	return false
}

// SetStakedOutputTokenAmount gets a reference to the given NullableString and assigns it to the StakedOutputTokenAmount field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetStakedOutputTokenAmount(v string) {
	o.StakedOutputTokenAmount.Set(&v)
}
// SetStakedOutputTokenAmountNil sets the value for StakedOutputTokenAmount to be an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetStakedOutputTokenAmountNil() {
	o.StakedOutputTokenAmount.Set(nil)
}

// UnsetStakedOutputTokenAmount ensures that no value is present for StakedOutputTokenAmount, not even an explicit nil
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) UnsetStakedOutputTokenAmount() {
	o.StakedOutputTokenAmount.Unset()
}

// GetRewardTokenEmissionsAmount returns the RewardTokenEmissionsAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRewardTokenEmissionsAmount() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokenEmissionsAmount
}

// GetRewardTokenEmissionsAmountOk returns a tuple with the RewardTokenEmissionsAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRewardTokenEmissionsAmountOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokenEmissionsAmount) {
		return nil, false
	}
	return o.RewardTokenEmissionsAmount, true
}

// HasRewardTokenEmissionsAmount returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasRewardTokenEmissionsAmount() bool {
	if o != nil && IsNil(o.RewardTokenEmissionsAmount) {
		return true
	}

	return false
}

// SetRewardTokenEmissionsAmount gets a reference to the given []string and assigns it to the RewardTokenEmissionsAmount field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetRewardTokenEmissionsAmount(v []string) {
	o.RewardTokenEmissionsAmount = v
}

// GetRewardTokenEmissionsUsd returns the RewardTokenEmissionsUsd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRewardTokenEmissionsUsd() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.RewardTokenEmissionsUsd
}

// GetRewardTokenEmissionsUsdOk returns a tuple with the RewardTokenEmissionsUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetRewardTokenEmissionsUsdOk() ([]string, bool) {
	if o == nil || IsNil(o.RewardTokenEmissionsUsd) {
		return nil, false
	}
	return o.RewardTokenEmissionsUsd, true
}

// HasRewardTokenEmissionsUsd returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasRewardTokenEmissionsUsd() bool {
	if o != nil && IsNil(o.RewardTokenEmissionsUsd) {
		return true
	}

	return false
}

// SetRewardTokenEmissionsUsd gets a reference to the given []string and assigns it to the RewardTokenEmissionsUsd field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetRewardTokenEmissionsUsd(v []string) {
	o.RewardTokenEmissionsUsd = v
}

// GetEvaluatedAsk returns the EvaluatedAsk field value if set, zero value otherwise.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetEvaluatedAsk() float64 {
	if o == nil || IsNil(o.EvaluatedAsk) {
		var ret float64
		return ret
	}
	return *o.EvaluatedAsk
}

// GetEvaluatedAskOk returns a tuple with the EvaluatedAsk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) GetEvaluatedAskOk() (*float64, bool) {
	if o == nil || IsNil(o.EvaluatedAsk) {
		return nil, false
	}
	return o.EvaluatedAsk, true
}

// HasEvaluatedAsk returns a boolean if a field has been set.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) HasEvaluatedAsk() bool {
	if o != nil && !IsNil(o.EvaluatedAsk) {
		return true
	}

	return false
}

// SetEvaluatedAsk gets a reference to the given float64 and assigns it to the EvaluatedAsk field.
func (o *UNISWAPV2ETHEREUMLiquidityPoolDTO) SetEvaluatedAsk(v float64) {
	o.EvaluatedAsk = &v
}

func (o UNISWAPV2ETHEREUMLiquidityPoolDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UNISWAPV2ETHEREUMLiquidityPoolDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryTime) {
		toSerialize["entry_time"] = o.EntryTime
	}
	if !IsNil(o.RecvTime) {
		toSerialize["recv_time"] = o.RecvTime
	}
	if !IsNil(o.BlockNumber) {
		toSerialize["block_number"] = o.BlockNumber
	}
	if !IsNil(o.Vid) {
		toSerialize["vid"] = o.Vid
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Protocol.IsSet() {
		toSerialize["protocol"] = o.Protocol.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Symbol.IsSet() {
		toSerialize["symbol"] = o.Symbol.Get()
	}
	if o.InputTokens != nil {
		toSerialize["input_tokens"] = o.InputTokens
	}
	if o.OutputToken.IsSet() {
		toSerialize["output_token"] = o.OutputToken.Get()
	}
	if o.RewardTokens != nil {
		toSerialize["reward_tokens"] = o.RewardTokens
	}
	if o.Fees != nil {
		toSerialize["fees"] = o.Fees
	}
	if !IsNil(o.IsSingleSided) {
		toSerialize["is_single_sided"] = o.IsSingleSided
	}
	if o.CreatedTimestamp.IsSet() {
		toSerialize["created_timestamp"] = o.CreatedTimestamp.Get()
	}
	if o.CreatedBlockNumber.IsSet() {
		toSerialize["created_block_number"] = o.CreatedBlockNumber.Get()
	}
	if o.TotalValueLockedUsd.IsSet() {
		toSerialize["total_value_locked_usd"] = o.TotalValueLockedUsd.Get()
	}
	if o.CumulativeSupplySideRevenueUsd.IsSet() {
		toSerialize["cumulative_supply_side_revenue_usd"] = o.CumulativeSupplySideRevenueUsd.Get()
	}
	if o.CumulativeProtocolSideRevenueUsd.IsSet() {
		toSerialize["cumulative_protocol_side_revenue_usd"] = o.CumulativeProtocolSideRevenueUsd.Get()
	}
	if o.CumulativeTotalRevenueUsd.IsSet() {
		toSerialize["cumulative_total_revenue_usd"] = o.CumulativeTotalRevenueUsd.Get()
	}
	if o.CumulativeVolumeUsd.IsSet() {
		toSerialize["cumulative_volume_usd"] = o.CumulativeVolumeUsd.Get()
	}
	if o.InputTokenBalances != nil {
		toSerialize["input_token_balances"] = o.InputTokenBalances
	}
	if o.InputTokenWeights != nil {
		toSerialize["input_token_weights"] = o.InputTokenWeights
	}
	if o.OutputTokenSupply.IsSet() {
		toSerialize["output_token_supply"] = o.OutputTokenSupply.Get()
	}
	if o.OutputTokenPriceUsd.IsSet() {
		toSerialize["output_token_price_usd"] = o.OutputTokenPriceUsd.Get()
	}
	if o.StakedOutputTokenAmount.IsSet() {
		toSerialize["staked_output_token_amount"] = o.StakedOutputTokenAmount.Get()
	}
	if o.RewardTokenEmissionsAmount != nil {
		toSerialize["reward_token_emissions_amount"] = o.RewardTokenEmissionsAmount
	}
	if o.RewardTokenEmissionsUsd != nil {
		toSerialize["reward_token_emissions_usd"] = o.RewardTokenEmissionsUsd
	}
	// skip: evaluated_ask is readOnly
	return toSerialize, nil
}

type NullableUNISWAPV2ETHEREUMLiquidityPoolDTO struct {
	value *UNISWAPV2ETHEREUMLiquidityPoolDTO
	isSet bool
}

func (v NullableUNISWAPV2ETHEREUMLiquidityPoolDTO) Get() *UNISWAPV2ETHEREUMLiquidityPoolDTO {
	return v.value
}

func (v *NullableUNISWAPV2ETHEREUMLiquidityPoolDTO) Set(val *UNISWAPV2ETHEREUMLiquidityPoolDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUNISWAPV2ETHEREUMLiquidityPoolDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUNISWAPV2ETHEREUMLiquidityPoolDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUNISWAPV2ETHEREUMLiquidityPoolDTO(val *UNISWAPV2ETHEREUMLiquidityPoolDTO) *NullableUNISWAPV2ETHEREUMLiquidityPoolDTO {
	return &NullableUNISWAPV2ETHEREUMLiquidityPoolDTO{value: val, isSet: true}
}

func (v NullableUNISWAPV2ETHEREUMLiquidityPoolDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUNISWAPV2ETHEREUMLiquidityPoolDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


