/*
On Chain Dapps - REST API

Testing CRYPTOPUNKSETHEREUMApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_CRYPTOPUNKSETHEREUMApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMBidsCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMBidsCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMCollectionDailySnapshotsCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMCollectionsCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMCollectionsCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMDataSourcesCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMDataSourcesCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMItemsCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMItemsCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMMarketPlacesCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMMarketPlacesCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMMarketplaceDailySnapshotsCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMTradesCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMTradesCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CRYPTOPUNKSETHEREUMApiService CRYPTOPUNKSETHEREUMUsersCurrent", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CRYPTOPUNKSETHEREUMApi.CRYPTOPUNKSETHEREUMUsersCurrent(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
