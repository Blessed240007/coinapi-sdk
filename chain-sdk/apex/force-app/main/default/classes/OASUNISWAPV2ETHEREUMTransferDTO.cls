/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * 
 */
public class OASUNISWAPV2ETHEREUMTransferDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * Entity is used to track data from the transfer events (execution of: deposit/withdraw, mint/burn).
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * Transaction hash.
     * @return id
     */
    public String id { get; set; }

    /**
     * 
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * 
     * @return sender
     */
    public String sender { get; set; }

    /**
     * 
     * @return type
     */
    public String type { get; set; }

    /**
     * 
     * @return liquidity
     */
    public String liquidity { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUNISWAPV2ETHEREUMTransferDTO getExample() {
        OASUNISWAPV2ETHEREUMTransferDTO unISWAPV2ETHEREUMTransferDTO = new OASUNISWAPV2ETHEREUMTransferDTO();
          unISWAPV2ETHEREUMTransferDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMTransferDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMTransferDTO.blockNumber = 123456789L;
          unISWAPV2ETHEREUMTransferDTO.blockRange = '';
          unISWAPV2ETHEREUMTransferDTO.id = '';
          unISWAPV2ETHEREUMTransferDTO.timestamp = '';
          unISWAPV2ETHEREUMTransferDTO.sender = '';
          unISWAPV2ETHEREUMTransferDTO.type = '';
          unISWAPV2ETHEREUMTransferDTO.liquidity = '';
        return unISWAPV2ETHEREUMTransferDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUNISWAPV2ETHEREUMTransferDTO) {           
            OASUNISWAPV2ETHEREUMTransferDTO unISWAPV2ETHEREUMTransferDTO = (OASUNISWAPV2ETHEREUMTransferDTO) obj;
            return this.entryTime == unISWAPV2ETHEREUMTransferDTO.entryTime
                && this.recvTime == unISWAPV2ETHEREUMTransferDTO.recvTime
                && this.blockNumber == unISWAPV2ETHEREUMTransferDTO.blockNumber
                && this.blockRange == unISWAPV2ETHEREUMTransferDTO.blockRange
                && this.id == unISWAPV2ETHEREUMTransferDTO.id
                && this.timestamp == unISWAPV2ETHEREUMTransferDTO.timestamp
                && this.sender == unISWAPV2ETHEREUMTransferDTO.sender
                && this.type == unISWAPV2ETHEREUMTransferDTO.type
                && this.liquidity == unISWAPV2ETHEREUMTransferDTO.liquidity;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (sender == null ? 0 : System.hashCode(sender));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (liquidity == null ? 0 : System.hashCode(liquidity));
        return hashCode;
    }
}

