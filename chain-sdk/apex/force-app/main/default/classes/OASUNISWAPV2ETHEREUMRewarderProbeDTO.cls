/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * 
 */
public class OASUNISWAPV2ETHEREUMRewarderProbeDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * (rewarder)-(probeNum)
     * @return id
     */
    public String id { get; set; }

    /**
     * The address being probed
     * @return user
     */
    public String user { get; set; }

    /**
     * The value from the last probe
     * @return pending
     */
    public String pending { get; set; }

    /**
     * Block at which the probe was made
     * @return blockNum
     */
    public String blockNum { get; set; }

    /**
     * Block timestamp at whihc the probe was taken
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * Total LP staked in pool at the time of the probe
     * @return lpStaked
     */
    public String lpStaked { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'block_num' => 'blockNum',
        'lp_staked' => 'lpStaked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'block_num' => 'blockNum',
        'lp_staked' => 'lpStaked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'block_num' => 'blockNum',
        'lp_staked' => 'lpStaked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'block_num' => 'blockNum',
        'lp_staked' => 'lpStaked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'block_num' => 'blockNum',
        'lp_staked' => 'lpStaked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'block_num' => 'blockNum',
        'lp_staked' => 'lpStaked'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASUNISWAPV2ETHEREUMRewarderProbeDTO getExample() {
        OASUNISWAPV2ETHEREUMRewarderProbeDTO unISWAPV2ETHEREUMRewarderProbeDTO = new OASUNISWAPV2ETHEREUMRewarderProbeDTO();
          unISWAPV2ETHEREUMRewarderProbeDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMRewarderProbeDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMRewarderProbeDTO.blockNumber = 123456789L;
          unISWAPV2ETHEREUMRewarderProbeDTO.blockRange = '';
          unISWAPV2ETHEREUMRewarderProbeDTO.id = '';
          unISWAPV2ETHEREUMRewarderProbeDTO.user = '';
          unISWAPV2ETHEREUMRewarderProbeDTO.pending = '';
          unISWAPV2ETHEREUMRewarderProbeDTO.blockNum = '';
          unISWAPV2ETHEREUMRewarderProbeDTO.timestamp = '';
          unISWAPV2ETHEREUMRewarderProbeDTO.lpStaked = '';
        return unISWAPV2ETHEREUMRewarderProbeDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUNISWAPV2ETHEREUMRewarderProbeDTO) {           
            OASUNISWAPV2ETHEREUMRewarderProbeDTO unISWAPV2ETHEREUMRewarderProbeDTO = (OASUNISWAPV2ETHEREUMRewarderProbeDTO) obj;
            return this.entryTime == unISWAPV2ETHEREUMRewarderProbeDTO.entryTime
                && this.recvTime == unISWAPV2ETHEREUMRewarderProbeDTO.recvTime
                && this.blockNumber == unISWAPV2ETHEREUMRewarderProbeDTO.blockNumber
                && this.blockRange == unISWAPV2ETHEREUMRewarderProbeDTO.blockRange
                && this.id == unISWAPV2ETHEREUMRewarderProbeDTO.id
                && this.user == unISWAPV2ETHEREUMRewarderProbeDTO.user
                && this.pending == unISWAPV2ETHEREUMRewarderProbeDTO.pending
                && this.blockNum == unISWAPV2ETHEREUMRewarderProbeDTO.blockNum
                && this.timestamp == unISWAPV2ETHEREUMRewarderProbeDTO.timestamp
                && this.lpStaked == unISWAPV2ETHEREUMRewarderProbeDTO.lpStaked;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (user == null ? 0 : System.hashCode(user));
        hashCode = (17 * hashCode) + (pending == null ? 0 : System.hashCode(pending));
        hashCode = (17 * hashCode) + (blockNum == null ? 0 : System.hashCode(blockNum));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (lpStaked == null ? 0 : System.hashCode(lpStaked));
        return hashCode;
    }
}

