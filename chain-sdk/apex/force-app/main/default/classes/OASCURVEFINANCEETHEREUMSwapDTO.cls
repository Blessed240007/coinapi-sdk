/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * 
 */
public class OASCURVEFINANCEETHEREUMSwapDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Block number of this event
     * @return blockNumber
     */
    public String blockNumber { get; set; }

    /**
     * Swap-(transaction hash)-(log index)
     * @return id
     */
    public String id { get; set; }

    /**
     * Transaction hash of the transaction that emitted this event
     * @return hash
     */
    public String hash { get; set; }

    /**
     * Event log index. For transactions that don\'t emit event, create arbitrary index starting from 0
     * @return logIndex
     */
    public Integer logIndex { get; set; }

    /**
     * The protocol this transaction belongs to
     * @return protocol
     */
    public String protocol { get; set; }

    /**
     * Address that received the tokens
     * @return to
     */
    public String to { get; set; }

    /**
     * Address that sent the tokens
     * @return r_from
     */
    public String r_from { get; set; }

    /**
     * Timestamp of this event
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * Token deposited into pool
     * @return tokenIn
     */
    public String tokenIn { get; set; }

    /**
     * Amount of token deposited into pool in native units
     * @return amountIn
     */
    public String amountIn { get; set; }

    /**
     * Amount of token deposited into pool in USD
     * @return amountInUsd
     */
    public String amountInUsd { get; set; }

    /**
     * Token withdrawn from pool
     * @return tokenOut
     */
    public String tokenOut { get; set; }

    /**
     * Amount of token withdrawn from pool in native units
     * @return amountOut
     */
    public String amountOut { get; set; }

    /**
     * Amount of token withdrawn from pool in USD
     * @return amountOutUsd
     */
    public String amountOutUsd { get; set; }

    /**
     * The pool involving this transaction
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Get poolId
     * @return poolId
     */
    public String poolId { get; private set; }

    /**
     * Get transactionId
     * @return transactionId
     */
    public String transactionId { get; private set; }

    /**
     * Get evaluatedPrice
     * @return evaluatedPrice
     */
    public Double evaluatedPrice { get; private set; }

    /**
     * Get evaluatedAmount
     * @return evaluatedAmount
     */
    public Double evaluatedAmount { get; private set; }

    /**
     * Get evaluatedAggressor
     * @return evaluatedAggressor
     */
    public OASTransactionsETradeAggressiveSide evaluatedAggressor { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'from' => 'r_from',
        'token_in' => 'tokenIn',
        'amount_in' => 'amountIn',
        'amount_in_usd' => 'amountInUsd',
        'token_out' => 'tokenOut',
        'amount_out' => 'amountOut',
        'amount_out_usd' => 'amountOutUsd',
        'pool_id' => 'poolId',
        'transaction_id' => 'transactionId',
        'evaluated_price' => 'evaluatedPrice',
        'evaluated_amount' => 'evaluatedAmount',
        'evaluated_aggressor' => 'evaluatedAggressor'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASCURVEFINANCEETHEREUMSwapDTO getExample() {
        OASCURVEFINANCEETHEREUMSwapDTO cuRVEFINANCEETHEREUMSwapDTO = new OASCURVEFINANCEETHEREUMSwapDTO();
          cuRVEFINANCEETHEREUMSwapDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          cuRVEFINANCEETHEREUMSwapDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          cuRVEFINANCEETHEREUMSwapDTO.blockNumber = '';
          cuRVEFINANCEETHEREUMSwapDTO.id = '';
          cuRVEFINANCEETHEREUMSwapDTO.hash = '';
          cuRVEFINANCEETHEREUMSwapDTO.logIndex = 0;
          cuRVEFINANCEETHEREUMSwapDTO.protocol = '';
          cuRVEFINANCEETHEREUMSwapDTO.to = '';
          cuRVEFINANCEETHEREUMSwapDTO.r_from = '';
          cuRVEFINANCEETHEREUMSwapDTO.timestamp = '';
          cuRVEFINANCEETHEREUMSwapDTO.tokenIn = '';
          cuRVEFINANCEETHEREUMSwapDTO.amountIn = '';
          cuRVEFINANCEETHEREUMSwapDTO.amountInUsd = '';
          cuRVEFINANCEETHEREUMSwapDTO.tokenOut = '';
          cuRVEFINANCEETHEREUMSwapDTO.amountOut = '';
          cuRVEFINANCEETHEREUMSwapDTO.amountOutUsd = '';
          cuRVEFINANCEETHEREUMSwapDTO.pool = '';
          cuRVEFINANCEETHEREUMSwapDTO.poolId = '';
          cuRVEFINANCEETHEREUMSwapDTO.transactionId = '';
          cuRVEFINANCEETHEREUMSwapDTO.evaluatedPrice = 1.3579;
          cuRVEFINANCEETHEREUMSwapDTO.evaluatedAmount = 1.3579;
          cuRVEFINANCEETHEREUMSwapDTO.evaluatedAggressor = OASTransactionsETradeAggressiveSide.getExample();
        return cuRVEFINANCEETHEREUMSwapDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCURVEFINANCEETHEREUMSwapDTO) {           
            OASCURVEFINANCEETHEREUMSwapDTO cuRVEFINANCEETHEREUMSwapDTO = (OASCURVEFINANCEETHEREUMSwapDTO) obj;
            return this.entryTime == cuRVEFINANCEETHEREUMSwapDTO.entryTime
                && this.recvTime == cuRVEFINANCEETHEREUMSwapDTO.recvTime
                && this.blockNumber == cuRVEFINANCEETHEREUMSwapDTO.blockNumber
                && this.id == cuRVEFINANCEETHEREUMSwapDTO.id
                && this.hash == cuRVEFINANCEETHEREUMSwapDTO.hash
                && this.logIndex == cuRVEFINANCEETHEREUMSwapDTO.logIndex
                && this.protocol == cuRVEFINANCEETHEREUMSwapDTO.protocol
                && this.to == cuRVEFINANCEETHEREUMSwapDTO.to
                && this.r_from == cuRVEFINANCEETHEREUMSwapDTO.r_from
                && this.timestamp == cuRVEFINANCEETHEREUMSwapDTO.timestamp
                && this.tokenIn == cuRVEFINANCEETHEREUMSwapDTO.tokenIn
                && this.amountIn == cuRVEFINANCEETHEREUMSwapDTO.amountIn
                && this.amountInUsd == cuRVEFINANCEETHEREUMSwapDTO.amountInUsd
                && this.tokenOut == cuRVEFINANCEETHEREUMSwapDTO.tokenOut
                && this.amountOut == cuRVEFINANCEETHEREUMSwapDTO.amountOut
                && this.amountOutUsd == cuRVEFINANCEETHEREUMSwapDTO.amountOutUsd
                && this.pool == cuRVEFINANCEETHEREUMSwapDTO.pool
                && this.poolId == cuRVEFINANCEETHEREUMSwapDTO.poolId
                && this.transactionId == cuRVEFINANCEETHEREUMSwapDTO.transactionId
                && this.evaluatedPrice == cuRVEFINANCEETHEREUMSwapDTO.evaluatedPrice
                && this.evaluatedAmount == cuRVEFINANCEETHEREUMSwapDTO.evaluatedAmount
                && this.evaluatedAggressor == cuRVEFINANCEETHEREUMSwapDTO.evaluatedAggressor;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (hash == null ? 0 : System.hashCode(hash));
        hashCode = (17 * hashCode) + (logIndex == null ? 0 : System.hashCode(logIndex));
        hashCode = (17 * hashCode) + (protocol == null ? 0 : System.hashCode(protocol));
        hashCode = (17 * hashCode) + (to == null ? 0 : System.hashCode(to));
        hashCode = (17 * hashCode) + (r_from == null ? 0 : System.hashCode(r_from));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (tokenIn == null ? 0 : System.hashCode(tokenIn));
        hashCode = (17 * hashCode) + (amountIn == null ? 0 : System.hashCode(amountIn));
        hashCode = (17 * hashCode) + (amountInUsd == null ? 0 : System.hashCode(amountInUsd));
        hashCode = (17 * hashCode) + (tokenOut == null ? 0 : System.hashCode(tokenOut));
        hashCode = (17 * hashCode) + (amountOut == null ? 0 : System.hashCode(amountOut));
        hashCode = (17 * hashCode) + (amountOutUsd == null ? 0 : System.hashCode(amountOutUsd));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (poolId == null ? 0 : System.hashCode(poolId));
        hashCode = (17 * hashCode) + (transactionId == null ? 0 : System.hashCode(transactionId));
        hashCode = (17 * hashCode) + (evaluatedPrice == null ? 0 : System.hashCode(evaluatedPrice));
        hashCode = (17 * hashCode) + (evaluatedAmount == null ? 0 : System.hashCode(evaluatedAmount));
        hashCode = (17 * hashCode) + (evaluatedAggressor == null ? 0 : System.hashCode(evaluatedAggressor));
        return hashCode;
    }
}

