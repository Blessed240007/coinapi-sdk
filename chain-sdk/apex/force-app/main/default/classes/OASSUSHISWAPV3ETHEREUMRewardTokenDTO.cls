/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Reward tokens awarded to lenders and borrowers.
 */
public class OASSUSHISWAPV3ETHEREUMRewardTokenDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * (reward token type)-(smart contract address of the reward token)
     * @return id
     */
    public String id { get; set; }

    /**
     * Reference to the actual token
     * @return token
     */
    public String token { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASSUSHISWAPV3ETHEREUMRewardTokenDTO getExample() {
        OASSUSHISWAPV3ETHEREUMRewardTokenDTO suSHISWAPV3ETHEREUMRewardTokenDTO = new OASSUSHISWAPV3ETHEREUMRewardTokenDTO();
          suSHISWAPV3ETHEREUMRewardTokenDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMRewardTokenDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMRewardTokenDTO.blockNumber = 123456789L;
          suSHISWAPV3ETHEREUMRewardTokenDTO.id = '';
          suSHISWAPV3ETHEREUMRewardTokenDTO.token = '';
        return suSHISWAPV3ETHEREUMRewardTokenDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSUSHISWAPV3ETHEREUMRewardTokenDTO) {           
            OASSUSHISWAPV3ETHEREUMRewardTokenDTO suSHISWAPV3ETHEREUMRewardTokenDTO = (OASSUSHISWAPV3ETHEREUMRewardTokenDTO) obj;
            return this.entryTime == suSHISWAPV3ETHEREUMRewardTokenDTO.entryTime
                && this.recvTime == suSHISWAPV3ETHEREUMRewardTokenDTO.recvTime
                && this.blockNumber == suSHISWAPV3ETHEREUMRewardTokenDTO.blockNumber
                && this.id == suSHISWAPV3ETHEREUMRewardTokenDTO.id
                && this.token == suSHISWAPV3ETHEREUMRewardTokenDTO.token;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (token == null ? 0 : System.hashCode(token));
        return hashCode;
    }
}

