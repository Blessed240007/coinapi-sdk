/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents a liquidity pool daily snapshot for Uniswap V2.
 */
public class OASUNISWAPV2ETHEREUMLiquidityPoolDai implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * .
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * (smart contract address of the pool)-(# of days since Unix epoch time)
     * @return id
     */
    public String id { get; set; }

    /**
     * The protocol this snapshot belongs to
     * @return protocol
     */
    public String protocol { get; set; }

    /**
     * The pool this snapshot belongs to
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Timestamp of this snapshot
     * @return timestamp
     */
    public String timestamp { get; set; }

    /**
     * Current TVL (Total Value Locked) of this pool
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * All revenue generated by the liquidity pool, accrued to the supply side.
     * @return cumulativeSupplySideRevenueUsd
     */
    public String cumulativeSupplySideRevenueUsd { get; set; }

    /**
     * Daily revenue generated by the liquidity pool, accrued to the supply side.
     * @return dailySupplySideRevenueUsd
     */
    public String dailySupplySideRevenueUsd { get; set; }

    /**
     * All revenue generated by the liquidity pool, accrued to the protocol.
     * @return cumulativeProtocolSideRevenueUsd
     */
    public String cumulativeProtocolSideRevenueUsd { get; set; }

    /**
     * Daily revenue generated by the liquidity pool, accrued to the protocol.
     * @return dailyProtocolSideRevenueUsd
     */
    public String dailyProtocolSideRevenueUsd { get; set; }

    /**
     * All revenue generated by the liquidity pool.
     * @return cumulativeTotalRevenueUsd
     */
    public String cumulativeTotalRevenueUsd { get; set; }

    /**
     * Daily revenue generated by the liquidity pool.
     * @return dailyTotalRevenueUsd
     */
    public String dailyTotalRevenueUsd { get; set; }

    /**
     * All trade volume occurred in a given day, in USD.
     * @return dailyVolumeUsd
     */
    public String dailyVolumeUsd { get; set; }

    /**
     * All trade volume occurred in a given day for a specific input token, in native amount. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return dailyVolumeByTokenAmount
     */
    public List<String> dailyVolumeByTokenAmount { get; set; }

    /**
     * All trade volume occurred in a given day for a specific input token, in USD. The ordering should be the same as the pool\'s `inputTokens` field..
     * @return dailyVolumeByTokenUsd
     */
    public List<String> dailyVolumeByTokenUsd { get; set; }

    /**
     * All historical trade volume occurred in this pool, in USD.
     * @return cumulativeVolumeUsd
     */
    public String cumulativeVolumeUsd { get; set; }

    /**
     * Amount of input tokens in the pool. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return inputTokenBalances
     */
    public List<String> inputTokenBalances { get; set; }

    /**
     * Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.
     * @return inputTokenWeights
     */
    public List<String> inputTokenWeights { get; set; }

    /**
     * Total supply of output token. Note that certain DEXes don\'t have an output token (e.g. Bancor).
     * @return outputTokenSupply
     */
    public String outputTokenSupply { get; set; }

    /**
     * Price per share of output token in USD.
     * @return outputTokenPriceUsd
     */
    public String outputTokenPriceUsd { get; set; }

    /**
     * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY..
     * @return stakedOutputTokenAmount
     */
    public String stakedOutputTokenAmount { get; set; }

    /**
     * Per-block reward token emission as of the current block normalized to a day, in token\'s native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
     * @return rewardTokenEmissionsAmount
     */
    public List<String> rewardTokenEmissionsAmount { get; set; }

    /**
     * Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
     * @return rewardTokenEmissionsUsd
     */
    public List<String> rewardTokenEmissionsUsd { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_weights' => 'inputTokenWeights',
        'output_token_supply' => 'outputTokenSupply',
        'output_token_price_usd' => 'outputTokenPriceUsd',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASUNISWAPV2ETHEREUMLiquidityPoolDai() {
        dailyVolumeByTokenAmount = new List<String>();
        dailyVolumeByTokenUsd = new List<String>();
        inputTokenBalances = new List<String>();
        inputTokenWeights = new List<String>();
        rewardTokenEmissionsAmount = new List<String>();
        rewardTokenEmissionsUsd = new List<String>();
    }

    public static OASUNISWAPV2ETHEREUMLiquidityPoolDai getExample() {
        OASUNISWAPV2ETHEREUMLiquidityPoolDai unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO = new OASUNISWAPV2ETHEREUMLiquidityPoolDai();
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.blockNumber = 123456789L;
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.blockRange = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.id = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.protocol = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.pool = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.timestamp = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.totalValueLockedUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSupplySideRevenueUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailySupplySideRevenueUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeProtocolSideRevenueUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyProtocolSideRevenueUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeTotalRevenueUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyTotalRevenueUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenAmount = new List<String>{''};
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenUsd = new List<String>{''};
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalances = new List<String>{''};
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenWeights = new List<String>{''};
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.outputTokenSupply = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.outputTokenPriceUsd = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.stakedOutputTokenAmount = '';
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsAmount = new List<String>{''};
          unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsUsd = new List<String>{''};
        return unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUNISWAPV2ETHEREUMLiquidityPoolDai) {           
            OASUNISWAPV2ETHEREUMLiquidityPoolDai unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO = (OASUNISWAPV2ETHEREUMLiquidityPoolDai) obj;
            return this.entryTime == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.entryTime
                && this.recvTime == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.recvTime
                && this.blockNumber == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.blockNumber
                && this.blockRange == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.blockRange
                && this.id == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.id
                && this.protocol == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.protocol
                && this.pool == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.pool
                && this.timestamp == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.timestamp
                && this.totalValueLockedUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.totalValueLockedUsd
                && this.cumulativeSupplySideRevenueUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSupplySideRevenueUsd
                && this.dailySupplySideRevenueUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailySupplySideRevenueUsd
                && this.cumulativeProtocolSideRevenueUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeProtocolSideRevenueUsd
                && this.dailyProtocolSideRevenueUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyProtocolSideRevenueUsd
                && this.cumulativeTotalRevenueUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeTotalRevenueUsd
                && this.dailyTotalRevenueUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyTotalRevenueUsd
                && this.dailyVolumeUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeUsd
                && this.dailyVolumeByTokenAmount == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenAmount
                && this.dailyVolumeByTokenUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenUsd
                && this.cumulativeVolumeUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeUsd
                && this.inputTokenBalances == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalances
                && this.inputTokenWeights == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenWeights
                && this.outputTokenSupply == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.outputTokenSupply
                && this.outputTokenPriceUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.outputTokenPriceUsd
                && this.stakedOutputTokenAmount == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.stakedOutputTokenAmount
                && this.rewardTokenEmissionsAmount == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsAmount
                && this.rewardTokenEmissionsUsd == unISWAPV2ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsUsd;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (protocol == null ? 0 : System.hashCode(protocol));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (cumulativeSupplySideRevenueUsd == null ? 0 : System.hashCode(cumulativeSupplySideRevenueUsd));
        hashCode = (17 * hashCode) + (dailySupplySideRevenueUsd == null ? 0 : System.hashCode(dailySupplySideRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeProtocolSideRevenueUsd == null ? 0 : System.hashCode(cumulativeProtocolSideRevenueUsd));
        hashCode = (17 * hashCode) + (dailyProtocolSideRevenueUsd == null ? 0 : System.hashCode(dailyProtocolSideRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeTotalRevenueUsd == null ? 0 : System.hashCode(cumulativeTotalRevenueUsd));
        hashCode = (17 * hashCode) + (dailyTotalRevenueUsd == null ? 0 : System.hashCode(dailyTotalRevenueUsd));
        hashCode = (17 * hashCode) + (dailyVolumeUsd == null ? 0 : System.hashCode(dailyVolumeUsd));
        hashCode = (17 * hashCode) + (dailyVolumeByTokenAmount == null ? 0 : System.hashCode(dailyVolumeByTokenAmount));
        hashCode = (17 * hashCode) + (dailyVolumeByTokenUsd == null ? 0 : System.hashCode(dailyVolumeByTokenUsd));
        hashCode = (17 * hashCode) + (cumulativeVolumeUsd == null ? 0 : System.hashCode(cumulativeVolumeUsd));
        hashCode = (17 * hashCode) + (inputTokenBalances == null ? 0 : System.hashCode(inputTokenBalances));
        hashCode = (17 * hashCode) + (inputTokenWeights == null ? 0 : System.hashCode(inputTokenWeights));
        hashCode = (17 * hashCode) + (outputTokenSupply == null ? 0 : System.hashCode(outputTokenSupply));
        hashCode = (17 * hashCode) + (outputTokenPriceUsd == null ? 0 : System.hashCode(outputTokenPriceUsd));
        hashCode = (17 * hashCode) + (stakedOutputTokenAmount == null ? 0 : System.hashCode(stakedOutputTokenAmount));
        hashCode = (17 * hashCode) + (rewardTokenEmissionsAmount == null ? 0 : System.hashCode(rewardTokenEmissionsAmount));
        hashCode = (17 * hashCode) + (rewardTokenEmissionsUsd == null ? 0 : System.hashCode(rewardTokenEmissionsUsd));
        return hashCode;
    }
}

