/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * 
 */
public class OASUNISWAPV2ETHEREUMLiquidityPoolAmo implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * .
     * @return vid
     */
    public Long vid { get; set; }

    /**
     * .
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * Smart contract address of the pool
     * @return id
     */
    public String id { get; set; }

    /**
     * Input tokens of the pool (not input tokens of the event/transaction). E.g. WETH and USDC from a WETH-USDC pool
     * @return inputTokens
     */
    public List<String> inputTokens { get; set; }

    /**
     * Amount of input tokens in the pool. The ordering is the same as the pool\'s \'inputTokens\' field.
     * @return inputTokenBalances
     */
    public List<String> inputTokenBalances { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'input_tokens' => 'inputTokens',
        'input_token_balances' => 'inputTokenBalances'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'input_tokens' => 'inputTokens',
        'input_token_balances' => 'inputTokenBalances'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'input_tokens' => 'inputTokens',
        'input_token_balances' => 'inputTokenBalances'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'input_tokens' => 'inputTokens',
        'input_token_balances' => 'inputTokenBalances'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'input_tokens' => 'inputTokens',
        'input_token_balances' => 'inputTokenBalances'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'input_tokens' => 'inputTokens',
        'input_token_balances' => 'inputTokenBalances'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASUNISWAPV2ETHEREUMLiquidityPoolAmo() {
        inputTokens = new List<String>();
        inputTokenBalances = new List<String>();
    }

    public static OASUNISWAPV2ETHEREUMLiquidityPoolAmo getExample() {
        OASUNISWAPV2ETHEREUMLiquidityPoolAmo unISWAPV2ETHEREUMLiquidityPoolAmountDTO = new OASUNISWAPV2ETHEREUMLiquidityPoolAmo();
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.blockNumber = 123456789L;
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.vid = 123456789L;
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.blockRange = '';
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.id = '';
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.inputTokens = new List<String>{''};
          unISWAPV2ETHEREUMLiquidityPoolAmountDTO.inputTokenBalances = new List<String>{''};
        return unISWAPV2ETHEREUMLiquidityPoolAmountDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASUNISWAPV2ETHEREUMLiquidityPoolAmo) {           
            OASUNISWAPV2ETHEREUMLiquidityPoolAmo unISWAPV2ETHEREUMLiquidityPoolAmountDTO = (OASUNISWAPV2ETHEREUMLiquidityPoolAmo) obj;
            return this.entryTime == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.entryTime
                && this.recvTime == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.recvTime
                && this.blockNumber == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.blockNumber
                && this.vid == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.vid
                && this.blockRange == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.blockRange
                && this.id == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.id
                && this.inputTokens == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.inputTokens
                && this.inputTokenBalances == unISWAPV2ETHEREUMLiquidityPoolAmountDTO.inputTokenBalances;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (vid == null ? 0 : System.hashCode(vid));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (inputTokens == null ? 0 : System.hashCode(inputTokens));
        hashCode = (17 * hashCode) + (inputTokenBalances == null ? 0 : System.hashCode(inputTokenBalances));
        return hashCode;
    }
}

