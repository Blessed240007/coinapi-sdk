/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Represents a liquidity pool daily snapshot for Sushiswap V3.
 */
public class OASSUSHISWAPV3ETHEREUMLiquidityPoolD implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * The Ethereum block number associated with the liquidity pool daily snapshot.
     * @return block
     */
    public Integer block { get; set; }

    /**
     * Identifier, format: (smart contract address of the pool)-(# of days since Unix epoch time).
     * @return id
     */
    public String id { get; set; }

    /**
     * Number of days since Unix epoch time.
     * @return day
     */
    public Integer day { get; set; }

    /**
     * Protocol associated with the liquidity pool.
     * @return protocol
     */
    public String protocol { get; set; }

    /**
     * Pool this snapshot belongs to.
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Current tick representing the price of token0/token1.
     * @return tick
     */
    public String tick { get; set; }

    /**
     * Current TVL (Total Value Locked) of this pool.
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * The sum of all active and non-active liquidity for this pool.
     * @return totalLiquidity
     */
    public String totalLiquidity { get; set; }

    /**
     * Sum of all active and non-active liquidity in USD for this pool.
     * @return totalLiquidityUsd
     */
    public String totalLiquidityUsd { get; set; }

    /**
     * All liquidity `k` that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.
     * @return activeLiquidity
     */
    public String activeLiquidity { get; set; }

    /**
     * All liquidity in USD that is active. Will be equal to totalLiquidity except for in concentrated liquidity - where activeLiquidity is all liquidity positions that contain the pools current tick.
     * @return activeLiquidityUsd
     */
    public String activeLiquidityUsd { get; set; }

    /**
     * All protocol-side value locked in token amounts that remains uncollected and unused in the pool.
     * @return uncollectedProtocolSideTokenAmounts
     */
    public List<String> uncollectedProtocolSideTokenAmounts { get; set; }

    /**
     * All protocol-side value locking in USD that remains uncollected and unused in the pool.
     * @return uncollectedProtocolSideValuesUsd
     */
    public List<String> uncollectedProtocolSideValuesUsd { get; set; }

    /**
     * All supply-side value locked in token amounts that remains uncollected and unused in the pool.
     * @return uncollectedSupplySideTokenAmounts
     */
    public List<String> uncollectedSupplySideTokenAmounts { get; set; }

    /**
     * All supply-side value locked in USD that remains uncollected and unused in the pool.
     * @return uncollectedSupplySideValuesUsd
     */
    public List<String> uncollectedSupplySideValuesUsd { get; set; }

    /**
     * All revenue generated by the liquidity pool, accrued to the supply side.
     * @return cumulativeSupplySideRevenueUsd
     */
    public String cumulativeSupplySideRevenueUsd { get; set; }

    /**
     * Daily revenue generated by the liquidity pool, accrued to the supply side.
     * @return dailySupplySideRevenueUsd
     */
    public String dailySupplySideRevenueUsd { get; set; }

    /**
     * All revenue generated by the liquidity pool, accrued to the protocol.
     * @return cumulativeProtocolSideRevenueUsd
     */
    public String cumulativeProtocolSideRevenueUsd { get; set; }

    /**
     * Daily revenue generated by the liquidity pool, accrued to the protocol.
     * @return dailyProtocolSideRevenueUsd
     */
    public String dailyProtocolSideRevenueUsd { get; set; }

    /**
     * All revenue generated by the liquidity pool.
     * @return cumulativeTotalRevenueUsd
     */
    public String cumulativeTotalRevenueUsd { get; set; }

    /**
     * Daily revenue generated by the liquidity pool.
     * @return dailyTotalRevenueUsd
     */
    public String dailyTotalRevenueUsd { get; set; }

    /**
     * All historical trade volume occurred in this pool, in USD.
     * @return cumulativeVolumeUsd
     */
    public String cumulativeVolumeUsd { get; set; }

    /**
     * All trade volume occurred in a given day, in USD.
     * @return dailyVolumeUsd
     */
    public String dailyVolumeUsd { get; set; }

    /**
     * All trade volume , in native amount. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return cumulativeVolumeByTokenAmount
     */
    public List<String> cumulativeVolumeByTokenAmount { get; set; }

    /**
     * All trade volume occurred in a given day for a specific input token, in native amount. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return dailyVolumeByTokenAmount
     */
    public List<String> dailyVolumeByTokenAmount { get; set; }

    /**
     * All trade volume, in USD. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return cumulativeVolumeByTokenUsd
     */
    public List<String> cumulativeVolumeByTokenUsd { get; set; }

    /**
     *  All trade volume occurred in a given day for a specific input token, in USD. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return dailyVolumeByTokenUsd
     */
    public List<String> dailyVolumeByTokenUsd { get; set; }

    /**
     * Amount of input tokens in the pool. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return inputTokenBalances
     */
    public List<String> inputTokenBalances { get; set; }

    /**
     * Amount of input tokens in USD in the pool. The ordering should be the same as the pool\'s `inputTokens` field.
     * @return inputTokenBalancesUsd
     */
    public List<String> inputTokenBalancesUsd { get; set; }

    /**
     * Weights of input tokens in the liquidity pool in percentage values. For example, 50/50 for Uniswap pools, 48.2/51.8 for a Curve pool, 10/10/80 for a Balancer pool.
     * @return inputTokenWeights
     */
    public List<String> inputTokenWeights { get; set; }

    /**
     * Total supply of output tokens that are staked (usually in the MasterChef contract). Used to calculate reward APY.
     * @return stakedOutputTokenAmount
     */
    public String stakedOutputTokenAmount { get; set; }

    /**
     * Per-block reward token emission as of the current block normalized to a day, in token\'s native amount. This should be ideally calculated as the theoretical rate instead of the realized amount.
     * @return rewardTokenEmissionsAmount
     */
    public List<String> rewardTokenEmissionsAmount { get; set; }

    /**
     * Per-block reward token emission as of the current block normalized to a day, in USD value. This should be ideally calculated as the theoretical rate instead of the realized amount.
     * @return rewardTokenEmissionsUsd
     */
    public List<String> rewardTokenEmissionsUsd { get; set; }

    /**
     * Total number of deposits (add liquidity).
     * @return cumulativeDepositCount
     */
    public Integer cumulativeDepositCount { get; set; }

    /**
     * Total number of deposits (add liquidity) in a day.
     * @return dailyDepositCount
     */
    public Integer dailyDepositCount { get; set; }

    /**
     * Total number of withdrawals (remove liquidity).
     * @return cumulativeWithdrawCount
     */
    public Integer cumulativeWithdrawCount { get; set; }

    /**
     * Total number of withdrawals (remove liquidity) in a day.
     * @return dailyWithdrawCount
     */
    public Integer dailyWithdrawCount { get; set; }

    /**
     * Total number of trades (swaps).
     * @return cumulativeSwapCount
     */
    public Integer cumulativeSwapCount { get; set; }

    /**
     * Total number of trades (swaps) in a day.
     * @return dailySwapCount
     */
    public Integer dailySwapCount { get; set; }

    /**
     * Number of positions in this market.
     * @return positionCount
     */
    public Integer positionCount { get; set; }

    /**
     * Number of open positions in this market.
     * @return openPositionCount
     */
    public Integer openPositionCount { get; set; }

    /**
     * Number of closed positions in this market.
     * @return closedPositionCount
     */
    public Integer closedPositionCount { get; set; }

    /**
     * Timestamp of when this snapshot was taken/last modified (May be taken after interval has passed).
     * @return timestamp
     */
    public String timestamp { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_' => 'block',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'total_liquidity' => 'totalLiquidity',
        'total_liquidity_usd' => 'totalLiquidityUsd',
        'active_liquidity' => 'activeLiquidity',
        'active_liquidity_usd' => 'activeLiquidityUsd',
        'uncollected_protocol_side_token_amounts' => 'uncollectedProtocolSideTokenAmounts',
        'uncollected_protocol_side_values_usd' => 'uncollectedProtocolSideValuesUsd',
        'uncollected_supply_side_token_amounts' => 'uncollectedSupplySideTokenAmounts',
        'uncollected_supply_side_values_usd' => 'uncollectedSupplySideValuesUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'daily_supply_side_revenue_usd' => 'dailySupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'daily_protocol_side_revenue_usd' => 'dailyProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'daily_total_revenue_usd' => 'dailyTotalRevenueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'daily_volume_usd' => 'dailyVolumeUsd',
        'cumulative_volume_by_token_amount' => 'cumulativeVolumeByTokenAmount',
        'daily_volume_by_token_amount' => 'dailyVolumeByTokenAmount',
        'cumulative_volume_by_token_usd' => 'cumulativeVolumeByTokenUsd',
        'daily_volume_by_token_usd' => 'dailyVolumeByTokenUsd',
        'input_token_balances' => 'inputTokenBalances',
        'input_token_balances_usd' => 'inputTokenBalancesUsd',
        'input_token_weights' => 'inputTokenWeights',
        'staked_output_token_amount' => 'stakedOutputTokenAmount',
        'reward_token_emissions_amount' => 'rewardTokenEmissionsAmount',
        'reward_token_emissions_usd' => 'rewardTokenEmissionsUsd',
        'cumulative_deposit_count' => 'cumulativeDepositCount',
        'daily_deposit_count' => 'dailyDepositCount',
        'cumulative_withdraw_count' => 'cumulativeWithdrawCount',
        'daily_withdraw_count' => 'dailyWithdrawCount',
        'cumulative_swap_count' => 'cumulativeSwapCount',
        'daily_swap_count' => 'dailySwapCount',
        'position_count' => 'positionCount',
        'open_position_count' => 'openPositionCount',
        'closed_position_count' => 'closedPositionCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSUSHISWAPV3ETHEREUMLiquidityPoolD() {
        uncollectedProtocolSideTokenAmounts = new List<String>();
        uncollectedProtocolSideValuesUsd = new List<String>();
        uncollectedSupplySideTokenAmounts = new List<String>();
        uncollectedSupplySideValuesUsd = new List<String>();
        cumulativeVolumeByTokenAmount = new List<String>();
        dailyVolumeByTokenAmount = new List<String>();
        cumulativeVolumeByTokenUsd = new List<String>();
        dailyVolumeByTokenUsd = new List<String>();
        inputTokenBalances = new List<String>();
        inputTokenBalancesUsd = new List<String>();
        inputTokenWeights = new List<String>();
        rewardTokenEmissionsAmount = new List<String>();
        rewardTokenEmissionsUsd = new List<String>();
    }

    public static OASSUSHISWAPV3ETHEREUMLiquidityPoolD getExample() {
        OASSUSHISWAPV3ETHEREUMLiquidityPoolD suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO = new OASSUSHISWAPV3ETHEREUMLiquidityPoolD();
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.blockNumber = 123456789L;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.block = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.id = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.day = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.protocol = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.pool = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.tick = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalValueLockedUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidity = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidityUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidity = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidityUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideTokenAmounts = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideValuesUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideTokenAmounts = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideValuesUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSupplySideRevenueUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySupplySideRevenueUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeProtocolSideRevenueUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyProtocolSideRevenueUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeTotalRevenueUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyTotalRevenueUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeUsd = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenAmount = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenAmount = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalances = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalancesUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenWeights = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.stakedOutputTokenAmount = '';
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsAmount = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeDepositCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyDepositCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeWithdrawCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyWithdrawCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSwapCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySwapCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.positionCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.openPositionCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.closedPositionCount = 0;
          suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.timestamp = '';
        return suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSUSHISWAPV3ETHEREUMLiquidityPoolD) {           
            OASSUSHISWAPV3ETHEREUMLiquidityPoolD suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO = (OASSUSHISWAPV3ETHEREUMLiquidityPoolD) obj;
            return this.entryTime == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.entryTime
                && this.recvTime == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.recvTime
                && this.blockNumber == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.blockNumber
                && this.block == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.block
                && this.id == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.id
                && this.day == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.day
                && this.protocol == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.protocol
                && this.pool == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.pool
                && this.tick == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.tick
                && this.totalValueLockedUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalValueLockedUsd
                && this.totalLiquidity == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidity
                && this.totalLiquidityUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.totalLiquidityUsd
                && this.activeLiquidity == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidity
                && this.activeLiquidityUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.activeLiquidityUsd
                && this.uncollectedProtocolSideTokenAmounts == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideTokenAmounts
                && this.uncollectedProtocolSideValuesUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedProtocolSideValuesUsd
                && this.uncollectedSupplySideTokenAmounts == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideTokenAmounts
                && this.uncollectedSupplySideValuesUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.uncollectedSupplySideValuesUsd
                && this.cumulativeSupplySideRevenueUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSupplySideRevenueUsd
                && this.dailySupplySideRevenueUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySupplySideRevenueUsd
                && this.cumulativeProtocolSideRevenueUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeProtocolSideRevenueUsd
                && this.dailyProtocolSideRevenueUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyProtocolSideRevenueUsd
                && this.cumulativeTotalRevenueUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeTotalRevenueUsd
                && this.dailyTotalRevenueUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyTotalRevenueUsd
                && this.cumulativeVolumeUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeUsd
                && this.dailyVolumeUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeUsd
                && this.cumulativeVolumeByTokenAmount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenAmount
                && this.dailyVolumeByTokenAmount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenAmount
                && this.cumulativeVolumeByTokenUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeVolumeByTokenUsd
                && this.dailyVolumeByTokenUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyVolumeByTokenUsd
                && this.inputTokenBalances == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalances
                && this.inputTokenBalancesUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenBalancesUsd
                && this.inputTokenWeights == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.inputTokenWeights
                && this.stakedOutputTokenAmount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.stakedOutputTokenAmount
                && this.rewardTokenEmissionsAmount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsAmount
                && this.rewardTokenEmissionsUsd == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.rewardTokenEmissionsUsd
                && this.cumulativeDepositCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeDepositCount
                && this.dailyDepositCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyDepositCount
                && this.cumulativeWithdrawCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeWithdrawCount
                && this.dailyWithdrawCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailyWithdrawCount
                && this.cumulativeSwapCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.cumulativeSwapCount
                && this.dailySwapCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.dailySwapCount
                && this.positionCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.positionCount
                && this.openPositionCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.openPositionCount
                && this.closedPositionCount == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.closedPositionCount
                && this.timestamp == suSHISWAPV3ETHEREUMLiquidityPoolDailySnapshotDTO.timestamp;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (block == null ? 0 : System.hashCode(block));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (day == null ? 0 : System.hashCode(day));
        hashCode = (17 * hashCode) + (protocol == null ? 0 : System.hashCode(protocol));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (tick == null ? 0 : System.hashCode(tick));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (totalLiquidity == null ? 0 : System.hashCode(totalLiquidity));
        hashCode = (17 * hashCode) + (totalLiquidityUsd == null ? 0 : System.hashCode(totalLiquidityUsd));
        hashCode = (17 * hashCode) + (activeLiquidity == null ? 0 : System.hashCode(activeLiquidity));
        hashCode = (17 * hashCode) + (activeLiquidityUsd == null ? 0 : System.hashCode(activeLiquidityUsd));
        hashCode = (17 * hashCode) + (uncollectedProtocolSideTokenAmounts == null ? 0 : System.hashCode(uncollectedProtocolSideTokenAmounts));
        hashCode = (17 * hashCode) + (uncollectedProtocolSideValuesUsd == null ? 0 : System.hashCode(uncollectedProtocolSideValuesUsd));
        hashCode = (17 * hashCode) + (uncollectedSupplySideTokenAmounts == null ? 0 : System.hashCode(uncollectedSupplySideTokenAmounts));
        hashCode = (17 * hashCode) + (uncollectedSupplySideValuesUsd == null ? 0 : System.hashCode(uncollectedSupplySideValuesUsd));
        hashCode = (17 * hashCode) + (cumulativeSupplySideRevenueUsd == null ? 0 : System.hashCode(cumulativeSupplySideRevenueUsd));
        hashCode = (17 * hashCode) + (dailySupplySideRevenueUsd == null ? 0 : System.hashCode(dailySupplySideRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeProtocolSideRevenueUsd == null ? 0 : System.hashCode(cumulativeProtocolSideRevenueUsd));
        hashCode = (17 * hashCode) + (dailyProtocolSideRevenueUsd == null ? 0 : System.hashCode(dailyProtocolSideRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeTotalRevenueUsd == null ? 0 : System.hashCode(cumulativeTotalRevenueUsd));
        hashCode = (17 * hashCode) + (dailyTotalRevenueUsd == null ? 0 : System.hashCode(dailyTotalRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeVolumeUsd == null ? 0 : System.hashCode(cumulativeVolumeUsd));
        hashCode = (17 * hashCode) + (dailyVolumeUsd == null ? 0 : System.hashCode(dailyVolumeUsd));
        hashCode = (17 * hashCode) + (cumulativeVolumeByTokenAmount == null ? 0 : System.hashCode(cumulativeVolumeByTokenAmount));
        hashCode = (17 * hashCode) + (dailyVolumeByTokenAmount == null ? 0 : System.hashCode(dailyVolumeByTokenAmount));
        hashCode = (17 * hashCode) + (cumulativeVolumeByTokenUsd == null ? 0 : System.hashCode(cumulativeVolumeByTokenUsd));
        hashCode = (17 * hashCode) + (dailyVolumeByTokenUsd == null ? 0 : System.hashCode(dailyVolumeByTokenUsd));
        hashCode = (17 * hashCode) + (inputTokenBalances == null ? 0 : System.hashCode(inputTokenBalances));
        hashCode = (17 * hashCode) + (inputTokenBalancesUsd == null ? 0 : System.hashCode(inputTokenBalancesUsd));
        hashCode = (17 * hashCode) + (inputTokenWeights == null ? 0 : System.hashCode(inputTokenWeights));
        hashCode = (17 * hashCode) + (stakedOutputTokenAmount == null ? 0 : System.hashCode(stakedOutputTokenAmount));
        hashCode = (17 * hashCode) + (rewardTokenEmissionsAmount == null ? 0 : System.hashCode(rewardTokenEmissionsAmount));
        hashCode = (17 * hashCode) + (rewardTokenEmissionsUsd == null ? 0 : System.hashCode(rewardTokenEmissionsUsd));
        hashCode = (17 * hashCode) + (cumulativeDepositCount == null ? 0 : System.hashCode(cumulativeDepositCount));
        hashCode = (17 * hashCode) + (dailyDepositCount == null ? 0 : System.hashCode(dailyDepositCount));
        hashCode = (17 * hashCode) + (cumulativeWithdrawCount == null ? 0 : System.hashCode(cumulativeWithdrawCount));
        hashCode = (17 * hashCode) + (dailyWithdrawCount == null ? 0 : System.hashCode(dailyWithdrawCount));
        hashCode = (17 * hashCode) + (cumulativeSwapCount == null ? 0 : System.hashCode(cumulativeSwapCount));
        hashCode = (17 * hashCode) + (dailySwapCount == null ? 0 : System.hashCode(dailySwapCount));
        hashCode = (17 * hashCode) + (positionCount == null ? 0 : System.hashCode(positionCount));
        hashCode = (17 * hashCode) + (openPositionCount == null ? 0 : System.hashCode(openPositionCount));
        hashCode = (17 * hashCode) + (closedPositionCount == null ? 0 : System.hashCode(closedPositionCount));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        return hashCode;
    }
}

