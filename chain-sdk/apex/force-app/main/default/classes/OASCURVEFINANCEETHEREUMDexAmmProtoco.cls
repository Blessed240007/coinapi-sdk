/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * Entity for calculating daily/hourly active users.
 */
public class OASCURVEFINANCEETHEREUMDexAmmProtoco implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * 
     * @return blockRange
     */
    public String blockRange { get; set; }

    /**
     * Smart contract address of the protocol\'s main contract (Factory, Registry, etc)
     * @return id
     */
    public String id { get; set; }

    /**
     * Name of the protocol, including version.
     * @return name
     */
    public String name { get; set; }

    /**
     * Slug of protocol, including version.
     * @return slug
     */
    public String slug { get; set; }

    /**
     * Version of the subgraph schema, in SemVer format (e.g. 1.0.0)
     * @return schemaVersion
     */
    public String schemaVersion { get; set; }

    /**
     * Version of the subgraph implementation, in SemVer format (e.g. 1.0.0)
     * @return subgraphVersion
     */
    public String subgraphVersion { get; set; }

    /**
     * Version of the methodology used to compute metrics, loosely based on SemVer format (e.g. 1.0.0)
     * @return methodologyVersion
     */
    public String methodologyVersion { get; set; }

    /**
     * Current TVL (Total Value Locked) of the entire protocol
     * @return totalValueLockedUsd
     */
    public String totalValueLockedUsd { get; set; }

    /**
     * Current PCV (Protocol Controlled Value). Only relevant for protocols with PCV.
     * @return protocolControlledValueUsd
     */
    public String protocolControlledValueUsd { get; set; }

    /**
     * All historical volume in USD
     * @return cumulativeVolumeUsd
     */
    public String cumulativeVolumeUsd { get; set; }

    /**
     * Revenue claimed by suppliers to the protocol. LPs on DEXs (e.g. 0.25% of the swap fee in Sushiswap). Depositors on Lending Protocols. NFT sellers on OpenSea.
     * @return cumulativeSupplySideRevenueUsd
     */
    public String cumulativeSupplySideRevenueUsd { get; set; }

    /**
     * Gross revenue for the protocol (revenue claimed by protocol). Examples: AMM protocol fee (Sushiâ€™s 0.05%). OpenSea 10% sell fee.
     * @return cumulativeProtocolSideRevenueUsd
     */
    public String cumulativeProtocolSideRevenueUsd { get; set; }

    /**
     * All revenue generated by the protocol. e.g. 0.30% of swap fee in Sushiswap, all yield generated by Yearn.
     * @return cumulativeTotalRevenueUsd
     */
    public String cumulativeTotalRevenueUsd { get; set; }

    /**
     * Number of cumulative unique users
     * @return cumulativeUniqueUsers
     */
    public Integer cumulativeUniqueUsers { get; set; }

    /**
     * Total number of pools
     * @return totalPoolCount
     */
    public Integer totalPoolCount { get; set; }

    /**
     * All pools that belong to this protocol
     * @return poolIds
     */
    public List<String> poolIds { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'block_range' => 'blockRange',
        'schema_version' => 'schemaVersion',
        'subgraph_version' => 'subgraphVersion',
        'methodology_version' => 'methodologyVersion',
        'total_value_locked_usd' => 'totalValueLockedUsd',
        'protocol_controlled_value_usd' => 'protocolControlledValueUsd',
        'cumulative_volume_usd' => 'cumulativeVolumeUsd',
        'cumulative_supply_side_revenue_usd' => 'cumulativeSupplySideRevenueUsd',
        'cumulative_protocol_side_revenue_usd' => 'cumulativeProtocolSideRevenueUsd',
        'cumulative_total_revenue_usd' => 'cumulativeTotalRevenueUsd',
        'cumulative_unique_users' => 'cumulativeUniqueUsers',
        'total_pool_count' => 'totalPoolCount',
        'pool_ids' => 'poolIds'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASCURVEFINANCEETHEREUMDexAmmProtoco() {
        poolIds = new List<String>();
    }

    public static OASCURVEFINANCEETHEREUMDexAmmProtoco getExample() {
        OASCURVEFINANCEETHEREUMDexAmmProtoco cuRVEFINANCEETHEREUMDexAmmProtocolDTO = new OASCURVEFINANCEETHEREUMDexAmmProtoco();
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.blockNumber = 123456789L;
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.blockRange = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.id = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.name = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.slug = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.schemaVersion = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.subgraphVersion = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.methodologyVersion = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.totalValueLockedUsd = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.protocolControlledValueUsd = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeVolumeUsd = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeSupplySideRevenueUsd = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeProtocolSideRevenueUsd = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeTotalRevenueUsd = '';
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeUniqueUsers = 0;
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.totalPoolCount = 0;
          cuRVEFINANCEETHEREUMDexAmmProtocolDTO.poolIds = new List<String>{''};
        return cuRVEFINANCEETHEREUMDexAmmProtocolDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASCURVEFINANCEETHEREUMDexAmmProtoco) {           
            OASCURVEFINANCEETHEREUMDexAmmProtoco cuRVEFINANCEETHEREUMDexAmmProtocolDTO = (OASCURVEFINANCEETHEREUMDexAmmProtoco) obj;
            return this.entryTime == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.entryTime
                && this.recvTime == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.recvTime
                && this.blockNumber == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.blockNumber
                && this.blockRange == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.blockRange
                && this.id == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.id
                && this.name == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.name
                && this.slug == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.slug
                && this.schemaVersion == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.schemaVersion
                && this.subgraphVersion == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.subgraphVersion
                && this.methodologyVersion == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.methodologyVersion
                && this.totalValueLockedUsd == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.totalValueLockedUsd
                && this.protocolControlledValueUsd == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.protocolControlledValueUsd
                && this.cumulativeVolumeUsd == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeVolumeUsd
                && this.cumulativeSupplySideRevenueUsd == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeSupplySideRevenueUsd
                && this.cumulativeProtocolSideRevenueUsd == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeProtocolSideRevenueUsd
                && this.cumulativeTotalRevenueUsd == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeTotalRevenueUsd
                && this.cumulativeUniqueUsers == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.cumulativeUniqueUsers
                && this.totalPoolCount == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.totalPoolCount
                && this.poolIds == cuRVEFINANCEETHEREUMDexAmmProtocolDTO.poolIds;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (blockRange == null ? 0 : System.hashCode(blockRange));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (slug == null ? 0 : System.hashCode(slug));
        hashCode = (17 * hashCode) + (schemaVersion == null ? 0 : System.hashCode(schemaVersion));
        hashCode = (17 * hashCode) + (subgraphVersion == null ? 0 : System.hashCode(subgraphVersion));
        hashCode = (17 * hashCode) + (methodologyVersion == null ? 0 : System.hashCode(methodologyVersion));
        hashCode = (17 * hashCode) + (totalValueLockedUsd == null ? 0 : System.hashCode(totalValueLockedUsd));
        hashCode = (17 * hashCode) + (protocolControlledValueUsd == null ? 0 : System.hashCode(protocolControlledValueUsd));
        hashCode = (17 * hashCode) + (cumulativeVolumeUsd == null ? 0 : System.hashCode(cumulativeVolumeUsd));
        hashCode = (17 * hashCode) + (cumulativeSupplySideRevenueUsd == null ? 0 : System.hashCode(cumulativeSupplySideRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeProtocolSideRevenueUsd == null ? 0 : System.hashCode(cumulativeProtocolSideRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeTotalRevenueUsd == null ? 0 : System.hashCode(cumulativeTotalRevenueUsd));
        hashCode = (17 * hashCode) + (cumulativeUniqueUsers == null ? 0 : System.hashCode(cumulativeUniqueUsers));
        hashCode = (17 * hashCode) + (totalPoolCount == null ? 0 : System.hashCode(totalPoolCount));
        hashCode = (17 * hashCode) + (poolIds == null ? 0 : System.hashCode(poolIds));
        return hashCode;
    }
}

