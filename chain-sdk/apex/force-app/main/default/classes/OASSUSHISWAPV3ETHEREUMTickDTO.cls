/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * 
 */
public class OASSUSHISWAPV3ETHEREUMTickDTO implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     * (pool address)-(tick index)
     * @return id
     */
    public String id { get; set; }

    /**
     * tick index
     * @return index
     */
    public String index { get; set; }

    /**
     * Liquidity pool this tick belongs to
     * @return pool
     */
    public String pool { get; set; }

    /**
     * Creation timestamp
     * @return createdTimestamp
     */
    public String createdTimestamp { get; set; }

    /**
     * Creation block number
     * @return createdBlockNumber
     */
    public String createdBlockNumber { get; set; }

    /**
     * calculated price of token0 of tick within this pool - constant
     * @return prices
     */
    public List<String> prices { get; set; }

    /**
     * total liquidity pool has as tick lower or upper
     * @return liquidityGross
     */
    public String liquidityGross { get; set; }

    /**
     * total liquidity in USD pool has as tick lower or upper
     * @return liquidityGrossUsd
     */
    public String liquidityGrossUsd { get; set; }

    /**
     * how much liquidity changes when tick crossed
     * @return liquidityNet
     */
    public String liquidityNet { get; set; }

    /**
     * how much liquidity in USD changes when tick crossed
     * @return liquidityNetUsd
     */
    public String liquidityNetUsd { get; set; }

    /**
     * Day ID of the most recent daily snapshot
     * @return lastSnapshotDayId
     */
    public Integer lastSnapshotDayId { get; set; }

    /**
     * Hour ID of the most recent hourly snapshot
     * @return lastSnapshotHourId
     */
    public Integer lastSnapshotHourId { get; set; }

    /**
     * Timestamp of the last time this entity was updated
     * @return lastUpdateTimestamp
     */
    public String lastUpdateTimestamp { get; set; }

    /**
     * Block number of the last time this entity was updated
     * @return lastUpdateBlockNumber
     */
    public String lastUpdateBlockNumber { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'created_timestamp' => 'createdTimestamp',
        'created_block_number' => 'createdBlockNumber',
        'liquidity_gross' => 'liquidityGross',
        'liquidity_gross_usd' => 'liquidityGrossUsd',
        'liquidity_net' => 'liquidityNet',
        'liquidity_net_usd' => 'liquidityNetUsd',
        'last_snapshot_day_id' => 'lastSnapshotDayId',
        'last_snapshot_hour_id' => 'lastSnapshotHourId',
        'last_update_timestamp' => 'lastUpdateTimestamp',
        'last_update_block_number' => 'lastUpdateBlockNumber'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSUSHISWAPV3ETHEREUMTickDTO() {
        prices = new List<String>();
    }

    public static OASSUSHISWAPV3ETHEREUMTickDTO getExample() {
        OASSUSHISWAPV3ETHEREUMTickDTO suSHISWAPV3ETHEREUMTickDTO = new OASSUSHISWAPV3ETHEREUMTickDTO();
          suSHISWAPV3ETHEREUMTickDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMTickDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMTickDTO.blockNumber = 123456789L;
          suSHISWAPV3ETHEREUMTickDTO.id = '';
          suSHISWAPV3ETHEREUMTickDTO.index = '';
          suSHISWAPV3ETHEREUMTickDTO.pool = '';
          suSHISWAPV3ETHEREUMTickDTO.createdTimestamp = '';
          suSHISWAPV3ETHEREUMTickDTO.createdBlockNumber = '';
          suSHISWAPV3ETHEREUMTickDTO.prices = new List<String>{''};
          suSHISWAPV3ETHEREUMTickDTO.liquidityGross = '';
          suSHISWAPV3ETHEREUMTickDTO.liquidityGrossUsd = '';
          suSHISWAPV3ETHEREUMTickDTO.liquidityNet = '';
          suSHISWAPV3ETHEREUMTickDTO.liquidityNetUsd = '';
          suSHISWAPV3ETHEREUMTickDTO.lastSnapshotDayId = 0;
          suSHISWAPV3ETHEREUMTickDTO.lastSnapshotHourId = 0;
          suSHISWAPV3ETHEREUMTickDTO.lastUpdateTimestamp = '';
          suSHISWAPV3ETHEREUMTickDTO.lastUpdateBlockNumber = '';
        return suSHISWAPV3ETHEREUMTickDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSUSHISWAPV3ETHEREUMTickDTO) {           
            OASSUSHISWAPV3ETHEREUMTickDTO suSHISWAPV3ETHEREUMTickDTO = (OASSUSHISWAPV3ETHEREUMTickDTO) obj;
            return this.entryTime == suSHISWAPV3ETHEREUMTickDTO.entryTime
                && this.recvTime == suSHISWAPV3ETHEREUMTickDTO.recvTime
                && this.blockNumber == suSHISWAPV3ETHEREUMTickDTO.blockNumber
                && this.id == suSHISWAPV3ETHEREUMTickDTO.id
                && this.index == suSHISWAPV3ETHEREUMTickDTO.index
                && this.pool == suSHISWAPV3ETHEREUMTickDTO.pool
                && this.createdTimestamp == suSHISWAPV3ETHEREUMTickDTO.createdTimestamp
                && this.createdBlockNumber == suSHISWAPV3ETHEREUMTickDTO.createdBlockNumber
                && this.prices == suSHISWAPV3ETHEREUMTickDTO.prices
                && this.liquidityGross == suSHISWAPV3ETHEREUMTickDTO.liquidityGross
                && this.liquidityGrossUsd == suSHISWAPV3ETHEREUMTickDTO.liquidityGrossUsd
                && this.liquidityNet == suSHISWAPV3ETHEREUMTickDTO.liquidityNet
                && this.liquidityNetUsd == suSHISWAPV3ETHEREUMTickDTO.liquidityNetUsd
                && this.lastSnapshotDayId == suSHISWAPV3ETHEREUMTickDTO.lastSnapshotDayId
                && this.lastSnapshotHourId == suSHISWAPV3ETHEREUMTickDTO.lastSnapshotHourId
                && this.lastUpdateTimestamp == suSHISWAPV3ETHEREUMTickDTO.lastUpdateTimestamp
                && this.lastUpdateBlockNumber == suSHISWAPV3ETHEREUMTickDTO.lastUpdateBlockNumber;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (index == null ? 0 : System.hashCode(index));
        hashCode = (17 * hashCode) + (pool == null ? 0 : System.hashCode(pool));
        hashCode = (17 * hashCode) + (createdTimestamp == null ? 0 : System.hashCode(createdTimestamp));
        hashCode = (17 * hashCode) + (createdBlockNumber == null ? 0 : System.hashCode(createdBlockNumber));
        hashCode = (17 * hashCode) + (prices == null ? 0 : System.hashCode(prices));
        hashCode = (17 * hashCode) + (liquidityGross == null ? 0 : System.hashCode(liquidityGross));
        hashCode = (17 * hashCode) + (liquidityGrossUsd == null ? 0 : System.hashCode(liquidityGrossUsd));
        hashCode = (17 * hashCode) + (liquidityNet == null ? 0 : System.hashCode(liquidityNet));
        hashCode = (17 * hashCode) + (liquidityNetUsd == null ? 0 : System.hashCode(liquidityNetUsd));
        hashCode = (17 * hashCode) + (lastSnapshotDayId == null ? 0 : System.hashCode(lastSnapshotDayId));
        hashCode = (17 * hashCode) + (lastSnapshotHourId == null ? 0 : System.hashCode(lastSnapshotHourId));
        hashCode = (17 * hashCode) + (lastUpdateTimestamp == null ? 0 : System.hashCode(lastUpdateTimestamp));
        hashCode = (17 * hashCode) + (lastUpdateBlockNumber == null ? 0 : System.hashCode(lastUpdateBlockNumber));
        return hashCode;
    }
}

