/*
 * On Chain Dapps - REST API
 * \nThis section will provide necessary information about the `OnChain API` protocol. \n<br/><br/>\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.        \n                    
 *
 * The version of the OpenAPI document: v1
 * Contact: support@coinapi.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * 
 */
public class OASSUSHISWAPV3ETHEREUMPositionSnapsh implements OAS.MappedProperties {
    /**
     * Get entryTime
     * @return entryTime
     */
    public Datetime entryTime { get; set; }

    /**
     * Get recvTime
     * @return recvTime
     */
    public Datetime recvTime { get; set; }

    /**
     * Number of block in which entity was recorded.
     * @return blockNumber
     */
    public Long blockNumber { get; set; }

    /**
     *  (position id )-( transaction hash )-( log index ) 
     * @return id
     */
    public String id { get; set; }

    /**
     * Transaction hash of the transaction that triggered this snapshot
     * @return hash
     */
    public String hash { get; set; }

    /**
     * Event log index. For transactions that don\'t emit event, create arbitrary index starting from 0
     * @return logIndex
     */
    public Integer logIndex { get; set; }

    /**
     * Nonce of the transaction that triggered this snapshot
     * @return nonce
     */
    public String nonce { get; set; }

    /**
     * Position of this snapshot
     * @return position
     */
    public String position { get; set; }

    /**
     * Type of token used to track liquidity
     * @return liquidityTokenType
     */
    public String liquidityTokenType { get; set; }

    /**
     * total position liquidity
     * @return liquidity
     */
    public String liquidity { get; set; }

    /**
     * total position liquidity in USD
     * @return liquidityUsd
     */
    public String liquidityUsd { get; set; }

    /**
     * amount of tokens ever deposited to position
     * @return cumulativeDepositTokenAmounts
     */
    public List<String> cumulativeDepositTokenAmounts { get; set; }

    /**
     * amount of tokens in USD deposited to position
     * @return cumulativeDepositUsd
     */
    public String cumulativeDepositUsd { get; set; }

    /**
     * amount of tokens ever withdrawn from position (without fees)
     * @return cumulativeWithdrawTokenAmounts
     */
    public List<String> cumulativeWithdrawTokenAmounts { get; set; }

    /**
     * amount of tokens in USD withdrawn from position (without fees)
     * @return cumulativeWithdrawUsd
     */
    public String cumulativeWithdrawUsd { get; set; }

    /**
     * Total reward token accumulated under this position, in native amounts
     * @return cumulativeRewardTokenAmounts
     */
    public List<String> cumulativeRewardTokenAmounts { get; set; }

    /**
     * Total reward token accumulated under this position, in USD
     * @return cumulativeRewardUsd
     */
    public List<String> cumulativeRewardUsd { get; set; }

    /**
     * Number of deposits related to this position
     * @return depositCount
     */
    public Integer depositCount { get; set; }

    /**
     * Number of withdrawals related to this position
     * @return withdrawCount
     */
    public Integer withdrawCount { get; set; }

    /**
     * Timestamp of this snapshot
     * @return timestamp
     */
    public String timestamp { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'entry_time' => 'entryTime',
        'recv_time' => 'recvTime',
        'block_number' => 'blockNumber',
        'log_index' => 'logIndex',
        'liquidity_token_type' => 'liquidityTokenType',
        'liquidity_usd' => 'liquidityUsd',
        'cumulative_deposit_token_amounts' => 'cumulativeDepositTokenAmounts',
        'cumulative_deposit_usd' => 'cumulativeDepositUsd',
        'cumulative_withdraw_token_amounts' => 'cumulativeWithdrawTokenAmounts',
        'cumulative_withdraw_usd' => 'cumulativeWithdrawUsd',
        'cumulative_reward_token_amounts' => 'cumulativeRewardTokenAmounts',
        'cumulative_reward_usd' => 'cumulativeRewardUsd',
        'deposit_count' => 'depositCount',
        'withdraw_count' => 'withdrawCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASSUSHISWAPV3ETHEREUMPositionSnapsh() {
        cumulativeDepositTokenAmounts = new List<String>();
        cumulativeWithdrawTokenAmounts = new List<String>();
        cumulativeRewardTokenAmounts = new List<String>();
        cumulativeRewardUsd = new List<String>();
    }

    public static OASSUSHISWAPV3ETHEREUMPositionSnapsh getExample() {
        OASSUSHISWAPV3ETHEREUMPositionSnapsh suSHISWAPV3ETHEREUMPositionSnapshotDTO = new OASSUSHISWAPV3ETHEREUMPositionSnapsh();
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.entryTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.recvTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.blockNumber = 123456789L;
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.id = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.hash = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.logIndex = 0;
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.nonce = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.position = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.liquidityTokenType = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.liquidity = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.liquidityUsd = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositTokenAmounts = new List<String>{''};
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositUsd = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawTokenAmounts = new List<String>{''};
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawUsd = '';
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardTokenAmounts = new List<String>{''};
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardUsd = new List<String>{''};
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.depositCount = 0;
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.withdrawCount = 0;
          suSHISWAPV3ETHEREUMPositionSnapshotDTO.timestamp = '';
        return suSHISWAPV3ETHEREUMPositionSnapshotDTO;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASSUSHISWAPV3ETHEREUMPositionSnapsh) {           
            OASSUSHISWAPV3ETHEREUMPositionSnapsh suSHISWAPV3ETHEREUMPositionSnapshotDTO = (OASSUSHISWAPV3ETHEREUMPositionSnapsh) obj;
            return this.entryTime == suSHISWAPV3ETHEREUMPositionSnapshotDTO.entryTime
                && this.recvTime == suSHISWAPV3ETHEREUMPositionSnapshotDTO.recvTime
                && this.blockNumber == suSHISWAPV3ETHEREUMPositionSnapshotDTO.blockNumber
                && this.id == suSHISWAPV3ETHEREUMPositionSnapshotDTO.id
                && this.hash == suSHISWAPV3ETHEREUMPositionSnapshotDTO.hash
                && this.logIndex == suSHISWAPV3ETHEREUMPositionSnapshotDTO.logIndex
                && this.nonce == suSHISWAPV3ETHEREUMPositionSnapshotDTO.nonce
                && this.position == suSHISWAPV3ETHEREUMPositionSnapshotDTO.position
                && this.liquidityTokenType == suSHISWAPV3ETHEREUMPositionSnapshotDTO.liquidityTokenType
                && this.liquidity == suSHISWAPV3ETHEREUMPositionSnapshotDTO.liquidity
                && this.liquidityUsd == suSHISWAPV3ETHEREUMPositionSnapshotDTO.liquidityUsd
                && this.cumulativeDepositTokenAmounts == suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositTokenAmounts
                && this.cumulativeDepositUsd == suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeDepositUsd
                && this.cumulativeWithdrawTokenAmounts == suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawTokenAmounts
                && this.cumulativeWithdrawUsd == suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeWithdrawUsd
                && this.cumulativeRewardTokenAmounts == suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardTokenAmounts
                && this.cumulativeRewardUsd == suSHISWAPV3ETHEREUMPositionSnapshotDTO.cumulativeRewardUsd
                && this.depositCount == suSHISWAPV3ETHEREUMPositionSnapshotDTO.depositCount
                && this.withdrawCount == suSHISWAPV3ETHEREUMPositionSnapshotDTO.withdrawCount
                && this.timestamp == suSHISWAPV3ETHEREUMPositionSnapshotDTO.timestamp;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (entryTime == null ? 0 : System.hashCode(entryTime));
        hashCode = (17 * hashCode) + (recvTime == null ? 0 : System.hashCode(recvTime));
        hashCode = (17 * hashCode) + (blockNumber == null ? 0 : System.hashCode(blockNumber));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (hash == null ? 0 : System.hashCode(hash));
        hashCode = (17 * hashCode) + (logIndex == null ? 0 : System.hashCode(logIndex));
        hashCode = (17 * hashCode) + (nonce == null ? 0 : System.hashCode(nonce));
        hashCode = (17 * hashCode) + (position == null ? 0 : System.hashCode(position));
        hashCode = (17 * hashCode) + (liquidityTokenType == null ? 0 : System.hashCode(liquidityTokenType));
        hashCode = (17 * hashCode) + (liquidity == null ? 0 : System.hashCode(liquidity));
        hashCode = (17 * hashCode) + (liquidityUsd == null ? 0 : System.hashCode(liquidityUsd));
        hashCode = (17 * hashCode) + (cumulativeDepositTokenAmounts == null ? 0 : System.hashCode(cumulativeDepositTokenAmounts));
        hashCode = (17 * hashCode) + (cumulativeDepositUsd == null ? 0 : System.hashCode(cumulativeDepositUsd));
        hashCode = (17 * hashCode) + (cumulativeWithdrawTokenAmounts == null ? 0 : System.hashCode(cumulativeWithdrawTokenAmounts));
        hashCode = (17 * hashCode) + (cumulativeWithdrawUsd == null ? 0 : System.hashCode(cumulativeWithdrawUsd));
        hashCode = (17 * hashCode) + (cumulativeRewardTokenAmounts == null ? 0 : System.hashCode(cumulativeRewardTokenAmounts));
        hashCode = (17 * hashCode) + (cumulativeRewardUsd == null ? 0 : System.hashCode(cumulativeRewardUsd));
        hashCode = (17 * hashCode) + (depositCount == null ? 0 : System.hashCode(depositCount));
        hashCode = (17 * hashCode) + (withdrawCount == null ? 0 : System.hashCode(withdrawCount));
        hashCode = (17 * hashCode) + (timestamp == null ? 0 : System.hashCode(timestamp));
        return hashCode;
    }
}

